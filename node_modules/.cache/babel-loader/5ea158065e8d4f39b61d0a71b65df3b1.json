{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\src\\\\layout\\\\DrawerLayout.js\",\n    _s = $RefreshSig$();\n\nimport { Drawer, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport React, { useState } from 'react';\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 440;\n\nconst icon = /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 14\n}, this);\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      // width: `calc(100% - ${drawerWidth}px)`,\n      width: '100%'\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    position: \"relative\"\n  },\n  content: {\n    flexGrow: 1,\n    width: `calc(100% - ${drawerWidth}px)`,\n    padding: theme.spacing(3)\n  }\n}));\n\nconst DrawerLayout = ({\n  objects,\n  children = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [tabIndex, setTabIndex] = useState(1);\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  async function handleTabIndexChange(index) {\n    await timeout(100);\n    setTabIndex(index);\n  }\n\n  function DrawerList({\n    objects\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: objects.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => handleTabIndexChange(index),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, item.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(User, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        style: {\n          width: drawerWidth\n        },\n        children: /*#__PURE__*/_jsxDEV(Drawer, {\n          classes: {\n            paper: classes.drawerPaper\n          },\n          variant: \"permanent\",\n          open: true,\n          children: /*#__PURE__*/_jsxDEV(DrawerList, {\n            objects: objects.map(item => ({\n              label: item.label,\n              icon: item.icon\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.content,\n        children: objects.map(item => ({\n          content: item.content\n        })).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          hidden: tabIndex !== index,\n          children: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawerLayout, \"CRRrSTMIvbvpmQKMkesilDx9g7Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = DrawerLayout;\nexport default DrawerLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerLayout\");","map":{"version":3,"sources":["D:/program/java/coursebucket/src/layout/DrawerLayout.js"],"names":["Drawer","Grid","List","ListItem","ListItemIcon","ListItemText","makeStyles","InboxIcon","React","useState","User","drawerWidth","icon","useStyles","theme","root","drawer","breakpoints","up","width","flexShrink","appBar","menuButton","marginRight","spacing","display","toolbar","mixins","drawerPaper","position","content","flexGrow","padding","DrawerLayout","objects","children","classes","tabIndex","setTabIndex","timeout","delay","Promise","res","setTimeout","handleTabIndexChange","index","DrawerList","map","item","label","paper"],"mappings":"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","sourcesContent":["import { Drawer, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport React, { useState } from 'react';\r\nimport User from './User';\r\n\r\n\r\n\r\nconst drawerWidth = 440;\r\nconst icon = <InboxIcon />\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      width: '100%',\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nconst DrawerLayout = ({\r\n  objects,\r\n  children = <></>\r\n}) => {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(1);\r\n  function timeout(delay) {\r\n    return new Promise(res => setTimeout(res, delay));\r\n  }\r\n  async function handleTabIndexChange(index) {\r\n    await timeout(100);\r\n    setTabIndex(index);\r\n  }\r\n\r\n\r\n  function DrawerList({ objects }) {\r\n    return (\r\n      <div>\r\n        <List>\r\n          {\r\n            objects.map((item, index) => (\r\n              <ListItem\r\n                button\r\n                key={item.label}\r\n                onClick={() => handleTabIndexChange(index)}\r\n              >\r\n                {/* <ListItemIcon>{<InboxIcon />}</ListItemIcon> */}\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItem>\r\n            ))\r\n          }\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <User>\r\n      <Grid container direction=\"row\">\r\n        <Grid item sm style={{ width: drawerWidth }}>\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            <DrawerList objects={objects.map(item => ({ label: item.label, icon: item.icon }))} />\r\n          </Drawer>\r\n        </Grid>\r\n        <Grid item className={classes.content}>\r\n          {\r\n            objects.map(item => ({ content: item.content })).map((item, index) => (\r\n              <div hidden={tabIndex !== index}>\r\n                {item.content}\r\n              </div>\r\n            ))\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  )\r\n}\r\n\r\nexport default DrawerLayout\r\n\r\n"]},"metadata":{},"sourceType":"module"}