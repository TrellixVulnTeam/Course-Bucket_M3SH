{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\src\\\\components\\\\createCourse\\\\AddAbleTextField.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, IconButton, TextField, Typography } from \"@material-ui/core\";\nimport { AddCircle, DeleteForever, ImportExport } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { IconPicker } from \"react-fa-icon-picker\";\nimport { ReactSortable } from \"react-sortablejs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AddAbleTextField({\n  onObjectsChange = data => console.log(data),\n  header = \"\",\n  showIconPicker = false,\n  objects = [{\n    id: 0,\n    value: \"\",\n    icon: showIconPicker ? \"FaIcons\" : \"\"\n  }]\n}) {\n  _s();\n\n  const defaultObject = {\n    id: 10,\n    value: \"\",\n    icon: objects[0].icon\n  };\n  const [data, setData] = useState(objects);\n\n  function onDataChange(newData) {\n    setData(newData);\n    onObjectsChange(newData);\n  }\n\n  function onTextFieldChange(index, text) {\n    let newArray = [...data];\n    newArray[index] = { ...data[index],\n      value: text\n    };\n    onDataChange(newArray);\n  }\n\n  function addTextField(index) {\n    let newArray = [...data];\n    newArray.splice(index, 0, defaultObject);\n    onDataChange(newArray);\n  }\n\n  function onDelete(index) {\n    let newArray = [...data];\n    newArray.splice(index, 1);\n    onDataChange(newArray);\n  } // function upArrowClick(index) {\n  //   if (index === 0) return;\n  //   let array = data.splice(0);\n  //   let obj = array[index];\n  //   array[index] = array[index - 1];\n  //   array[index - 1] = obj;\n  //   onDataChange(array);\n  // }\n  // function downArrowClick(index) {\n  //   if (index === data.length - 1) return;\n  //   let array = data.splice(0);\n  //   let obj = array[index];\n  //   array[index] = array[index + 1];\n  //   array[index + 1] = obj;\n  //   onDataChange(array);\n  // }\n\n\n  function onIconValueChange(index, icon) {\n    let newArray = [...data];\n    newArray.splice(index, 1, { ...newArray[index],\n      icon: icon\n    });\n    onDataChange(newArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [header !== \"\" && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(ReactSortable, {\n      list: data,\n      setList: setData,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        onChange: event => onTextFieldChange(index, event.target.value),\n        value: item.value,\n        variant: \"outlined\",\n        InputProps: {\n          // endAdornment: (\n          //   <>\n          //     <IconButton onClick={event => upArrowClick(index)}>\n          //       <ArrowUpward />\n          //     </IconButton>\n          //     <IconButton onClick={event => downArrowClick(index)} >\n          //       <ArrowDownward />\n          //     </IconButton>\n          //   </>\n          // ),\n          startAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(ImportExport, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: event => addTextField(index),\n              children: /*#__PURE__*/_jsxDEV(AddCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: event => onDelete(index),\n              children: /*#__PURE__*/_jsxDEV(DeleteForever, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), showIconPicker && /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(IconPicker, {\n                value: item.icon,\n                onChange: icon => onIconValueChange(index, icon)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddAbleTextField, \"7Bec+IeakTtQtCBD03w8MuezqBc=\");\n\n_c = AddAbleTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAbleTextField\");","map":{"version":3,"sources":["D:/program/java/coursebucket/src/components/createCourse/AddAbleTextField.js"],"names":["Grid","IconButton","TextField","Typography","AddCircle","DeleteForever","ImportExport","React","useState","IconPicker","ReactSortable","AddAbleTextField","onObjectsChange","data","console","log","header","showIconPicker","objects","id","value","icon","defaultObject","setData","onDataChange","newData","onTextFieldChange","index","text","newArray","addTextField","splice","onDelete","onIconValueChange","map","item","event","target","startAdornment"],"mappings":"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","sourcesContent":["import { Grid, IconButton, TextField, Typography } from \"@material-ui/core\";\r\nimport { AddCircle, DeleteForever, ImportExport } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { IconPicker } from \"react-fa-icon-picker\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\n\r\nexport function AddAbleTextField({\r\n  onObjectsChange = (data) => (console.log(data)),\r\n  header = \"\",\r\n  showIconPicker = false,\r\n  objects = [{ id: 0, value: \"\", icon: showIconPicker ? \"FaIcons\" : \"\" }],\r\n}) {\r\n  const defaultObject = { id: 10, value: \"\", icon: objects[0].icon };\r\n  const [data, setData] = useState(objects);\r\n  function onDataChange(newData) {\r\n    setData(newData);\r\n    onObjectsChange(newData);\r\n  }\r\n  function onTextFieldChange(index, text) {\r\n    let newArray = [...data];\r\n    newArray[index] = { ...data[index], value: text }\r\n    onDataChange(newArray);\r\n  }\r\n  function addTextField(index) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 0, defaultObject);\r\n    onDataChange(newArray);\r\n  }\r\n  function onDelete(index) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 1);\r\n    onDataChange(newArray);\r\n  }\r\n  // function upArrowClick(index) {\r\n  //   if (index === 0) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index - 1];\r\n  //   array[index - 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  // function downArrowClick(index) {\r\n  //   if (index === data.length - 1) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index + 1];\r\n  //   array[index + 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  function onIconValueChange(index, icon) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 1, { ...newArray[index], icon: icon });\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {header !== \"\" && <Typography variant=\"h5\" gutterBottom>{header}</Typography>}\r\n      <ReactSortable\r\n        list={data}\r\n        setList={setData}\r\n      >\r\n        {\r\n          data.map((item, index) => (\r\n            <TextField\r\n              fullWidth\r\n              onChange={(event) => onTextFieldChange(index, event.target.value)}\r\n              value={item.value}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                // endAdornment: (\r\n                //   <>\r\n\r\n                //     <IconButton onClick={event => upArrowClick(index)}>\r\n                //       <ArrowUpward />\r\n                //     </IconButton>\r\n                //     <IconButton onClick={event => downArrowClick(index)} >\r\n                //       <ArrowDownward />\r\n                //     </IconButton>\r\n                //   </>\r\n                // ),\r\n                startAdornment: (\r\n                  <>\r\n                    <IconButton >\r\n                      <ImportExport />\r\n                    </IconButton>\r\n                    <IconButton onClick={(event) => addTextField(index)} >\r\n                      <AddCircle />\r\n                    </IconButton>\r\n                    <IconButton onClick={(event) => onDelete(index)} >\r\n                      <DeleteForever />\r\n                    </IconButton>\r\n                    {\r\n                      showIconPicker && <IconButton >\r\n                        <IconPicker value={item.icon} onChange={(icon) => onIconValueChange(index, icon)} />\r\n                      </IconButton>\r\n                    }\r\n                  </>\r\n                )\r\n              }}\r\n            />\r\n          ))\r\n        }\r\n      </ReactSortable>\r\n    </Grid>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}