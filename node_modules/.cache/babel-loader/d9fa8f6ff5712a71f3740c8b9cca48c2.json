{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\src\\\\AdminPanel\\\\CountryComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountryComponent(props) {\n  _s();\n\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Id',\n    field: 'id',\n    editable: false\n  }, {\n    title: 'Country Name',\n    field: 'countryname'\n  }, {\n    title: 'Admin',\n    field: 'admin'\n  }]);\n  const rows = [];\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Country\",\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setData([...data, newData]);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setData([...dataUpdate]);\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setData([...dataDelete]);\n          resolve();\n        }, 1000);\n      })\n    },\n    options: {\n      actionsColumnIndex: -1,\n      addRowPosition: \"first\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryComponent, \"20WidsT7fCOuvUmt8wRCzxkbXBg=\");\n\n_c = CountryComponent;\nexport default CountryComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryComponent\");","map":{"version":3,"sources":["D:/program/java/coursebucket/src/AdminPanel/CountryComponent.js"],"names":["React","MaterialTable","CountryComponent","props","useState","columns","setColumns","title","field","editable","rows","data","onRowAdd","newData","Promise","resolve","reject","setTimeout","setData","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","addRowPosition"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,KAArB;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,CACrC;AAACG,IAAAA,KAAK,EAAE,IAAR;AAAaC,IAAAA,KAAK,EAAE,IAApB;AAAyBC,IAAAA,QAAQ,EAAG;AAApC,GADqC,EAErC;AACEF,IAAAA,KAAK,EAAE,cADT;AACyBC,IAAAA,KAAK,EAAE;AADhC,GAFqC,EAKrC;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GALqC,CAAD,CAAtC;AAQA,QAAME,IAAI,GAAE,EAAZ;AAEA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,IAAI,EAAEM,IAHR;AAIE,IAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAE/BC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,OAAO,CAAC,CAAC,GAAGP,IAAJ,EAAUE,OAAV,CAAD,CAAP;AAEAE,UAAAA,OAAO;AACR,SAJS,EAIP,IAJO,CAAV;AAKD,OAPD,CAFM;AAURI,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMI,UAAU,GAAG,CAAC,GAAGV,IAAJ,CAAnB;AACA,gBAAMW,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAH,UAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBT,OAApB;AACAK,UAAAA,OAAO,CAAC,CAAC,GAAGG,UAAJ,CAAD,CAAP;AAEAN,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD,CAXM;AAqBRU,MAAAA,WAAW,EAAEL,OAAO,IAClB,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMS,UAAU,GAAG,CAAC,GAAGf,IAAJ,CAAnB;AACA,gBAAMW,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAE,UAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACAJ,UAAAA,OAAO,CAAC,CAAC,GAAGQ,UAAJ,CAAD,CAAP;AAEAX,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD;AAtBM,KAJZ;AAqCE,IAAA,OAAO,EAAE;AACPa,MAAAA,kBAAkB,EAAE,CAAC,CADd;AACiBC,MAAAA,cAAc,EAAE;AADjC;AArCX;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAxDQ3B,gB;;KAAAA,gB;AA0DT,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    {title :'Id',field :'id',editable : false},\r\n    { \r\n      title: 'Country Name', field: 'countryname'\r\n    },\r\n    { title: 'Admin', field: 'admin' }\r\n  ]);\r\n\r\n  const rows =[]\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Country\"\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1, addRowPosition: \"first\"\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CountryComponent"]},"metadata":{},"sourceType":"module"}