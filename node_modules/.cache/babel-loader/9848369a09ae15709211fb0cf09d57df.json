{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\src\\\\AdminPanel\\\\CountryComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport CountryService from '../AdminPanel/api/CountryService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountryComponent(props) {\n  var data;\n  CountryService.getAllTCountries('shammya').then(response => {\n    console.log(response.data);\n    data = response.data; //callData(response.data)\n    //setData(response.data);\n    //setData(response.data)\n  });\n  return /*#__PURE__*/_jsxDEV(CountryComponent2, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n\n_c = CountryComponent;\n\nfunction CountryComponent2(props) {\n  _s();\n\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Id',\n    field: 'id'\n  }, {\n    title: 'Country Name',\n    field: 'name'\n  }, {\n    title: 'Admin',\n    field: 'admin'\n  }]);\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Country\",\n    columns: columns,\n    data: props.data,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          setData([...props.data, newData]);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setData([...dataUpdate]);\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1);\n          setData([...dataDelete]);\n          resolve();\n        }, 1000);\n      })\n    },\n    options: {\n      actionsColumnIndex: -1,\n      addRowPosition: \"first\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryComponent2, \"gg8kAKDCXJpTvW8ssehGZB12hxQ=\");\n\n_c2 = CountryComponent2;\nexport default CountryComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountryComponent\");\n$RefreshReg$(_c2, \"CountryComponent2\");","map":{"version":3,"sources":["D:/program/java/coursebucket/src/AdminPanel/CountryComponent.js"],"names":["React","MaterialTable","CountryService","CountryComponent","props","data","getAllTCountries","then","response","console","log","CountryComponent2","useState","columns","setColumns","title","field","onRowAdd","newData","Promise","resolve","reject","setTimeout","setData","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","addRowPosition"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,MAAIC,IAAJ;AACAH,EAAAA,cAAc,CAACI,gBAAf,CAAgC,SAAhC,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACAA,IAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAhB,CAFgB,CAGhB;AACA;AACA;AACD,GAPH;AASE,sBACE,QAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF;AAGH;;KAdQF,gB;;AAiBT,SAASQ,iBAAT,CAA2BP,KAA3B,EAAkC;AAAA;;AAChC,QAAM;AAAEQ,IAAAA;AAAF,MAAeZ,KAArB;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,CACrC;AAAEG,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADqC,EAErC;AACED,IAAAA,KAAK,EAAE,cADT;AACyBC,IAAAA,KAAK,EAAE;AADhC,GAFqC,EAKrC;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GALqC,CAAD,CAAtC;AASA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,IAAI,EAAET,KAAK,CAACC,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRY,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAE/BC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,OAAO,CAAC,CAAC,GAAGnB,KAAK,CAACC,IAAV,EAAgBa,OAAhB,CAAD,CAAP;AAEAE,UAAAA,OAAO;AACR,SAJS,EAIP,IAJO,CAAV;AAKD,OAPD,CAFM;AAURI,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMI,UAAU,GAAG,CAAC,GAAGrB,IAAJ,CAAnB;AACA,gBAAMsB,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAH,UAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBT,OAApB;AACAK,UAAAA,OAAO,CAAC,CAAC,GAAGG,UAAJ,CAAD,CAAP;AAEAN,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD,CAXM;AAqBRU,MAAAA,WAAW,EAAEL,OAAO,IAClB,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMS,UAAU,GAAG,CAAC,GAAG1B,IAAJ,CAAnB;AACA,gBAAMsB,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAE,UAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACAJ,UAAAA,OAAO,CAAC,CAAC,GAAGQ,UAAJ,CAAD,CAAP;AAEAX,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD;AAtBM,KAJZ;AAqCE,IAAA,OAAO,EAAE;AACPa,MAAAA,kBAAkB,EAAE,CAAC,CADd;AACiBC,MAAAA,cAAc,EAAE;AADjC;AArCX;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAvDQvB,iB;;MAAAA,iB;AAyDT,eAAeR,gBAAf","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CountryService from '../AdminPanel/api/CountryService.js'\r\n\r\n\r\nfunction CountryComponent(props){\r\n  var data;\r\n  CountryService.getAllTCountries('shammya')\r\n    .then(response => {\r\n      console.log(response.data)\r\n      data = response.data;\r\n      //callData(response.data)\r\n      //setData(response.data);\r\n      //setData(response.data)\r\n    }\r\n    )\r\n    return (\r\n      <CountryComponent2 data={data}/>\r\n    )\r\n}\r\n\r\n\r\nfunction CountryComponent2(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id' },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'admin' }\r\n  ])\r\n\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Country\"\r\n      columns={columns}\r\n      data={props.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n              setData([...props.data, newData]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1, addRowPosition: \"first\"\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CountryComponent"]},"metadata":{},"sourceType":"module"}