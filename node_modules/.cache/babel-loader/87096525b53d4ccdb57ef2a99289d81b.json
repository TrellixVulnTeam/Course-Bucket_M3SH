{"ast":null,"code":"export const DeviceWidthObject = {\n  MobileSmall: {\n    max: 320,\n    min: 0\n  },\n  MobileMedium: {\n    max: 375,\n    min: 321\n  },\n  MobileLarge: {\n    max: 767,\n    min: 376\n  },\n  Tablet: {\n    max: 991,\n    min: 768\n  },\n  LaptopSmall: {\n    max: 1024,\n    min: 992\n  },\n  LaptopLarge: {\n    max: 1440,\n    min: 1025\n  },\n  LargerThanLaptop: {\n    max: 2560,\n    min: 1441\n  },\n  LargeScreenMax: {\n    max: 999999,\n    min: 2561\n  }\n};\nexport const IdDeviceBreakpointsByWidth = {\n  laptop_max: 1440,\n  laptop_min: 992,\n  tablet_max: 991,\n  tablet_min: 768,\n  mobile_max: 767,\n  default_min: 768 // Unrecognized device\n\n};\nexport const IdMobileHeight = {\n  mobileLandscape_min: 320,\n  mobileLandscape_max: 425\n};\nexport const getWindowDimension = () => {\n  const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n  return {\n    width,\n    height\n  };\n};\nexport const getDeviceTypeInfo = () => {\n  const {\n    width,\n    height\n  } = getWindowDimension();\n  const buildDeviceDetails = {\n    deviceType: '',\n    deviceTypeVariant: '',\n    orientation: 'Portrait',\n    width,\n    height,\n    isFallback: false\n  }; //  Edge case\n\n  const hasEdgeCase = handleExceptions(buildDeviceDetails, width, height);\n\n  if (hasEdgeCase) {\n    return hasEdgeCase;\n  }\n\n  if (height < width) {\n    // Orientation is landscape\n    buildDeviceDetails.orientation = 'Landscape';\n\n    if (height <= IdMobileHeight.mobileLandscape_max) {\n      // Mobile (landscape)\n      buildDeviceDetails.deviceType = 'Mobile';\n\n      for (const devc in DeviceWidthObject) {\n        if (height <= DeviceWidthObject[devc].max && height >= DeviceWidthObject[devc].min) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else if (width <= IdDeviceBreakpointsByWidth.tablet_max && width >= IdDeviceBreakpointsByWidth.tablet_min) {\n      // Tablet (landscape)\n      buildDeviceDetails.deviceType = 'Tablet';\n      buildDeviceDetails.deviceTypeVariant = 'Tablet';\n    } else if (width <= IdDeviceBreakpointsByWidth.laptop_max && width >= IdDeviceBreakpointsByWidth.laptop_min) {\n      // Laptop (landscape)\n      buildDeviceDetails.deviceType = 'Laptop';\n\n      for (const devc in DeviceWidthObject) {\n        if (width <= DeviceWidthObject[devc].max && width >= DeviceWidthObject[devc].min) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else if (width > IdDeviceBreakpointsByWidth.laptop_max) {\n      // Larger than Laptop (landscape)\n      buildDeviceDetails.deviceType = 'LargerThanLaptop';\n\n      for (const devc in DeviceWidthObject) {\n        if (width <= DeviceWidthObject[devc].max && width >= DeviceWidthObject[devc].min) {\n          buildDeviceDetails.deviceTypeVariant = devc;\n          break;\n        }\n      }\n    } else {\n      // TODO: UNKNOWN realm\n      buildDeviceDetails.deviceType = 'Mobile';\n      buildDeviceDetails.deviceTypeVariant = 'MobileLarge';\n      buildDeviceDetails.isFallback = true;\n    }\n\n    return buildDeviceDetails;\n  } else {\n    // Orientation is portrait\n    buildDeviceDetails.orientation = 'Portrait';\n\n    for (const devc in DeviceWidthObject) {\n      if (width <= DeviceWidthObject[devc].max && width >= DeviceWidthObject[devc].min) {\n        buildDeviceDetails.deviceTypeVariant = devc;\n        break;\n      }\n    }\n\n    if (width <= IdDeviceBreakpointsByWidth.laptop_max && width >= IdDeviceBreakpointsByWidth.laptop_min) {\n      buildDeviceDetails.deviceType = 'Laptop';\n    }\n\n    if (width <= IdDeviceBreakpointsByWidth.tablet_max && width >= IdDeviceBreakpointsByWidth.tablet_min) {\n      buildDeviceDetails.deviceType = 'Tablet';\n    }\n\n    if (width <= IdDeviceBreakpointsByWidth.mobile_max) {\n      buildDeviceDetails.deviceType = 'Mobile';\n    }\n\n    if (width > IdDeviceBreakpointsByWidth.laptop_max) {\n      buildDeviceDetails.deviceType = 'LargerThanLaptop';\n    }\n\n    return buildDeviceDetails;\n  }\n};\n\nconst handleExceptions = (buildDeviceDetails, width, height) => {\n  //  iPadPro\n  if (width === 1024 && height === 1366) {\n    buildDeviceDetails.deviceType = 'Tablet';\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro';\n    buildDeviceDetails.orientation = 'Portrait';\n    return buildDeviceDetails;\n  } else if (width === 1366 && height === 1024) {\n    //  Edge case\n    buildDeviceDetails.deviceType = 'Tablet';\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro';\n    buildDeviceDetails.orientation = 'Landscape';\n    return buildDeviceDetails;\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["D:/program/java/coursebucket/src/tools/utilResponsive.js"],"names":["DeviceWidthObject","MobileSmall","max","min","MobileMedium","MobileLarge","Tablet","LaptopSmall","LaptopLarge","LargerThanLaptop","LargeScreenMax","IdDeviceBreakpointsByWidth","laptop_max","laptop_min","tablet_max","tablet_min","mobile_max","default_min","IdMobileHeight","mobileLandscape_min","mobileLandscape_max","getWindowDimension","width","window","innerWidth","document","documentElement","clientWidth","body","height","innerHeight","clientHeight","getDeviceTypeInfo","buildDeviceDetails","deviceType","deviceTypeVariant","orientation","isFallback","hasEdgeCase","handleExceptions","devc","undefined"],"mappings":"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","sourcesContent":["\r\n\r\nexport const DeviceWidthObject = {\r\n  MobileSmall: { max: 320, min: 0 },\r\n  MobileMedium: { max: 375, min: 321 },\r\n  MobileLarge: { max: 767, min: 376 },\r\n  Tablet: { max: 991, min: 768 },\r\n  LaptopSmall: { max: 1024, min: 992 },\r\n  LaptopLarge: { max: 1440, min: 1025 },\r\n  LargerThanLaptop: { max: 2560, min: 1441 },\r\n  LargeScreenMax: { max: 999999, min: 2561 }\r\n};\r\nexport const IdDeviceBreakpointsByWidth = {\r\n  laptop_max: 1440,\r\n  laptop_min: 992,\r\n  tablet_max: 991,\r\n  tablet_min: 768,\r\n  mobile_max: 767,\r\n  default_min: 768 // Unrecognized device\r\n}\r\nexport const IdMobileHeight = {\r\n  mobileLandscape_min: 320,\r\n  mobileLandscape_max: 425\r\n}\r\n\r\nexport const getWindowDimension = () => {\r\n  const width = window.innerWidth\r\n    || document.documentElement.clientWidth\r\n    || document.body.clientWidth;\r\n  const height = window.innerHeight\r\n    || document.documentElement.clientHeight\r\n    || document.body.clientHeight;\r\n  return { width, height }\r\n};\r\n\r\n\r\nexport const getDeviceTypeInfo = () => {\r\n  const { width, height } = getWindowDimension()\r\n  const buildDeviceDetails = {\r\n    deviceType: '',\r\n    deviceTypeVariant: '',\r\n    orientation: 'Portrait',\r\n    width,\r\n    height,\r\n    isFallback: false\r\n  }\r\n  //  Edge case\r\n  const hasEdgeCase = handleExceptions(buildDeviceDetails, width, height)\r\n  if (hasEdgeCase) {\r\n    return hasEdgeCase\r\n  }\r\n  if (height < width) {\r\n    // Orientation is landscape\r\n    buildDeviceDetails.orientation = 'Landscape'\r\n\r\n    if (height <= IdMobileHeight.mobileLandscape_max) {\r\n      // Mobile (landscape)\r\n      buildDeviceDetails.deviceType = 'Mobile'\r\n      for (const devc in DeviceWidthObject) {\r\n        if (\r\n          height <= DeviceWidthObject[devc].max &&\r\n          height >= DeviceWidthObject[devc].min\r\n        ) {\r\n          buildDeviceDetails.deviceTypeVariant = devc\r\n          break\r\n        }\r\n      }\r\n    } else if (\r\n      width <= IdDeviceBreakpointsByWidth.tablet_max &&\r\n      width >= IdDeviceBreakpointsByWidth.tablet_min\r\n    ) {\r\n      // Tablet (landscape)\r\n      buildDeviceDetails.deviceType = 'Tablet'\r\n      buildDeviceDetails.deviceTypeVariant = 'Tablet'\r\n    } else if (\r\n      width <= IdDeviceBreakpointsByWidth.laptop_max &&\r\n      width >= IdDeviceBreakpointsByWidth.laptop_min\r\n    ) {\r\n      // Laptop (landscape)\r\n      buildDeviceDetails.deviceType = 'Laptop'\r\n\r\n      for (const devc in DeviceWidthObject) {\r\n        if (\r\n          width <= DeviceWidthObject[devc].max &&\r\n          width >= DeviceWidthObject[devc].min\r\n        ) {\r\n          buildDeviceDetails.deviceTypeVariant = devc\r\n          break\r\n        }\r\n      }\r\n    } else if (width > IdDeviceBreakpointsByWidth.laptop_max) {\r\n      // Larger than Laptop (landscape)\r\n      buildDeviceDetails.deviceType = 'LargerThanLaptop'\r\n\r\n      for (const devc in DeviceWidthObject) {\r\n        if (\r\n          width <= DeviceWidthObject[devc].max &&\r\n          width >= DeviceWidthObject[devc].min\r\n        ) {\r\n          buildDeviceDetails.deviceTypeVariant = devc\r\n          break\r\n        }\r\n      }\r\n    } else {\r\n      // TODO: UNKNOWN realm\r\n      buildDeviceDetails.deviceType = 'Mobile'\r\n      buildDeviceDetails.deviceTypeVariant = 'MobileLarge'\r\n      buildDeviceDetails.isFallback = true\r\n    }\r\n\r\n    return buildDeviceDetails\r\n  } else {\r\n    // Orientation is portrait\r\n    buildDeviceDetails.orientation = 'Portrait'\r\n\r\n    for (const devc in DeviceWidthObject) {\r\n      if (\r\n        width <= DeviceWidthObject[devc].max &&\r\n        width >= DeviceWidthObject[devc].min\r\n      ) {\r\n        buildDeviceDetails.deviceTypeVariant = devc\r\n        break\r\n      }\r\n    }\r\n\r\n    if (\r\n      width <= IdDeviceBreakpointsByWidth.laptop_max &&\r\n      width >= IdDeviceBreakpointsByWidth.laptop_min\r\n    ) {\r\n      buildDeviceDetails.deviceType = 'Laptop'\r\n    }\r\n\r\n    if (\r\n      width <= IdDeviceBreakpointsByWidth.tablet_max &&\r\n      width >= IdDeviceBreakpointsByWidth.tablet_min\r\n    ) {\r\n      buildDeviceDetails.deviceType = 'Tablet'\r\n    }\r\n    if (width <= IdDeviceBreakpointsByWidth.mobile_max) {\r\n      buildDeviceDetails.deviceType = 'Mobile'\r\n    }\r\n\r\n    if (width > IdDeviceBreakpointsByWidth.laptop_max) {\r\n      buildDeviceDetails.deviceType = 'LargerThanLaptop'\r\n    }\r\n\r\n    return buildDeviceDetails\r\n  }\r\n}\r\nconst handleExceptions = (buildDeviceDetails, width, height) => {\r\n  //  iPadPro\r\n  if (width === 1024 && height === 1366) {\r\n    buildDeviceDetails.deviceType = 'Tablet'\r\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro'\r\n    buildDeviceDetails.orientation = 'Portrait'\r\n\r\n    return buildDeviceDetails\r\n  } else if (width === 1366 && height === 1024) {\r\n    //  Edge case\r\n    buildDeviceDetails.deviceType = 'Tablet'\r\n    buildDeviceDetails.deviceTypeVariant = 'iPadPro'\r\n    buildDeviceDetails.orientation = 'Landscape'\r\n\r\n    return buildDeviceDetails\r\n  }\r\n\r\n  return undefined\r\n}"]},"metadata":{},"sourceType":"module"}