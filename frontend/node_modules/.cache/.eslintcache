[{"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js":"1","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js":"2","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js":"3","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js":"4","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js":"5","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js":"6","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.js":"7","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.js":"8","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.js":"9","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js":"10","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.js":"11","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.js":"12","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.js":"13","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js":"14","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js":"15","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Language.tsx":"16","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx":"17","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js":"18","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js":"19","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js":"20","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js":"21","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js":"22","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js":"23","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js":"24","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js":"25","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx":"26","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx":"27","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx":"28","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx":"29","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx":"30","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx":"31","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx":"32","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx":"33","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx":"34","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx":"35","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\SideNav.tsx":"36","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\TopNav.tsx":"37","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx":"38","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx":"39","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx":"40","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Dashboard.tsx":"41","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx":"42","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx":"43","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx":"44","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx":"45","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx":"46","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx":"47","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx":"48","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx":"49","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx":"50","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx":"51","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx":"52","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx":"53","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx":"54","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx":"55","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx":"56","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx":"57","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx":"58","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx":"59","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx":"60","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx":"61","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx":"62","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx":"63","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx":"64","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx":"65","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx":"66","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx":"67","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx":"68","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx":"69","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx":"70","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.js":"71","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js":"72","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx":"73","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx":"74","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx":"75","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js":"76","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx":"77","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx":"78","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx":"79","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx":"80","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx":"81","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx":"82","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.js":"83","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\FileUploader.js":"84","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js":"85","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js":"86","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx":"87","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx":"88","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx":"89"},{"size":956,"mtime":1626670943919,"results":"90","hashOfConfig":"91"},{"size":375,"mtime":1623403118146,"results":"92","hashOfConfig":"91"},{"size":3650,"mtime":1626868592280,"results":"93","hashOfConfig":"91"},{"size":1991,"mtime":1626866436226,"results":"94","hashOfConfig":"91"},{"size":540,"mtime":1623403117367,"results":"95","hashOfConfig":"91"},{"size":68,"mtime":1626329941538,"results":"96","hashOfConfig":"91"},{"size":2460,"mtime":1623403118127,"results":"97","hashOfConfig":"91"},{"size":6313,"mtime":1626937466968,"results":"98","hashOfConfig":"91"},{"size":3420,"mtime":1623403118129,"results":"99","hashOfConfig":"91"},{"size":5906,"mtime":1623403109731,"results":"100","hashOfConfig":"91"},{"size":2790,"mtime":1626937237511,"results":"101","hashOfConfig":"91"},{"size":3385,"mtime":1623403118133,"results":"102","hashOfConfig":"91"},{"size":619,"mtime":1623403118131,"results":"103","hashOfConfig":"91"},{"size":1166,"mtime":1623403117368,"results":"104","hashOfConfig":"91"},{"size":6552,"mtime":1626876263511,"results":"105","hashOfConfig":"91"},{"size":94,"mtime":1626446934040,"results":"106","hashOfConfig":"91"},{"size":1326,"mtime":1626430986195,"results":"107","hashOfConfig":"91"},{"size":3506,"mtime":1626868662561,"results":"108","hashOfConfig":"91"},{"size":3453,"mtime":1626868691057,"results":"109","hashOfConfig":"91"},{"size":6703,"mtime":1626451200167,"results":"110","hashOfConfig":"91"},{"size":3361,"mtime":1626868776211,"results":"111","hashOfConfig":"91"},{"size":565,"mtime":1626451200177,"results":"112","hashOfConfig":"91"},{"size":552,"mtime":1626451200173,"results":"113","hashOfConfig":"91"},{"size":551,"mtime":1626451200178,"results":"114","hashOfConfig":"91"},{"size":594,"mtime":1626451200174,"results":"115","hashOfConfig":"91"},{"size":2299,"mtime":1626532108092,"results":"116","hashOfConfig":"91"},{"size":429,"mtime":1626544390664,"results":"117","hashOfConfig":"91"},{"size":2016,"mtime":1626935612384,"results":"118","hashOfConfig":"91"},{"size":5201,"mtime":1626937582047,"results":"119","hashOfConfig":"91"},{"size":506,"mtime":1626762557371,"results":"120","hashOfConfig":"91"},{"size":2334,"mtime":1626763685084,"results":"121","hashOfConfig":"91"},{"size":7437,"mtime":1626935516145,"results":"122","hashOfConfig":"91"},{"size":4351,"mtime":1626876142890,"results":"123","hashOfConfig":"91"},{"size":7277,"mtime":1626937507790,"results":"124","hashOfConfig":"91"},{"size":2264,"mtime":1626876167123,"results":"125","hashOfConfig":"91"},{"size":1709,"mtime":1626937496317,"results":"126","hashOfConfig":"91"},{"size":780,"mtime":1626937552239,"results":"127","hashOfConfig":"91"},{"size":3887,"mtime":1626934755219,"results":"128","hashOfConfig":"91"},{"size":6144,"mtime":1626934755552,"results":"129","hashOfConfig":"91"},{"size":5337,"mtime":1626934755950,"results":"130","hashOfConfig":"91"},{"size":7051,"mtime":1626945044659,"results":"131","hashOfConfig":"91"},{"size":771,"mtime":1626935355144,"results":"132","hashOfConfig":"91"},{"size":13779,"mtime":1626945137815,"results":"133","hashOfConfig":"91"},{"size":4857,"mtime":1626935321017,"results":"134","hashOfConfig":"91"},{"size":3092,"mtime":1626935290881,"results":"135","hashOfConfig":"91"},{"size":1955,"mtime":1626587527491,"results":"136","hashOfConfig":"91"},{"size":1495,"mtime":1626935238453,"results":"137","hashOfConfig":"91"},{"size":3083,"mtime":1626935238162,"results":"138","hashOfConfig":"91"},{"size":5161,"mtime":1626935211338,"results":"139","hashOfConfig":"91"},{"size":1886,"mtime":1626935152646,"results":"140","hashOfConfig":"91"},{"size":3243,"mtime":1626938952342,"results":"141","hashOfConfig":"91"},{"size":3703,"mtime":1626944919097,"results":"142","hashOfConfig":"91"},{"size":7609,"mtime":1626945278825,"results":"143","hashOfConfig":"91"},{"size":4835,"mtime":1626945217758,"results":"144","hashOfConfig":"91"},{"size":3912,"mtime":1626587539853,"results":"145","hashOfConfig":"91"},{"size":6785,"mtime":1626587021639,"results":"146","hashOfConfig":"91"},{"size":827,"mtime":1626584377340,"results":"147","hashOfConfig":"91"},{"size":1001,"mtime":1626937297923,"results":"148","hashOfConfig":"91"},{"size":794,"mtime":1626937620327,"results":"149","hashOfConfig":"91"},{"size":1005,"mtime":1626937283834,"results":"150","hashOfConfig":"91"},{"size":721,"mtime":1626584558878,"results":"151","hashOfConfig":"91"},{"size":707,"mtime":1626585069831,"results":"152","hashOfConfig":"91"},{"size":874,"mtime":1626585216783,"results":"153","hashOfConfig":"91"},{"size":1207,"mtime":1626585251871,"results":"154","hashOfConfig":"91"},{"size":484,"mtime":1626584910425,"results":"155","hashOfConfig":"91"},{"size":1215,"mtime":1626585260643,"results":"156","hashOfConfig":"91"},{"size":1227,"mtime":1626935237967,"results":"157","hashOfConfig":"91"},{"size":1180,"mtime":1626935291058,"results":"158","hashOfConfig":"91"},{"size":13012,"mtime":1626935643511,"results":"159","hashOfConfig":"91"},{"size":3159,"mtime":1626935290720,"results":"160","hashOfConfig":"91"},{"size":1431,"mtime":1626935440714,"results":"161","hashOfConfig":"91"},{"size":3069,"mtime":1626935440764,"results":"162","hashOfConfig":"91"},{"size":1268,"mtime":1626936530954,"results":"163","hashOfConfig":"91"},{"size":7341,"mtime":1626935988980,"results":"164","hashOfConfig":"91"},{"size":1421,"mtime":1626935983749,"results":"165","hashOfConfig":"91"},{"size":1176,"mtime":1626935440521,"results":"166","hashOfConfig":"91"},{"size":2130,"mtime":1626938150874,"results":"167","hashOfConfig":"91"},{"size":1853,"mtime":1626935067929,"results":"168","hashOfConfig":"91"},{"size":2248,"mtime":1626935543561,"results":"169","hashOfConfig":"91"},{"size":1325,"mtime":1626525635454,"results":"170","hashOfConfig":"91"},{"size":1460,"mtime":1626526321916,"results":"171","hashOfConfig":"91"},{"size":3845,"mtime":1626521192810,"results":"172","hashOfConfig":"91"},{"size":6006,"mtime":1626935440355,"results":"173","hashOfConfig":"91"},{"size":1554,"mtime":1626935440613,"results":"174","hashOfConfig":"91"},{"size":1918,"mtime":1626935419439,"results":"175","hashOfConfig":"91"},{"size":4886,"mtime":1626935419290,"results":"176","hashOfConfig":"91"},{"size":3171,"mtime":1626938110536,"results":"177","hashOfConfig":"91"},{"size":19199,"mtime":1626938150874,"results":"178","hashOfConfig":"91"},{"size":647,"mtime":1626943510760,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"1wn76z3",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"182"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"182"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"182"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"215","usedDeprecatedRules":"182"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"182"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"182"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"221"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"221"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"221"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"221"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"221"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"221"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"221"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"221"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"221"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"221"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"221"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"221"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"221"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"221"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"221"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"221"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"221"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"221"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"221"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"221"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"182"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"221"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"221"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"221"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js",[],["395","396"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js",["397","398"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CountryService from '../AdminPanel/api/CountryService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllCountries()\r\n\r\n  function getAllCountries() {\r\n    CountryService.getAllCountries()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCountries() {\r\n    useEffect(() => { getAllCountries() }, []);\r\n  }\r\n\r\n  function CallupdateCountry(country) {\r\n\r\n    CountryService.updateCountry(country)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n  }\r\n  function CalldeleteCountry(id) {\r\n\r\n    CountryService.deleteCountry(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  function CalladdCountry(country) {\r\n\r\n    CountryService.addCountry(country)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Country\"\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                //console.log(newData.id)\r\n                CalladdCountry(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                //setData([...dataUpdate]);\r\n                CallupdateCountry(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete])\r\n                CalldeleteCountry(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\"\r\n        }}\r\n      />\r\n    </Grid>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default CountryComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.js",["399","400","401"],"import { Button, Dialog, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, makeStyles, Radio, RadioGroup, Typography } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport React, { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\nconst sortTypes = [\r\n  \"New released\",\r\n  \"Best seller\",\r\n  \"Most reviewed\",\r\n  \"Most rated\",\r\n  \"Price low to high\",\r\n  \"Price high to low\"\r\n]\r\n\r\n\r\nconst CustomSelect = ({ data, title, open, selected, onClose, onChange }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(selected);\r\n\r\n  function handleChange(event) {\r\n    onChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={onClose}\r\n      open={open}\r\n      style={{ padding: 10 }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup >\r\n            {\r\n              data.map(item => (\r\n                <FormControlLabel\r\n                  checked={item === selected}\r\n                  value={item}\r\n                  control={<Radio />}\r\n                  label={item}\r\n                  onClick={handleChange}\r\n                />\r\n              ))\r\n            }\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <Button color=\"primary\" onClick={onClose}>\r\n        Cancel\r\n      </Button>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction Sort() {\r\n  const [open, setOpen] = useState(false);\r\n  const [sortType, setSortType] = useState(sortTypes[0]);\r\n  const handleChange = (value) => {\r\n    setSortType(value);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid sm={12} xs={6} container>\r\n      <Grid container\r\n        justify=\"space-between\"\r\n        onClick={handleOpen}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          Sort by\r\n        </Typography>\r\n        <SortIcon />\r\n      </Grid>\r\n      <CustomSelect\r\n        title={\"Set sort type\"}\r\n        selected={sortType}\r\n        open={open}\r\n        data={sortTypes}\r\n        onClose={handleClose}\r\n        onChange={handleChange}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Sort","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.js",["402","403"],"import { Chip, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction CustomChip({\r\n  object,\r\n  onObjectChange,\r\n  value = object.title,\r\n}) {\r\n  function handleDelete() {\r\n    if (object.type === \"Slider\") {\r\n      onObjectChange({ ...object, value: [object.min, object.max] })\r\n    }\r\n    else {\r\n      onObjectChange({ ...object, checked: false });\r\n    }\r\n  }\r\n  return (\r\n    <Grid item sm>\r\n      <Chip\r\n        size=\"medium\"\r\n        style={{ width: \"100%\", marginTop: 5, marginRight: 5 }}\r\n        label={value}\r\n        onDelete={handleDelete}\r\n        color=\"secondary\"\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport function FilterChips({\r\n  objects,\r\n  onObjectsChange,\r\n}) {\r\n  function handleSliderFilterChange(index, newFilter) {\r\n    let newObjects = objects.splice(0);\r\n    newObjects[index] = newFilter;\r\n    onObjectsChange(newObjects);\r\n  }\r\n  function handleCategoryFilterChange(index, newFilter) {\r\n    let newObjects = objects;\r\n    newObjects[index].items.data = newFilter;\r\n    onObjectsChange(newObjects);\r\n  }\r\n  function handleFilterChange(index, newFilter) {\r\n    let newObjects = objects;\r\n    newObjects[index].items = newFilter;\r\n    onObjectsChange(newObjects);\r\n  }\r\n\r\n  return (\r\n    <Grid id=\"chipsContainer\" sm container>\r\n      {\r\n        objects.map((filter, index) => {\r\n          if (filter.type === \"Slider\") {\r\n            if ((filter.min !== filter.value[0] || filter.max != filter.value[1]))\r\n              return <CustomChip\r\n                object={filter}\r\n                value={\"Showing \" + filter.value[0] + filter.valueType + \" to \" + filter.value[1] + filter.valueType}\r\n                onObjectChange={newFilter => handleSliderFilterChange(index, newFilter)}\r\n              />\r\n          }\r\n          else if (filter.type === \"List\" && filter.title === \"Category\")\r\n            return <GenerateChips\r\n              object={filter.items.data}\r\n              onObjectChange={newFilter => handleCategoryFilterChange(index, newFilter)}\r\n            />\r\n          else {\r\n            return <GenerateChips\r\n              object={filter.items}\r\n              onObjectChange={newFilter => handleFilterChange(index, newFilter)}\r\n            />\r\n          }\r\n        })\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction GenerateChips({ object, onObjectChange }) {\r\n  function handleChange(index, newItem) {\r\n    let newObject = object;\r\n    newObject[index] = newItem;\r\n    onObjectChange(newObject);\r\n  }\r\n  function handleCategoryChange(index, newItem) {\r\n    let newObject = object;\r\n    newObject[index].items = newItem;\r\n    onObjectChange(newObject);\r\n  }\r\n  return (\r\n    object.map((item, index) => (\r\n      <>\r\n        {item.checked && (\r\n          <CustomChip\r\n            object={item}\r\n            value={item.title}\r\n            onObjectChange={(newItem) => handleChange(index, newItem)}\r\n          />\r\n        )}\r\n        {(item.items !== undefined)\r\n          ? item.items.length !== 0\r\n            ? <GenerateChips\r\n              object={item.items}\r\n              onObjectChange={(newItem) => handleCategoryChange(index, newItem)}\r\n            />\r\n            : null : null\r\n        }\r\n      </>\r\n    ))\r\n  )\r\n}\r\n\r\nexport function CategoryChips({ object, onObjectChange }) {\r\n  return (\r\n    <Grid container sm>\r\n      <GenerateChips object={object.data} onObjectChange={newData => onObjectChange({ ...object, data: newData })} />\r\n    </Grid>\r\n  )\r\n}","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js",["404"],"import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst images = [\r\n  require('assets/banner/Banner-1.jpg'),\r\n  require('assets/banner/Banner-2.jpg'),\r\n  require('assets/banner/Banner-3.jpg'),\r\n  require('assets/banner/Banner-4.jpg'),\r\n]\r\n\r\n\r\nexport default function ImageSlider(props) {\r\n\r\n  return (\r\n    <Carousel\r\n      animation=\"slide\"\r\n      fullHeightHover={true}\r\n      stopAutoPlayOnHover={false}\r\n      timeout={500}\r\n      navButtonsProps={{\r\n        style: {\r\n          width: 20,\r\n          height: 120,\r\n          backgroundColor: 'cornflowerblue',\r\n          borderRadius: 5\r\n        }\r\n      }}\r\n      NextIcon={<ArrowForwardIosIcon />}\r\n      PrevIcon={<ArrowBackIosIcon style={{ marginLeft: 12 }} />}\r\n    >\r\n      {\r\n        images.map((src, i) => <Image key={i} src={src.default} />)\r\n      }\r\n    </Carousel >\r\n  )\r\n}\r\n\r\nfunction Image(props) {\r\n  return (\r\n    // <Grid container style={{ padding: \"0px 40px\" }}>\r\n    <img width=\"100%\" {...props} />\r\n    // </Grid>\r\n  )\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js",["405","406","407","408","409","410","411","412"],"import { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FaPinterestSquare, FaTwitterSquare } from \"react-icons/fa\";\r\nimport {\r\n  ImFacebook2,\r\n  ImInstagram,\r\n  ImLinkedin,\r\n  ImYoutube,\r\n} from \"react-icons/im\";\r\nimport \"./SimpleReactFooter.sass\";\r\n\r\nclass SimpleReactFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.props.backgroundColor || \"bisque\" }}\r\n        className=\"footer-container\"\r\n      >\r\n        <Grid container>\r\n          <Grid className=\"grid-item\" item md={6} sm={12}>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"first-title\"\r\n            >\r\n              {this.props.title}\r\n            </div>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"description\"\r\n            >\r\n              {this.props.description}\r\n            </div>\r\n          </Grid>\r\n          <Grid container md={6}>\r\n            {this.props.columns.map((column) => (\r\n              <Grid className=\"grid-item\" item sm={3} xs={6}>\r\n                <div\r\n                  style={{ color: this.props.fontColor || \"black\" }}\r\n                  className=\"second-title\"\r\n                >\r\n                  {column.title}\r\n                </div>\r\n                {column.resources.map((resource) => (\r\n                  <div key={resource.id}>\r\n                    <a\r\n                      href={`${resource.link}`}\r\n                      target=\"_blank\"\r\n                      style={{ color: this.props.fontColor || \"black\" }}\r\n                      className=\"resources\"\r\n                    >\r\n                      {resource.name}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        {this.props.facebook !== undefined ||\r\n        this.props.linkedin !== undefined ||\r\n        this.props.instagram !== undefined ||\r\n        this.props.twitter !== undefined ||\r\n        this.props.pinterest !== undefined ||\r\n        this.props.youtube !== undefined ? (\r\n          <div className=\"social-media-col\">\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"stay-connected-title\"\r\n            >\r\n              Stay connected\r\n            </div>\r\n            <div className=\"social-media\">\r\n              {this.props.facebook !== undefined ? (\r\n                <a\r\n                  href={`https://www.facebook.com/${this.props.facebook}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImFacebook2\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.linkedin !== undefined ? (\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${this.props.linkedin}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImLinkedin\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.instagram !== undefined ? (\r\n                <a\r\n                  href={`https://www.instagram.com/${this.props.instagram}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImInstagram\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.twitter !== undefined ? (\r\n                <a\r\n                  href={`https://www.twitter.com/${this.props.twitter}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaTwitterSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.pinterest !== undefined ? (\r\n                <a\r\n                  href={`https://www.pinterest.com/${this.props.pinterest}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaPinterestSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.youtube !== undefined ? (\r\n                <a\r\n                  href={`https://www.youtube.com/channel/${this.props.youtube}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImYoutube\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div>\r\n          <div\r\n            style={{ color: this.props.copyrightColor || \"grey\" }}\r\n            className=\"copyright\"\r\n          >\r\n            Copyright &copy; {this.props.copyright}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleReactFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  linkedin: PropTypes.string,\r\n  instagram: PropTypes.string,\r\n  facebook: PropTypes.string,\r\n  youtube: PropTypes.string,\r\n  pinterest: PropTypes.string,\r\n  title: PropTypes.string,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      resources: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          link: PropTypes.string,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n  copyright: PropTypes.string,\r\n  iconColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  copyrightColor: PropTypes.string,\r\n};\r\n\r\nexport default SimpleReactFooter;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Language.tsx",[],["413","414"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx",[],["415","416"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js",["417","418"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport DesignationService from '../AdminPanel/api/DesignationService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction DesignationComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Designation ', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllDesignations()\r\n\r\n\r\n  function getAllDesignations() {\r\n    DesignationService.getAllDesignation()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllDesignations() {\r\n    useEffect(() => { getAllDesignations() }, []);\r\n  }\r\n\r\n  function CallupdateDesignation(designation) {\r\n\r\n    DesignationService.updateDesignation(designation)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteDesignation(id) {\r\n\r\n    DesignationService.deleteDesignation(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdDesignation(designation) {\r\n\r\n    DesignationService.addDesignation(designation)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Designation\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdDesignation(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateDesignation(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteDesignation(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\"\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DesignationComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js",["419","420"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus() }, [])\r\n  }\r\n\r\n  function CallupdateEduStatus(edustatus) {\r\n\r\n    EduStatusService.updateEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus(id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container >\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Educational Status\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdEduStatus(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateEduStatus(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteEdustatus(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\"\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js",["421","422"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages() {\r\n    LanguageService.getAllLanguages()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteLanguage(id) {\r\n\r\n    LanguageService.deleteLanguage(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Language\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                CalladdLanguage(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateLanguage(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteLanguage(oldData.id)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\"\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx",["423","424","425"],"import {\r\n  AppBar,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport User from \"./User\";\r\n\r\nconst drawerWidth = 600;\r\nconst icon = <InboxIcon />;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport interface IDrawerLayoutObject {\r\n  label: string;\r\n  urlShort?: string;\r\n  icon: JSX.Element;\r\n  content: JSX.Element;\r\n}\r\n\r\nconst DrawerLayout = ({\r\n  objects,\r\n  defaultTabIndex = 0,\r\n}: {\r\n  objects: Array<IDrawerLayoutObject>;\r\n  defaultTabIndex?: number;\r\n}) => {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(defaultTabIndex);\r\n\r\n  useEffect(() => {\r\n    setTabIndex(defaultTabIndex);\r\n  }, [defaultTabIndex]);\r\n\r\n  function timeout(delay) {\r\n    return new Promise((res) => setTimeout(res, delay));\r\n  }\r\n  async function handleTabIndexChange(index) {\r\n    await timeout(100);\r\n    setTabIndex(index);\r\n  }\r\n\r\n  function DrawerList({ objects }) {\r\n    return (\r\n      <div>\r\n        <List>\r\n          {objects.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              key={item.label}\r\n              onClick={() => handleTabIndexChange(index)}\r\n            >\r\n              {/* <ListItemIcon>{<InboxIcon />}</ListItemIcon> */}\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n  function TabPanel({ children, value, index, ...other }) {\r\n    return (\r\n      <div role=\"tabpanel\" hidden={value != index} {...other}>\r\n        {value === index && children}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Responsive displayIn={[\"Tablet\", \"Laptop\"]}>\r\n          <Grid container direction=\"row\">\r\n            <Grid style={{ width: drawerWidth }} item sm>\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Drawer\r\n                    classes={{\r\n                      paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ ...style, marginTop: 24, marginBottom: 24 }}\r\n                    variant=\"permanent\"\r\n                    open\r\n                  >\r\n                    <Tabs\r\n                      orientation=\"vertical\"\r\n                      value={tabIndex}\r\n                      onChange={(event, newValue) => setTabIndex(newValue)}\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                    >\r\n                      {objects.map((item, idx) => (\r\n                        <Tab label={item.label} icon={item.icon} />\r\n                      ))}\r\n                    </Tabs>\r\n                  </Drawer>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n            <Grid item className={classes.content}>\r\n              {objects.map((item, idx) => (\r\n                <TabPanel value={tabIndex} index={idx}>\r\n                  {item.content}\r\n                </TabPanel>\r\n              ))}\r\n              {/* {objects\r\n                .map((item) => ({ content: item.content }))\r\n                .map((item, index) => (\r\n                  <div hidden={tabIndex !== index}>{item.content}</div>\r\n                ))} */}\r\n            </Grid>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive displayIn=\"Mobile\">\r\n          <Sticky>\r\n            {({ style }) => (\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabIndex}\r\n                  onChange={(event, newValue) => setTabIndex(newValue)}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {objects.map((item, idx) => (\r\n                    <Tab label={item.label} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            )}\r\n          </Sticky>\r\n\r\n          {objects.map((item, idx) => (\r\n            <TabPanel\r\n              value={tabIndex}\r\n              index={idx}\r\n              style={{\r\n                padding: 15,\r\n              }}\r\n            >\r\n              {item.content}\r\n            </TabPanel>\r\n          ))}\r\n        </Responsive>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default DrawerLayout;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx",["426"],"// components\r\nimport Footer from \"components/footer/Footer\";\r\nimport { Header } from \"components/header/Header\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function User({ children }) {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Header />\r\n          <div style={{ margin: \"0 auto\", maxWidth: \"1400px\" }}>{children}</div>\r\n          <Footer />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx",["427","428","429","430","431"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction CustomPagination({\r\n  type = \"one-item-per-line\",\r\n  title,\r\n  children,\r\n  objectsPerPage = 12,\r\n}: {\r\n  type?: \"one-item-per-line\" | \"two-item-per-line\" | \"calculate-by-width\";\r\n  children: JSX.Element[];\r\n  title?: string;\r\n  objectsPerPage?: number;\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const indexOfLastObject = currentPage * objectsPerPage;\r\n  const indexOfFirstObject = indexOfLastObject - objectsPerPage;\r\n  const currentPageObjects = children.slice(\r\n    indexOfFirstObject,\r\n    indexOfLastObject\r\n  );\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  let elements;\r\n  if (type === \"one-item-per-line\") {\r\n    elements = (\r\n      <Grid container direction=\"column\" xs spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item xs={12}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"two-item-per-line\") {\r\n    elements = (\r\n      <Grid container spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item xs={6}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"calculate-by-width\") {\r\n    elements = (\r\n      <Grid container direction=\"row\" justify=\"space-between\" xs spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item>{item}</Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {title != undefined && (\r\n        <Typography\r\n          variant=\"h3\"\r\n          style={{ textAlign: \"center\", marginBottom: 10 }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"space-between\"\r\n      >\r\n        {elements}\r\n        <Pagination\r\n          count={Math.ceil(children.length / objectsPerPage)}\r\n          page={currentPage}\r\n          onChange={paginate}\r\n          color=\"secondary\"\r\n          siblingCount={3}\r\n          size=\"large\"\r\n          style={{ marginTop: 15 }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPagination;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx",["432","433","434","435","436","437"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Category, Image, Language, Looks } from \"@material-ui/icons\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useState } from \"react\";\r\nimport { ImEarth } from \"react-icons/im\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { UserRegistrationChart } from \"components/AdminPanel/charts/UserRegistrationChart\";\r\nimport MultiSelectTreeView from \"./CategoryComponent\";\r\nimport CountryComponent from \"./CountryComponent\";\r\nimport DesignationComponent from \"./DesignationComponent\";\r\nimport EduStatusComponent from \"./EduStatusComponent\";\r\nimport LanguageComponent from \"./LanguageComponent\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\n\r\nfunction ContentHeader({ children }) {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <CardActionArea>\r\n          <Grid container direction=\"row\" wrap=\"nowrap\">\r\n            <Grid item>\r\n              <Image />\r\n            </Grid>\r\n            <Grid item container direction=\"column\">\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Course title</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\">Course subtitle</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActionArea>\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface PurchaseHistory {\r\n  image: JSX.Element;\r\n  courseName: string;\r\n  studentImage: JSX.Element;\r\n  studentName: string;\r\n  time: Date;\r\n  amount: number;\r\n}\r\n\r\nfunction AdminDashboard() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Course Image\", field: \"image\" },\r\n    { title: \"Course Name\", field: \"courseName\" },\r\n    { title: \"Student Image\", field: \"studentImage\" },\r\n    { title: \"Student Name\", field: \"studentName\" },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n    // { title: \"Course Image\", field: \"image\", editable: \"never\" },\r\n    // { title: \"Course Name\", field: \"courseName\", editable: \"never\" },\r\n    // { title: \"Student Image\", field: \"studentImage\", editable: \"never\" },\r\n    // { title: \"Student Name\", field: \"studentName\", editable: \"never\" },\r\n    // { title: \"Purchase time\", field: \"time\", editable: \"never\" },\r\n    // { title: \"Purchase Amount\", field: \"amount\", editable: \"never\" },\r\n  ]);\r\n  const [data, setData] = useState([\r\n    {\r\n      image: <Image />,\r\n      courseName: \"Course Name Course Name Course Name Course Name Course Name\",\r\n      studentImage: <Image />,\r\n      studentName: \"StudentName\",\r\n      time: new Date().toDateString(),\r\n      amount: 3000,\r\n    },\r\n  ]);\r\n  const objects: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Overview\",\r\n      urlShort: \"overview\",\r\n      icon: <Looks />,\r\n      content: (\r\n        <Grid container xs spacing={2}>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Visitors\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  170\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  New Course\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  17\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total Course\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  170\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  New User\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  2\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total User\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  240\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Today Income\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  $345\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total Income\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  $2404\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCourseAdminChart />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCategoryChart />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <UserRegistrationChart />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      urlShort: \"category\",\r\n      icon: <Category />,\r\n      content: <MultiSelectTreeView />,\r\n    },\r\n    {\r\n      label: \"Country\",\r\n      urlShort: \"country\",\r\n      icon: <ImEarth />,\r\n      content: <CountryComponent />,\r\n    },\r\n    {\r\n      label: \"Language\",\r\n      urlShort: \"language\",\r\n      icon: <Language />,\r\n      content: <LanguageComponent />,\r\n    },\r\n    {\r\n      label: \"Designation\",\r\n      urlShort: \"designation\",\r\n      icon: <Language />,\r\n      content: <DesignationComponent />,\r\n    },\r\n    {\r\n      label: \"Educational Status\",\r\n      urlShort: \"educational-status\",\r\n      icon: <Language />,\r\n      content: <EduStatusComponent />,\r\n    },\r\n  ];\r\n\r\n  const route = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route exact path={`${route.path}/${item.urlShort}`}>\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx",["438"],"import { Collapse, Grid, List, ListItem, ListItemText, makeStyles } from \"@material-ui/core\";\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\n\r\n\r\n// let CSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    backgroundColor: \"#ffc107\",\r\n    padding: theme.spacing(0, 1, 0, 1)\r\n  },\r\n  menuItemWrapper: {\r\n    height: \"auto\",\r\n  },\r\n  menu: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: \"space-between\",\r\n      borderBottom: \"1px solid black\",\r\n    }\r\n  },\r\n  subMenuContainer: {\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fd7e14\",\r\n    zIndex: 100,\r\n    [theme.breakpoints.down('sm')]: {\r\n      position: \"relative\",\r\n      marginLeft: \"20px\",\r\n      // right: \"80%\",\r\n      // width: \"100%\",\r\n    },\r\n  },\r\n  subMenuItem: {\r\n    padding: theme.spacing(1, 3),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: \"50%\",\r\n    }\r\n  },\r\n  signInBtn: {\r\n    justify: \"start\",\r\n    label: {\r\n      justify: \"start\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport const menuItems = {\r\n  defaultExpanded: [],\r\n  data: [\r\n    {\r\n      title: \"Menu 1\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 2\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 1\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 2\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 3\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 3\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 4\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 5\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 6\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 7\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 8\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n  ]\r\n}\r\n\r\n\r\n\r\nexport function SubMenu({ item: items, open }) {\r\n  const classes = useStyles();\r\n  if (!items.length) return <></>\r\n  else return (\r\n    <div className={classes.subMenuContainer}>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {items.map(item => (\r\n            <ListItem className={classes.subMenuItem} button key={item.title}>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport function Menu({ item }) {\r\n  const classes = useStyles();\r\n  const subItems = item.items;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleMouseEnterLeave = (doOpen) => {\r\n    if (subItems.length) {\r\n      setOpen(doOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item className={classes.menuItemWrapper} onMouseEnter={() => (setOpen(true))} onMouseLeave={() => (setOpen(false))}>\r\n      <List disablePadding>\r\n        <ListItem className={classes.menu} button key={item.title}>\r\n          {item.title}\r\n          {subItems.length > 0\r\n            ?\r\n            !open\r\n              ? <ExpandMoreIcon />\r\n              : <ExpandLessIcon />\r\n            : <React.Fragment></React.Fragment>\r\n          }\r\n        </ListItem>\r\n      </List>\r\n      <SubMenu item={subItems} open={open} />\r\n    </Grid >\r\n  )\r\n}\r\n\r\n\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx",["439","440"],"import {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Popover,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport classNames from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport SideNav from \"./SideNav\";\r\nimport TopNav from \"./TopNav\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"green\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  title: {\r\n    display: \"block-inline\",\r\n    textAlign: \"center\",\r\n    marginLeft: theme.spacing(1),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexGrow: 1,\r\n      padding: 0,\r\n    },\r\n    color: \"inherit\",\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n  },\r\n  inputRoot: {\r\n    flexGrow: 1,\r\n    color: \"inherit\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"35px\",\r\n    padding: theme.spacing(0, 2, 0, 3),\r\n    margin: theme.spacing(0, 3),\r\n  },\r\n}));\r\n\r\nexport const isLogIn = true;\r\n\r\nexport function Header() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  function Logo() {\r\n    const classes = useStyles();\r\n    return (\r\n      <>\r\n        <img\r\n          className={classes.logo}\r\n          src={require(\"assets/img/CourseOverflowIcon.png\").default}\r\n        />\r\n        <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Course Bucket\r\n          </Typography>\r\n        </Responsive>\r\n        <Responsive displayIn={[\"Mobile\"]}>\r\n          <Grid className={classes.title} item>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Course\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Bucket\r\n            </Typography>\r\n          </Grid>\r\n        </Responsive>\r\n      </>\r\n    );\r\n  }\r\n  function SearchBox(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <div className={classNames(classes.inputRoot, props.className)}>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item className={classes.input}>\r\n            <TextField\r\n              placeholder=\"Search course...\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n  const popUpNavProperty = [\r\n    { label: \"My Course\", link: \"/my-course\" },\r\n    { label: \"Purchase History\", link: \"/dashboard/purchase-history\" },\r\n    { label: \"My Review\", link: \"/dashboard/review\" },\r\n    { label: \"FAQ\", link: \"/dashboard/faq\" },\r\n    { label: \"Account Setting\", link: \"/profile-details\" },\r\n    { label: \"Sign out\", link: \"/auth/signin\" },\r\n    { label: \"Overview\", link: \"/dashboard/overview\" },\r\n    { label: \"Create a course\", link: \"/create-course\" },\r\n    { label: \"Student's Review\", link: \"/dashboard/review\" },\r\n  ];\r\n\r\n  function IconSet() {\r\n    const [anchorRef, setAnchorRef] = useState<HTMLButtonElement | null>(null);\r\n\r\n    return (\r\n      <>\r\n        {isLogIn ? (\r\n          <>\r\n            <IconButton>\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon fontSize=\"large\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <Grid style={{ display: \"flex\" }}>\r\n              <IconButton>\r\n                <Avatar\r\n                  onClick={(event: React.MouseEvent<any>) =>\r\n                    setAnchorRef(event.currentTarget)\r\n                  }\r\n                />\r\n              </IconButton>\r\n              <Popover\r\n                open={Boolean(anchorRef)}\r\n                anchorEl={anchorRef}\r\n                onClose={() => setAnchorRef(null)}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <CardActionArea style={{ padding: 16 }}>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        wrap=\"nowrap\"\r\n                        xs\r\n                        spacing={1}\r\n                      >\r\n                        <Grid item>\r\n                          <Avatar />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography>Signed in as</Typography>\r\n                          <Typography variant=\"h6\">mehedi</Typography>\r\n                          <Typography variant=\"body1\">\r\n                            66.mehedi@gmail.com\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardActionArea>\r\n                  </Grid>\r\n                  <Divider />\r\n                  <Grid item>\r\n                    <List>\r\n                      {popUpNavProperty.map((item) => (\r\n                        <ListItem\r\n                          button\r\n                          onClick={(event) => history.push(item.link)}\r\n                        >\r\n                          {item.label}\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n              </Popover>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Sign in\r\n            </Button>\r\n          </Responsive>\r\n        )}\r\n        <SideNav>\r\n          <IconButton>\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </SideNav>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Toolbar className={classes.root}>\r\n          <Grid container direction=\"column\" style={{ flexGrow: 1 }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Logo />\r\n              <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n                <SearchBox />\r\n              </Responsive>\r\n              <IconSet />\r\n            </Grid>\r\n            <Responsive displayIn={\"Mobile\"}>\r\n              <Grid container direction=\"row\">\r\n                <SearchBox />\r\n              </Grid>\r\n            </Responsive>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TopNav />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\SideNav.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\TopNav.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx",["441"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh'\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push({ pathname: '/home' })}\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to={history.location.pathname.split('/').slice(0, -1).join('/') + '/forgot-password'} variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to={history.location.pathname.split('/').slice(0, -1).join('/') + '/signup'} variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx",["442","443","444","445"],"import { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Person, Student, Teacher } from \"../../classes/Person\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1, 0),\r\n    // minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  let person: Person;\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n\r\n  function handleSubmitClicked() {\r\n    // if (password == againPassword && password != \"\") {\r\n    let person;\r\n    if (status == \"Student\") person = new Student(email, password);\r\n    else person = new Teacher(email, password);\r\n    history.push({\r\n      pathname:\r\n        history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n        \"/profile-details\",\r\n      state: person,\r\n    });\r\n    // }\r\n  }\r\n  return (\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControl}\r\n                fullWidth\r\n              >\r\n                <InputLabel>Your Status</InputLabel>\r\n                <Select\r\n                  label=\"Your Status\"\r\n                  variant=\"outlined\"\r\n                  value={status}\r\n                  onChange={(event) => setStatus(event.target.value as string)}\r\n                >\r\n                  <MenuItem key=\"Student\" value={\"Student\"}>\r\n                    Student\r\n                  </MenuItem>\r\n                  <MenuItem key=\"Teacher\" value={\"Teacher\"}>\r\n                    Teacher\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password (Again)\"\r\n                type=\"password\"\r\n                id=\"password-again\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setAgainPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* <Link\r\n              to={{\r\n                pathname: \"/profile-details\",\r\n                state: person\r\n              }}> */}\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmitClicked}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {/* </Link> */}\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link\r\n                to={\r\n                  useLocation().pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                  \"/signin\"\r\n                }\r\n              >\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx",["446"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function ForgotPassword() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [dob, setDob] = useState(new Date());\r\n  const [accept, setAccept] = useState(false);\r\n\r\n  return (\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Password Recovery\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          {!accept && (\r\n            <>\r\n              <KeyboardDatePicker\r\n                // disableToolbar\r\n                fullWidth\r\n                variant=\"inline\"\r\n                format=\"dd/MMM/yyyy\"\r\n                label=\"Date of Birth\"\r\n                inputVariant=\"outlined\"\r\n                value={dob}\r\n                onChange={(date) => {\r\n                  setDob(date as Date);\r\n                }}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setAccept(true)}\r\n                className={classes.submit}\r\n              >\r\n                Request to change password\r\n              </Button>\r\n            </>\r\n          )}\r\n          {accept && (\r\n            <>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"New Password\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"New Password (Again)\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => history.push({ pathname: \"/home\" })}\r\n                className={classes.submit}\r\n              >\r\n                Submit and Sign In\r\n              </Button>\r\n            </>\r\n          )}\r\n          <Grid container direction=\"column\" alignContent=\"center\">\r\n            <Grid item>\r\n              <Link\r\n                to={\r\n                  history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                  \"/signin\"\r\n                }\r\n                variant=\"body2\"\r\n              >\r\n                {\"Already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                to={\r\n                  history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                  \"/signup\"\r\n                }\r\n                variant=\"body2\"\r\n              >\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Dashboard.tsx",["447","448","449","450"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx",["451"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx",["452"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { Chart, Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport React from \"react\";\r\n\r\nexport function PopularCourseAdminChart() {\r\n  const data = [\r\n    {\r\n      title: \"Course name 1\",\r\n      rating: 20,\r\n      ratingValue: 4.78,\r\n      review: 100,\r\n      purchase: 10,\r\n    },\r\n    {\r\n      title: \"Course name 2\",\r\n      rating: 2,\r\n      ratingValue: 5,\r\n      review: 12,\r\n      purchase: 192,\r\n    },\r\n    {\r\n      title: \"Course name 3\",\r\n      rating: 10,\r\n      ratingValue: 4.98,\r\n      review: 50,\r\n      purchase: 230,\r\n    },\r\n    {\r\n      title: \"Course name 4\",\r\n      rating: 20,\r\n      ratingValue: 4.76,\r\n      review: 20,\r\n      purchase: 12,\r\n    },\r\n    {\r\n      title: \"Course name 5\",\r\n      rating: 100,\r\n      ratingValue: 3.99,\r\n      review: 25,\r\n      purchase: 0,\r\n    },\r\n    {\r\n      title: \"Course name 6\",\r\n      rating: 2,\r\n      ratingValue: 1.2,\r\n      review: 43,\r\n      purchase: 30,\r\n    },\r\n    {\r\n      title: \"Course name 7\",\r\n      rating: 15,\r\n      ratingValue: 2.1,\r\n      review: 53,\r\n      purchase: 40,\r\n    },\r\n    {\r\n      title: \"Course name 8\",\r\n      rating: 22,\r\n      ratingValue: 3.2,\r\n      review: 23,\r\n      purchase: 55,\r\n    },\r\n    {\r\n      title: \"Course name 9\",\r\n      rating: 1,\r\n      ratingValue: 5,\r\n      review: 100,\r\n      purchase: 67,\r\n    },\r\n  ];\r\n  const dataSource = data.map((item) => ({\r\n    ...item,\r\n    value:\r\n      item.rating * item.ratingValue * 0.35 +\r\n      item.review * 0.15 +\r\n      item.purchase * 0.5,\r\n  }));\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.ratingValue} (${data.rating})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.review}</Typography>\r\n        <Typography variant=\"body2\">Purchase: {data.purchase}</Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Most Popular Courses\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx",["453"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Course, Week } from \"classes/Course\";\r\nimport React, { useState } from \"react\";\r\nimport { WeekView } from \"./WeekView\";\r\n\r\nexport function Curriculum({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: ({ week: Week }) => void;\r\n}) {\r\n  const [weeks, setWeeks] = useState(\r\n    course.weeks == undefined ? [new Week()] : course.weeks\r\n  );\r\n\r\n  function onWeekChange(index, week) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks[index] = week;\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ week: updWeeks });\r\n  }\r\n  function handleOnWeekAdd() {\r\n    let updWeeks = [...weeks, new Week()];\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ week: updWeeks });\r\n  }\r\n\r\n  function handleOnWeekRemove(index) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks.splice(index, 1);\r\n    onCourseAttrChange({ week: updWeeks });\r\n    setWeeks([...updWeeks]);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      {/*      <ReactSortable\r\n        list={weeks}\r\n        setList={setWeeks}\r\n      > */}\r\n      {weeks.map((item, index) => (\r\n        // <div key={item.id}>\r\n        <Grid item container>\r\n          <WeekView\r\n            week={item}\r\n            onWeekChange={(week) => onWeekChange(index, week)}\r\n            onWeekRemove={() => handleOnWeekRemove(index)}\r\n            // setWeek={(week) => onWeekChange(index, week)}\r\n            // onWeekAdd={() => handleOnWeekAdd(index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Grid item container justify=\"center\" style={{ marginTop: 10 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddCircle />}\r\n          onClick={handleOnWeekAdd}\r\n        >\r\n          ADD WEEK\r\n        </Button>\r\n      </Grid>\r\n      {/* </div> */}\r\n      {/* </ReactSortable> */}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx",["454","455","456"],"import { Card, CardContent, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  rating: number;\r\n}\r\nexport function RatingLineChart() {\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n = 30;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n      data = new Date(date).toLocaleString(\"default\", {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n      });\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        rating: Math.random() * 5,\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Rating\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"spline\" />\r\n          <Series valueField=\"rating\" name=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Rating\" />\r\n          </ValueAxis>\r\n          <Legend visible={false} />\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx",["457"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { Chart, Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport React from \"react\";\r\n\r\nexport function CoursePopularityPieChart() {\r\n  const data = [\r\n    {\r\n      title: \"Course name 1\",\r\n      rating: 20,\r\n      ratingValue: 4.78,\r\n      review: 100,\r\n      purchase: 10,\r\n    },\r\n    {\r\n      title: \"Course name 2\",\r\n      rating: 2,\r\n      ratingValue: 5,\r\n      review: 12,\r\n      purchase: 192,\r\n    },\r\n    {\r\n      title: \"Course name 3\",\r\n      rating: 10,\r\n      ratingValue: 4.98,\r\n      review: 50,\r\n      purchase: 230,\r\n    },\r\n    {\r\n      title: \"Course name 4\",\r\n      rating: 20,\r\n      ratingValue: 4.76,\r\n      review: 20,\r\n      purchase: 12,\r\n    },\r\n    {\r\n      title: \"Course name 5\",\r\n      rating: 100,\r\n      ratingValue: 3.99,\r\n      review: 25,\r\n      purchase: 0,\r\n    },\r\n    {\r\n      title: \"Course name 6\",\r\n      rating: 2,\r\n      ratingValue: 1.2,\r\n      review: 43,\r\n      purchase: 30,\r\n    },\r\n    {\r\n      title: \"Course name 7\",\r\n      rating: 15,\r\n      ratingValue: 2.1,\r\n      review: 53,\r\n      purchase: 40,\r\n    },\r\n    {\r\n      title: \"Course name 8\",\r\n      rating: 22,\r\n      ratingValue: 3.2,\r\n      review: 23,\r\n      purchase: 55,\r\n    },\r\n    {\r\n      title: \"Course name 9\",\r\n      rating: 1,\r\n      ratingValue: 5,\r\n      review: 100,\r\n      purchase: 67,\r\n    },\r\n  ];\r\n  const dataSource = data.map((item) => ({\r\n    ...item,\r\n    value:\r\n      item.rating * item.ratingValue * 0.35 +\r\n      item.review * 0.15 +\r\n      item.purchase * 0.5,\r\n  }));\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.ratingValue} (${data.rating})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.review}</Typography>\r\n        <Typography variant=\"body2\">Purchase: {data.purchase}</Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Popularity\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx",["458","459","460","461"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  ArgumentAxis,\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  enrolledStudent: number;\r\n  review: number;\r\n  rating1: number;\r\n  rating2: number;\r\n  rating3: number;\r\n  rating4: number;\r\n  rating5: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\ninterface ICourse {\r\n  id: number;\r\n  name: string;\r\n}\r\nconst courseArray: Array<ICourse> = [\r\n  { id: 1, name: \"Course name 1\" },\r\n  { id: 2, name: \"Course name 2\" },\r\n  { id: 3, name: \"Course name 3\" },\r\n  { id: 4, name: \"Course name 4\" },\r\n  { id: 5, name: \"Course name 5\" },\r\n  { id: 6, name: \"Course name 6\" },\r\n  { id: 7, name: \"Course name 7\" },\r\n];\r\nexport function OverviewBarChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[1]);\r\n  const [course, setCourse] = useState<ICourse>(courseArray[0]);\r\n\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n =\r\n      viewType == viewTypeArray[0]\r\n        ? 7\r\n        : viewType === viewTypeArray[1]\r\n        ? 30\r\n        : 12;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      if (viewType == viewTypeArray[0]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", { weekday: \"short\" });\r\n      } else if (viewType == viewTypeArray[1]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n        });\r\n      } else if (viewType == viewTypeArray[2]) {\r\n        let date = new Date().setMonth(new Date().getMonth() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n        });\r\n      }\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        enrolledStudent: 10,\r\n        review: 20,\r\n        rating1: 3,\r\n        rating2: 4,\r\n        rating3: 0,\r\n        rating4: 10,\r\n        rating5: 2,\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  //   <SelectBox\r\n  //   dataSource={viewTypeArray}\r\n  //   defaultValue={viewTypeArray[1]}\r\n  //   onSelectionChanged={(event) =>\r\n  //     setViewType(event.selectedItem as string)\r\n  //   }\r\n  // />\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"stackedBar\" />\r\n          <Series\r\n            valueField=\"enrolledStudent\"\r\n            name=\"Enrolled Student\"\r\n            stack=\"Enrolled Student\"\r\n          />\r\n          {console.log(\"rendering\")}\r\n          <Series valueField=\"review\" name=\"Review\" stack=\"Review\" />\r\n          <Series valueField=\"rating1\" name=\"1 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating2\" name=\"2 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating3\" name=\"3 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating4\" name=\"4 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating5\" name=\"5 star\" stack=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Student number\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ArgumentAxis\r\n          // defaultVisualRange={{ startValue: 300, endValue: 500 }}\r\n          />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container direction=\"row\" justify=\"center\" xs spacing={1}>\r\n          <Grid item>\r\n            <Select\r\n              value={viewType}\r\n              onChange={(event) => setViewType(event.target.value as string)}\r\n              variant=\"outlined\"\r\n            >\r\n              {viewTypeArray.map((item) => (\r\n                <MenuItem\r\n                  key={item}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Select\r\n              value={course}\r\n              onChange={(event) => setCourse(event.target.value as ICourse)}\r\n              variant=\"outlined\"\r\n            >\r\n              {courseArray.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx",["462","463","464","465"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx",["466","467"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx",["468"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Lecture, Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LectureView } from \"./LectureView\";\r\n\r\nconst defaultLecture = {\r\n  id: 0,\r\n  name: \"Lecture name is here...\",\r\n  type: \"\",\r\n  file: {\r\n    title: \"Title\",\r\n    body: \"\",\r\n  },\r\n};\r\n\r\nexport function WeekView({\r\n  week,\r\n  onWeekChange,\r\n  onWeekRemove,\r\n}: {\r\n  week: Week;\r\n  onWeekChange: (Week) => void;\r\n  onWeekRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(week.title);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(week.title);\r\n  }, [week.title]);\r\n\r\n  function handleOnLectureChange(index, lecture) {\r\n    week.lectures.splice(index, 1, lecture);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n  }\r\n  function handleOnLectureAdd() {\r\n    onWeekChange({ ...week, lectures: [...week.lectures, new Lecture()] });\r\n  }\r\n  function handleOnLectureRemove(index) {\r\n    week.lectures.splice(index, 1);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n  }\r\n\r\n  return (\r\n    <Accordion expanded={expanded} style={{ width: \"100%\" }}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMore onClick={(event) => setExpanded(!expanded)} />}\r\n      >\r\n        {/* <IconButton>\r\n          <ImportExport />\r\n        </IconButton> */}\r\n        {!editMode && (\r\n          <>\r\n            <IconButton onClick={(event) => setEditMode(true)}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton onClick={onWeekRemove}>\r\n              <DeleteForever />\r\n            </IconButton>\r\n            <Typography>Week {10} :</Typography>\r\n            <Typography> {fieldValue}</Typography>\r\n          </>\r\n        )}\r\n        {editMode && (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              defaultValue={fieldValue}\r\n              onBlur={(event) => setFieldValue(event.target.value)}\r\n            />\r\n            <IconButton\r\n              onClick={(event) => {\r\n                onWeekChange({ ...week, title: fieldValue });\r\n                setEditMode(false);\r\n              }}\r\n            >\r\n              <CheckCircle />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={(event) => {\r\n                setEditMode(false);\r\n                setFieldValue(week.title);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n          > */}\r\n          {week.lectures.map((item, index) => (\r\n            <Grid item container>\r\n              <LectureView\r\n                lecture={item}\r\n                onLectureChange={(lecture) =>\r\n                  handleOnLectureChange(index, lecture)\r\n                }\r\n                onLectureRemove={() => handleOnLectureRemove(index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Grid item container justify=\"center\" style={{ marginTop: 10 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddCircle />}\r\n              onClick={handleOnLectureAdd}\r\n            >\r\n              ADD LECTURE\r\n            </Button>\r\n          </Grid>\r\n          {/* </ReactSortable> */}\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx",["469","470","471","472"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n  PictureAsPdf,\r\n  TextFields,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { Lecture } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ArticleInput } from \"./ArticleInput\";\r\nimport { ArticleOutput } from \"./ArticleOutput\";\r\nimport { LinkInput } from \"./LinkInput\";\r\nimport { LinkOutput } from \"./LinkOutput\";\r\nimport { PDFInput } from \"./PDFInput\";\r\nimport { PDFOutput } from \"./PDFOutput\";\r\nimport { VideoInput } from \"./VideoInput\";\r\nimport { VideoOutput } from \"./VideoOutput\";\r\n\r\nexport function LectureView({\r\n  lecture,\r\n  onLectureChange,\r\n  onLectureRemove,\r\n}: {\r\n  lecture: Lecture;\r\n  onLectureChange: (Lecture) => void;\r\n  onLectureRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(lecture.title);\r\n  const [body, setBody] = useState(\"LECTURE_TYPE\");\r\n  useEffect(() => {\r\n    setFieldValue(lecture.title);\r\n  }, [lecture.title]);\r\n\r\n  // function handleBodyChange(body) {\r\n  //   setState({ ...state, body: body });\r\n  // }\r\n  // function handleContentClick(panel) {\r\n  //   setState({\r\n  //     ...state,\r\n  //     expanded: state.contentClicked ? '' : panel\r\n  //   })\r\n  // }\r\n  function handleOnSave(file) {\r\n    console.log(file);\r\n    onLectureChange({ ...lecture, file: file });\r\n    setBody(file.type + \"_OUTPUT\");\r\n  }\r\n  function handleOnCancel() {\r\n    setBody(\r\n      lecture.file == undefined ? \"LECTURE_TYPE\" : lecture.file.type + \"_OUTPUT\"\r\n    );\r\n  }\r\n  function handleOnUpdate() {\r\n    setBody(lecture.file.type + \"_INPUT\");\r\n  }\r\n\r\n  function LectureType() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton onClick={(event) => setBody(\"ARTICLE_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <TextFields />\r\n            <Typography>Article</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"VIDEO_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <VideoCall />\r\n            <Typography>Video</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"PDF_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <PictureAsPdf />\r\n            <Typography>PDF</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"LINK_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <LinkIcon />\r\n            <Typography>Link</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function LectureRow() {\r\n    return (\r\n      <>\r\n        {!editMode && (\r\n          <>\r\n            <IconButton onClick={(event) => setEditMode(true)}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton onClick={onLectureRemove}>\r\n              <DeleteForever />\r\n            </IconButton>\r\n            <Typography>Lecture {11} :</Typography>\r\n            <Typography> {lecture.title}</Typography>\r\n            {!expanded && lecture.file == undefined && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={(event) => setExpanded(!expanded)}\r\n              >\r\n                Content +\r\n              </Button>\r\n            )}\r\n            {expanded && lecture.file == undefined && (\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setExpanded(!expanded);\r\n                  setBody(\"LECTURE_TYPE\");\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            )}\r\n          </>\r\n        )}\r\n        {editMode && (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              defaultValue={lecture.title}\r\n              onBlur={(event) => setFieldValue(event.target.value)}\r\n            />\r\n            <IconButton\r\n              onClick={(event) => {\r\n                onLectureChange({ ...lecture, title: fieldValue });\r\n                setEditMode(false);\r\n              }}\r\n            >\r\n              <CheckCircle />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={(event) => {\r\n                setEditMode(false);\r\n                setFieldValue(lecture.title);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      key={lecture.id}\r\n      expanded={expanded}\r\n      style={{ backgroundColor: \"pink\", width: \"100%\" }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={\r\n          lecture.file != undefined && (\r\n            <ExpandMore onClick={(event) => setExpanded(!expanded)} />\r\n          )\r\n        }\r\n      >\r\n        <LectureRow />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {body === \"LECTURE_TYPE\" && <LectureType />}\r\n\r\n        {body === \"ARTICLE_INPUT\" && (\r\n          <ArticleInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"ARTICLE_OUTPUT\" && (\r\n          <ArticleOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"LINK_INPUT\" && (\r\n          <LinkInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"LINK_OUTPUT\" && (\r\n          <LinkOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"VIDEO_INPUT\" && (\r\n          <VideoInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_OUTPUT\" && (\r\n          <VideoOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"PDF_INPUT\" && (\r\n          <PDFInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"PDF_OUTPUT\" && (\r\n          <PDFOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx",["473","474","475"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport VideoPlayer from \"react-simple-video-player\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function VideoOutput({ file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      <VideoPlayer\r\n        url={require(\"assets/video/Video-1.mp4\")}\r\n        // poster={require('assets/img/Banner-1.jpg')}\r\n        width={400}\r\n        height={300}\r\n        autoplay\r\n      />\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.content} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx",["476"],"import { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { FileUploader } from \"tools/customDesign/FileUploader\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\n\r\nexport function VideoInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTile] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  function handleContentChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"VIDEO\", title, content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <MUIRichTextEditor\r\n        label=\"Start typing here...\"\r\n        value={content}\r\n        onChange={handleContentChange}\r\n      />\r\n      <FileUploader />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx",["477","478","479","480","481","482","483"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function PDFOutput({ file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      {/* <PDFOpener /> */}\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.content} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx",["484"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\nimport { FileUploader } from \"tools/customDesign/FileUploader\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\n\r\nexport function PDFInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTitle] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  function handleContentChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"PDF\", title, content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <MUIRichTextEditor\r\n        label=\"Start typing here...\"\r\n        defaultValue={content}\r\n        onChange={handleContentChange}\r\n      />\r\n      <FileUploader />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx",["485","486","487","488","489","490","491","492","493","494"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Country } from \"classes/Country\";\r\nimport {\r\n  Designation,\r\n  EduStatus,\r\n  Student,\r\n  Teacher,\r\n  CreditCard,\r\n} from \"classes/Person\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CustomImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    padding: \"30px 0px\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst countryItem: Array<Country> = [\r\n  { id: 1, name: \"Bangladesh\", adminId: \"Mehedi\" },\r\n  { id: 2, name: \"India\", adminId: \"Mehedi\" },\r\n  { id: 3, name: \"Palestain\", adminId: \"Mehedi\" },\r\n  { id: 4, name: \"Egypt\", adminId: \"Mehedi\" },\r\n  { id: 5, name: \"Iran\", adminId: \"Mehedi\" },\r\n];\r\nconst designations: Array<Designation> = [\r\n  { id: 1, type: \"Professor\", adminId: \"Mehedi\" },\r\n  { id: 2, type: \"Freelencer\", adminId: \"Mehedi\" },\r\n];\r\nconst eduStatuses: Array<EduStatus> = [\r\n  { id: 1, type: \"HSC\", adminId: \"Mehedi\" },\r\n  { id: 2, type: \"SSC\", adminId: \"Mehedi\" },\r\n  { id: 3, type: \"BA\", adminId: \"Mehedi\" },\r\n  { id: 4, type: \"BSc\", adminId: \"Mehedi\" },\r\n  { id: 5, type: \"MA\", adminId: \"Mehedi\" },\r\n  { id: 6, type: \"MSc\", adminId: \"Mehedi\" },\r\n];\r\n\r\nconst ProfileDetails = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [cardExpireDate, setCardExpireDate] = React.useState(new Date());\r\n  console.log(cardExpireDate);\r\n  // Initialize - start\r\n  let person: Student | Teacher;\r\n  let statusItem: Array<Designation> | Array<EduStatus>;\r\n  if (props.location.state.accountType == \"Student\") {\r\n    person = props.location.state as Student;\r\n    statusItem = eduStatuses;\r\n  } else if (props.location.state.accountType == \"Teacher\") {\r\n    person = props.location.state as Teacher;\r\n    statusItem = designations;\r\n  }\r\n  // Initialize - end\r\n\r\n  function handleSaveClicked() {\r\n    history.push({ pathname: \"/home\", state: person });\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    setCountry(event.target.value);\r\n    person.country = event.target.value;\r\n  };\r\n  const handleStatusChange = (event) => {\r\n    setStatus(event.target.value);\r\n    person.accountType == \"Student\"\r\n      ? // @ts-ignore\r\n        (person.eduStatus = event.target.value)\r\n      : // @ts-ignore\r\n        (person.designation = event.target.value);\r\n  };\r\n\r\n  const [dob, setDob] = React.useState(new Date());\r\n\r\n  const handleDobChange = (date) => {\r\n    setDob(date);\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  function PersonalDetails() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"First Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.firstName}\r\n          onChange={(event) => (person.firstName = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Last Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.lastName}\r\n          onChange={(event) => (person.lastName = event.target.value)}\r\n        />\r\n        <LanguageField\r\n          // @ts-ignore\r\n          objects={person.languages}\r\n          onObjectsChange={(selected) => (person.languages = selected)}\r\n        />\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Country\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={country}\r\n            onChange={handleCountryChange}\r\n            label=\"Country\"\r\n          >\r\n            {countryItem.map((item) => (\r\n              <MenuItem\r\n                key={item.id}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            {person.accountType == \"Student\"\r\n              ? \"Educational Status\"\r\n              : \"Designation\"}\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={status}\r\n            onChange={handleStatusChange}\r\n            label={\r\n              person.accountType == \"Student\"\r\n                ? \"Educational Status\"\r\n                : \"Designation\"\r\n            }\r\n          >\r\n            {statusItem.map((item) => (\r\n              <MenuItem\r\n                key={item.id}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <KeyboardDatePicker\r\n          // disableToolbar\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Date of Birth\"\r\n          inputVariant=\"outlined\"\r\n          value={dob}\r\n          onChange={(date) => {\r\n            setDob(date as Date);\r\n            person.dob = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Institution\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.institution}\r\n          onChange={(event) => (person.institution = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Website\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.website}\r\n          onChange={(event) => (person.website = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Facebook\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.facebook.com/\",\r\n          }}\r\n          defaultValue={person.fbURL}\r\n          onChange={(event) => (person.fbURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"YouTube\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.youtube.com/channel/\",\r\n          }}\r\n          defaultValue={person.youtubeURL}\r\n          onChange={(event) => (person.youtubeURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"LinkedIn\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.linkedin.com/\",\r\n          }}\r\n          defaultValue={person.linkedInUrl}\r\n          onChange={(event) => (person.linkedInUrl = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"About\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          multiline\r\n          rows={6}\r\n          defaultValue={person.about}\r\n          onChange={(event) => (person.about = event.target.value)}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function CreditCardInfo() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Credit Card No\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.cardNo ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.cardNo = event.target.value;\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Name on Card\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.nameOnCard ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.nameOnCard = event.target.value;\r\n          }}\r\n        />\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Expire Date\"\r\n          inputVariant=\"outlined\"\r\n          value={cardExpireDate}\r\n          onChange={(date) => {\r\n            setCardExpireDate(date as Date);\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.expireDate = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  function Security() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          disabled\r\n          defaultValue={person.email}\r\n        />\r\n        <TextField\r\n          label=\"Old Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        />\r\n        <TextField\r\n          label=\"New Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        />\r\n        <TextField\r\n          label=\"New Password (Again)\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    // <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    // <User>\r\n    <Grid item xs={12} sm={8} md={5}>\r\n      <Accordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n      >\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            General settings\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <PersonalDetails />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel2\"}\r\n        onChange={handleChange(\"panel2\")}\r\n      >\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            Profile Picture\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <CustomImageUploader />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel3\"}\r\n        onChange={handleChange(\"panel3\")}\r\n      >\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            Credit Card Information\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <CreditCardInfo />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel4\"}\r\n        onChange={handleChange(\"panel4\")}\r\n      >\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            Security\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Security />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Grid item container justify=\"center\" style={{ padding: 10 }}>\r\n        <Button onClick={handleSaveClicked} variant=\"contained\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n        <Button\r\n          onClick={(event) => history.goBack()}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 10 }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n    // </User >\r\n    // </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx",["495","496","497","498"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  teacher: number;\r\n  student: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\n\r\nexport function UserRegistrationChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[1]);\r\n\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n =\r\n      viewType == viewTypeArray[0]\r\n        ? 7\r\n        : viewType === viewTypeArray[1]\r\n        ? 30\r\n        : 12;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      if (viewType == viewTypeArray[0]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", { weekday: \"short\" });\r\n      } else if (viewType == viewTypeArray[1]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n        });\r\n      } else if (viewType == viewTypeArray[2]) {\r\n        let date = new Date().setMonth(new Date().getMonth() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n        });\r\n      }\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        teacher: Math.round(Math.random() * 200),\r\n        student: Math.round(Math.random() * 200),\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"stackedBar\" />\r\n          <Series valueField=\"teacher\" name=\"Teacher\" stack=\"Teacher\" />\r\n          <Series valueField=\"student\" name=\"Student\" stack=\"Student\" />\r\n          <ValueAxis>\r\n            <Title text=\"Count\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container justify=\"center\">\r\n          <Select\r\n            value={viewType}\r\n            onChange={(event) => setViewType(event.target.value as string)}\r\n            variant=\"outlined\"\r\n          >\r\n            {viewTypeArray.map((item) => (\r\n              <MenuItem\r\n                key={item}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.js",["499","500","501"],"import { Button, Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nexport function CustomImageUploader({\r\n  pic = \"\",\r\n  onPictureChange = (picture) => (console.log(picture))\r\n}) {\r\n  const [picture, setPicture] = useState(pic);\r\n  function handlePictureChange(picture) {\r\n    setPicture(picture);\r\n    onPictureChange(picture);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\">\r\n      <Card style={{ width: \"50%\" }} >\r\n        <img style={{ width: \"100%\" }} src=\"https://global-uploads.webflow.com/5ef5480befd392489dacf544/5f9f5e5943de7e69a1339242_5f44a7398c0cdf460857e744_img-image.jpeg\" />\r\n        {/* <CardMedia style={{ height: 300 }} image={\"https://global-uploads.webflow.com/5ef5480befd392489dacf544/5f9f5e5943de7e69a1339242_5f44a7398c0cdf460857e744_img-image.jpeg\"} /> */}\r\n      </Card>\r\n      <ImageUploader\r\n        withIcon={false}\r\n        buttonText={picture.length == 0 ? 'Choose image' : \"Change image\"}\r\n        withPreview={true}\r\n        singleImage\r\n        onChange={handlePictureChange}\r\n        imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n        maxFileSize={5242880}\r\n        withLabel={false}\r\n      />\r\n      {\r\n        picture.length != 0 ?\r\n          <Button style={{ maxWidth: 350 }}>Upload</Button>\r\n          : null\r\n      }\r\n    </Grid>\r\n  )\r\n}","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx",["502","503"],"import { Grid, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport CourseBox from 'components/course/CourseBox';\r\nimport React, { useState } from 'react';\r\n\r\nconst CourseBoxContainer = ({ courses }) => {\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        {courses.map(course => (\r\n          <CourseBox courseData={course} />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\nconst CoursePagination = ({ courses, title }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n\r\n  const indexOfLastCourse = currentPage * postsPerPage;\r\n  const indexOfFirstCourse = indexOfLastCourse - postsPerPage;\r\n  const currentCourses = courses.slice(indexOfFirstCourse, indexOfLastCourse);\r\n\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-between\">\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <CourseBoxContainer courses={currentCourses} />\r\n      <Pagination\r\n        count={Math.ceil(courses.length / postsPerPage)}\r\n        page={currentPage}\r\n        onChange={paginate}\r\n        color=\"secondary\"\r\n        siblingCount={3}\r\n        size=\"large\"\r\n      />\r\n    </Grid >\r\n  );\r\n};\r\n\r\nexport default CoursePagination;\r\n\r\n\r\n\r\n\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx",["504","505","506"],"import { Property } from \"classes/Course\";\r\nimport React from \"react\";\r\nimport { AddAbleTextField } from \"./AddAbleTextField\";\r\n\r\nexport function TargetStudent({ course, onCourseAttrChange }) {\r\n  if (course.outcomes == undefined) {\r\n    course = { ...course, outcomes: [\"\"] };\r\n  }\r\n  if (course.prerequisite == undefined) {\r\n    course = { ...course, prerequisite: [\"\"] };\r\n  }\r\n  if (course.properties == undefined) {\r\n    course = { ...course, properties: [new Property()] };\r\n  }\r\n  console.log(course);\r\n  return (\r\n    <>\r\n      <AddAbleTextField\r\n        header=\"What will students learn in your course?\"\r\n        objects={course.outcomes}\r\n        onObjectsChange={(outcomes) =>\r\n          onCourseAttrChange({ outcomes: outcomes })\r\n        }\r\n      />\r\n      <AddAbleTextField\r\n        header=\"Are there any course requirements or prerequisites?\"\r\n        objects={course.prerequisite}\r\n        onObjectsChange={(prerequisite) =>\r\n          onCourseAttrChange({ prerequisite: prerequisite })\r\n        }\r\n      />\r\n      <AddAbleTextField\r\n        header=\"Write down the properties in brief with attractive icons\"\r\n        showIconPicker\r\n        objects={course.properties}\r\n        onObjectsChange={(properties) =>\r\n          onCourseAttrChange({ properties: properties })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\FileUploader.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx",["507","508"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"components/ImageCarousel\";\r\nimport User from \"layout/User\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CourseCarousel } from \"./course/CourseCarousel\";\r\n\r\nconst courses = [\r\n  {\r\n    title: \"Free courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homeContainer: {\r\n    padding: theme.spacing(0, 4),\r\n  },\r\n}));\r\n\r\nexport const Home = (props) => {\r\n  let match = useRouteMatch();\r\n  const history = useHistory();\r\n  console.log(props.location.state);\r\n  const classes = useStyles();\r\n  return (\r\n    <User>\r\n      <Grid container className={classes.homeContainer} direction=\"column\">\r\n        <Grid item>\r\n          <ImageSlider />\r\n        </Grid>\r\n        <Grid item>\r\n          {courses.map((courses) => (\r\n            <CourseCarousel title={courses.title} courses={courses.courses} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx",[],{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","severity":1,"message":"514","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":16},{"ruleId":"513","severity":1,"message":"517","line":10,"column":19,"nodeType":"515","messageId":"516","endLine":10,"endColumn":29},{"ruleId":"513","severity":1,"message":"518","line":26,"column":9,"nodeType":"515","messageId":"516","endLine":26,"endColumn":16},{"ruleId":"513","severity":1,"message":"519","line":27,"column":10,"nodeType":"515","messageId":"516","endLine":27,"endColumn":15},{"ruleId":"513","severity":1,"message":"520","line":27,"column":17,"nodeType":"515","messageId":"516","endLine":27,"endColumn":25},{"ruleId":"521","severity":1,"message":"522","line":54,"column":37,"nodeType":"523","messageId":"524","endLine":54,"endColumn":39},{"ruleId":"525","severity":1,"message":"526","line":56,"column":63,"nodeType":"527","messageId":"528","endLine":56,"endColumn":65},{"ruleId":"529","severity":1,"message":"530","line":43,"column":5,"nodeType":"531","endLine":43,"endColumn":36},{"ruleId":"532","severity":1,"message":"533","line":14,"column":3,"nodeType":"534","messageId":"535","endLine":16,"endColumn":4},{"ruleId":"536","severity":1,"message":"537","line":50,"column":21,"nodeType":"531","messageId":"538","endLine":55,"endColumn":22,"fix":"539"},{"ruleId":"536","severity":1,"message":"537","line":79,"column":17,"nodeType":"531","messageId":"538","endLine":83,"endColumn":18,"fix":"540"},{"ruleId":"536","severity":1,"message":"537","line":93,"column":17,"nodeType":"531","messageId":"538","endLine":97,"endColumn":18,"fix":"541"},{"ruleId":"536","severity":1,"message":"537","line":107,"column":17,"nodeType":"531","messageId":"538","endLine":111,"endColumn":18,"fix":"542"},{"ruleId":"536","severity":1,"message":"537","line":121,"column":17,"nodeType":"531","messageId":"538","endLine":125,"endColumn":18,"fix":"543"},{"ruleId":"536","severity":1,"message":"537","line":135,"column":17,"nodeType":"531","messageId":"538","endLine":139,"endColumn":18,"fix":"544"},{"ruleId":"536","severity":1,"message":"537","line":149,"column":17,"nodeType":"531","messageId":"538","endLine":153,"endColumn":18,"fix":"545"},{"ruleId":"509","replacedBy":"546"},{"ruleId":"511","replacedBy":"547"},{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","severity":1,"message":"514","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":16},{"ruleId":"513","severity":1,"message":"517","line":10,"column":19,"nodeType":"515","messageId":"516","endLine":10,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":16},{"ruleId":"513","severity":1,"message":"517","line":10,"column":19,"nodeType":"515","messageId":"516","endLine":10,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":4,"column":10,"nodeType":"515","messageId":"516","endLine":4,"endColumn":16},{"ruleId":"513","severity":1,"message":"517","line":10,"column":19,"nodeType":"515","messageId":"516","endLine":10,"endColumn":29},{"ruleId":"548","severity":1,"message":"549","line":20,"column":7,"nodeType":"515","messageId":"516","endLine":20,"endColumn":11},{"ruleId":"548","severity":1,"message":"550","line":82,"column":12,"nodeType":"515","messageId":"516","endLine":82,"endColumn":22},{"ruleId":"525","severity":1,"message":"526","line":103,"column":42,"nodeType":"527","messageId":"528","endLine":103,"endColumn":44},{"ruleId":"548","severity":1,"message":"551","line":8,"column":7,"nodeType":"515","messageId":"516","endLine":8,"endColumn":12},{"ruleId":"548","severity":1,"message":"552","line":16,"column":10,"nodeType":"515","messageId":"516","endLine":16,"endColumn":17},{"ruleId":"548","severity":1,"message":"553","line":16,"column":19,"nodeType":"515","messageId":"516","endLine":16,"endColumn":29},{"ruleId":"525","severity":1,"message":"554","line":38,"column":19,"nodeType":"527","messageId":"528","endLine":38,"endColumn":21},{"ruleId":"525","severity":1,"message":"554","line":48,"column":19,"nodeType":"527","messageId":"528","endLine":48,"endColumn":21},{"ruleId":"525","severity":1,"message":"526","line":59,"column":14,"nodeType":"527","messageId":"528","endLine":59,"endColumn":16},{"ruleId":"548","severity":1,"message":"555","line":23,"column":10,"nodeType":"515","messageId":"516","endLine":23,"endColumn":23},{"ruleId":"548","severity":1,"message":"556","line":48,"column":11,"nodeType":"515","messageId":"516","endLine":48,"endColumn":26},{"ruleId":"548","severity":1,"message":"557","line":58,"column":10,"nodeType":"515","messageId":"516","endLine":58,"endColumn":17},{"ruleId":"548","severity":1,"message":"517","line":58,"column":19,"nodeType":"515","messageId":"516","endLine":58,"endColumn":29},{"ruleId":"548","severity":1,"message":"558","line":72,"column":10,"nodeType":"515","messageId":"516","endLine":72,"endColumn":14},{"ruleId":"548","severity":1,"message":"559","line":72,"column":16,"nodeType":"515","messageId":"516","endLine":72,"endColumn":23},{"ruleId":"548","severity":1,"message":"560","line":177,"column":9,"nodeType":"515","messageId":"516","endLine":177,"endColumn":30},{"ruleId":"548","severity":1,"message":"561","line":5,"column":3,"nodeType":"515","messageId":"516","endLine":5,"endColumn":7},{"ruleId":"529","severity":1,"message":"530","line":71,"column":9,"nodeType":"531","endLine":74,"endColumn":11},{"ruleId":"548","severity":1,"message":"562","line":15,"column":10,"nodeType":"515","messageId":"516","endLine":15,"endColumn":19},{"ruleId":"548","severity":1,"message":"562","line":15,"column":10,"nodeType":"515","messageId":"516","endLine":15,"endColumn":19},{"ruleId":"548","severity":1,"message":"563","line":71,"column":7,"nodeType":"515","messageId":"516","endLine":71,"endColumn":21},{"ruleId":"548","severity":1,"message":"564","line":76,"column":10,"nodeType":"515","messageId":"516","endLine":76,"endColumn":23},{"ruleId":"525","severity":1,"message":"554","line":81,"column":16,"nodeType":"527","messageId":"528","endLine":81,"endColumn":18},{"ruleId":"548","severity":1,"message":"562","line":14,"column":10,"nodeType":"515","messageId":"516","endLine":14,"endColumn":19},{"ruleId":"548","severity":1,"message":"565","line":18,"column":10,"nodeType":"515","messageId":"516","endLine":18,"endColumn":31},{"ruleId":"548","severity":1,"message":"556","line":50,"column":11,"nodeType":"515","messageId":"516","endLine":50,"endColumn":26},{"ruleId":"548","severity":1,"message":"517","line":60,"column":19,"nodeType":"515","messageId":"516","endLine":60,"endColumn":29},{"ruleId":"548","severity":1,"message":"559","line":74,"column":16,"nodeType":"515","messageId":"516","endLine":74,"endColumn":23},{"ruleId":"548","severity":1,"message":"566","line":19,"column":10,"nodeType":"515","messageId":"516","endLine":19,"endColumn":16},{"ruleId":"548","severity":1,"message":"567","line":2,"column":10,"nodeType":"515","messageId":"516","endLine":2,"endColumn":15},{"ruleId":"525","severity":1,"message":"554","line":15,"column":18,"nodeType":"527","messageId":"528","endLine":15,"endColumn":20},{"ruleId":"548","severity":1,"message":"568","line":1,"column":29,"nodeType":"515","messageId":"516","endLine":1,"endColumn":37},{"ruleId":"548","severity":1,"message":"569","line":1,"column":39,"nodeType":"515","messageId":"516","endLine":1,"endColumn":45},{"ruleId":"548","severity":1,"message":"570","line":14,"column":17,"nodeType":"515","messageId":"516","endLine":14,"endColumn":25},{"ruleId":"548","severity":1,"message":"567","line":2,"column":10,"nodeType":"515","messageId":"516","endLine":2,"endColumn":15},{"ruleId":"525","severity":1,"message":"554","line":49,"column":16,"nodeType":"527","messageId":"528","endLine":49,"endColumn":18},{"ruleId":"525","severity":1,"message":"554","line":56,"column":20,"nodeType":"527","messageId":"528","endLine":56,"endColumn":22},{"ruleId":"525","severity":1,"message":"554","line":59,"column":27,"nodeType":"527","messageId":"528","endLine":59,"endColumn":29},{"ruleId":"525","severity":1,"message":"554","line":65,"column":27,"nodeType":"527","messageId":"528","endLine":65,"endColumn":29},{"ruleId":"548","severity":1,"message":"571","line":11,"column":3,"nodeType":"515","messageId":"516","endLine":11,"endColumn":8},{"ruleId":"548","severity":1,"message":"572","line":15,"column":10,"nodeType":"515","messageId":"516","endLine":15,"endColumn":25},{"ruleId":"548","severity":1,"message":"573","line":90,"column":10,"nodeType":"515","messageId":"516","endLine":90,"endColumn":20},{"ruleId":"548","severity":1,"message":"574","line":91,"column":10,"nodeType":"515","messageId":"516","endLine":91,"endColumn":17},{"ruleId":"548","severity":1,"message":"575","line":16,"column":10,"nodeType":"515","messageId":"516","endLine":16,"endColumn":16},{"ruleId":"548","severity":1,"message":"576","line":99,"column":10,"nodeType":"515","messageId":"516","endLine":99,"endColumn":32},{"ruleId":"548","severity":1,"message":"577","line":23,"column":7,"nodeType":"515","messageId":"516","endLine":23,"endColumn":21},{"ruleId":"525","severity":1,"message":"554","line":66,"column":20,"nodeType":"527","messageId":"528","endLine":66,"endColumn":22},{"ruleId":"525","severity":1,"message":"554","line":122,"column":40,"nodeType":"527","messageId":"528","endLine":122,"endColumn":42},{"ruleId":"525","severity":1,"message":"554","line":131,"column":39,"nodeType":"527","messageId":"528","endLine":131,"endColumn":41},{"ruleId":"525","severity":1,"message":"526","line":181,"column":24,"nodeType":"527","messageId":"528","endLine":181,"endColumn":26},{"ruleId":"548","severity":1,"message":"578","line":7,"column":9,"nodeType":"515","messageId":"516","endLine":7,"endColumn":19},{"ruleId":"548","severity":1,"message":"579","line":8,"column":10,"nodeType":"515","messageId":"516","endLine":8,"endColumn":18},{"ruleId":"548","severity":1,"message":"580","line":9,"column":9,"nodeType":"515","messageId":"516","endLine":9,"endColumn":17},{"ruleId":"548","severity":1,"message":"581","line":9,"column":17,"nodeType":"515","messageId":"516","endLine":9,"endColumn":24},{"ruleId":"548","severity":1,"message":"578","line":6,"column":9,"nodeType":"515","messageId":"516","endLine":6,"endColumn":19},{"ruleId":"548","severity":1,"message":"579","line":7,"column":10,"nodeType":"515","messageId":"516","endLine":7,"endColumn":18},{"ruleId":"548","severity":1,"message":"580","line":8,"column":9,"nodeType":"515","messageId":"516","endLine":8,"endColumn":17},{"ruleId":"548","severity":1,"message":"582","line":10,"column":10,"nodeType":"515","messageId":"516","endLine":10,"endColumn":18},{"ruleId":"548","severity":1,"message":"583","line":11,"column":10,"nodeType":"515","messageId":"516","endLine":11,"endColumn":20},{"ruleId":"548","severity":1,"message":"584","line":11,"column":22,"nodeType":"515","messageId":"516","endLine":11,"endColumn":35},{"ruleId":"548","severity":1,"message":"585","line":13,"column":12,"nodeType":"515","messageId":"516","endLine":13,"endColumn":33},{"ruleId":"548","severity":1,"message":"586","line":9,"column":17,"nodeType":"515","messageId":"516","endLine":9,"endColumn":25},{"ruleId":"548","severity":1,"message":"587","line":88,"column":9,"nodeType":"515","messageId":"516","endLine":88,"endColumn":14},{"ruleId":"525","severity":1,"message":"554","line":96,"column":40,"nodeType":"527","messageId":"528","endLine":96,"endColumn":42},{"ruleId":"525","severity":1,"message":"554","line":99,"column":47,"nodeType":"527","messageId":"528","endLine":99,"endColumn":49},{"ruleId":"525","severity":1,"message":"554","line":115,"column":24,"nodeType":"527","messageId":"528","endLine":115,"endColumn":26},{"ruleId":"548","severity":1,"message":"588","line":124,"column":9,"nodeType":"515","messageId":"516","endLine":124,"endColumn":24},{"ruleId":"525","severity":1,"message":"554","line":182,"column":33,"nodeType":"527","messageId":"528","endLine":182,"endColumn":35},{"ruleId":"525","severity":1,"message":"554","line":192,"column":34,"nodeType":"527","messageId":"528","endLine":192,"endColumn":36},{"ruleId":"525","severity":1,"message":"554","line":296,"column":29,"nodeType":"527","messageId":"528","endLine":296,"endColumn":31},{"ruleId":"525","severity":1,"message":"554","line":307,"column":29,"nodeType":"527","messageId":"528","endLine":307,"endColumn":31},{"ruleId":"525","severity":1,"message":"554","line":319,"column":29,"nodeType":"527","messageId":"528","endLine":319,"endColumn":31},{"ruleId":"525","severity":1,"message":"554","line":30,"column":16,"nodeType":"527","messageId":"528","endLine":30,"endColumn":18},{"ruleId":"525","severity":1,"message":"554","line":37,"column":20,"nodeType":"527","messageId":"528","endLine":37,"endColumn":22},{"ruleId":"525","severity":1,"message":"554","line":40,"column":27,"nodeType":"527","messageId":"528","endLine":40,"endColumn":29},{"ruleId":"525","severity":1,"message":"554","line":46,"column":27,"nodeType":"527","messageId":"528","endLine":46,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":18,"column":9,"nodeType":"531","endLine":18,"endColumn":173},{"ruleId":"525","severity":1,"message":"554","line":23,"column":36,"nodeType":"527","messageId":"528","endLine":23,"endColumn":38},{"ruleId":"525","severity":1,"message":"526","line":32,"column":24,"nodeType":"527","messageId":"528","endLine":32,"endColumn":26},{"ruleId":"548","severity":1,"message":"552","line":18,"column":10,"nodeType":"515","messageId":"516","endLine":18,"endColumn":17},{"ruleId":"548","severity":1,"message":"553","line":18,"column":19,"nodeType":"515","messageId":"516","endLine":18,"endColumn":29},{"ruleId":"525","severity":1,"message":"554","line":6,"column":23,"nodeType":"527","messageId":"528","endLine":6,"endColumn":25},{"ruleId":"525","severity":1,"message":"554","line":9,"column":27,"nodeType":"527","messageId":"528","endLine":9,"endColumn":29},{"ruleId":"525","severity":1,"message":"554","line":12,"column":25,"nodeType":"527","messageId":"528","endLine":12,"endColumn":27},{"ruleId":"548","severity":1,"message":"551","line":391,"column":7,"nodeType":"515","messageId":"516","endLine":391,"endColumn":12},{"ruleId":"548","severity":1,"message":"589","line":392,"column":9,"nodeType":"515","messageId":"516","endLine":392,"endColumn":16},"no-native-reassign",["590"],"no-negated-in-lhs",["591"],"no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","'setColumns' is assigned a value but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"592","text":"593"},{"range":"594","text":"593"},{"range":"595","text":"593"},{"range":"596","text":"593"},{"range":"597","text":"593"},{"range":"598","text":"593"},{"range":"599","text":"593"},["590"],["591"],"@typescript-eslint/no-unused-vars","'icon' is assigned a value but never used.","'DrawerList' is defined but never used.","'match' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","Expected '===' and instead saw '=='.","'ContentHeader' is defined but never used.","'PurchaseHistory' is defined but never used.","'columns' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'handleMouseEnterLeave' is assigned a value but never used.","'Card' is defined but never used.","'Copyright' is defined but never used.","'person' is defined but never used.","'againPassword' is assigned a value but never used.","'UserRegistrationChart' is defined but never used.","'FAQBox' is defined but never used.","'Chart' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'useState' is defined but never used.","'Slide' is defined but never used.","'TransitionProps' is defined but never used.","'nameOnCard' is assigned a value but never used.","'cardNum' is assigned a value but never used.","'Rating' is defined but never used.","'FAQInputQuestionDialog' is defined but never used.","'defaultLecture' is assigned a value but never used.","'onFileLoad' is assigned a value but never used.","'pictures' is assigned a value but never used.","'onChange' is assigned a value but never used.","'setTile' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'setTitle' is assigned a value but never used.","'theme' is assigned a value but never used.","'handleDobChange' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1762,1762]," rel=\"noreferrer\"",[2770,2770],[3261,3261],[3751,3751],[4236,4236],[4731,4731],[5230,5230]]