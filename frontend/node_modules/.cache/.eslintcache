[{"D:\\program\\java\\coursebucket\\frontend\\src\\index.js":"1","D:\\program\\java\\coursebucket\\frontend\\src\\reportWebVitals.js":"2","D:\\program\\java\\coursebucket\\frontend\\src\\App.tsx":"3","D:\\program\\java\\coursebucket\\frontend\\src\\Theme.js":"4","D:\\program\\java\\coursebucket\\frontend\\src\\layout\\Auth.tsx":"5","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\MyCourse.tsx":"6","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\Dashboard.tsx":"7","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx":"8","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx":"9","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\SearchPage.tsx":"10","D:\\program\\java\\coursebucket\\frontend\\src\\components\\Home.tsx":"11","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\Profile.tsx":"12","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\ProfileDetails.tsx":"13","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx":"14","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CourseCarousel.tsx":"15","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\responsive\\Responsive.js":"16","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CourseBox.tsx":"17","D:\\program\\java\\coursebucket\\frontend\\src\\layout\\User.tsx":"18","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\Sort.tsx":"19","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\Filter.tsx":"20","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\Chips.tsx":"21","D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Category.tsx":"22","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx":"23","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\LanguageField.js":"24","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\ImageUploader.js":"25","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\responsive\\utilResponsive.js":"26","D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Person.tsx":"27","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx":"28","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js":"29","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx":"30","D:\\program\\java\\coursebucket\\frontend\\src\\components\\footer\\Footer.tsx":"31","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx":"32","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx":"33","D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Course.tsx":"34","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx":"35","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx":"36","D:\\program\\java\\coursebucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js":"37","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx":"38","D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Files.tsx":"39","D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\Header.tsx":"40","D:\\program\\java\\coursebucket\\frontend\\src\\layout\\DrawerLayout.tsx":"41","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx":"42","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx":"43","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx":"44","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx":"45","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx":"46","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx":"47","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx":"48","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx":"49","D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\TopNav.tsx":"50","D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\SideNav.tsx":"51","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx":"52","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx":"53","D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\MenuBar.tsx":"54","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\FileUploader.js":"55","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js":"56","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js":"57","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js":"58","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js":"59","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js":"60","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx":"61","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx":"62","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx":"63","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx":"64","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx":"65","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx":"66","D:\\program\\java\\coursebucket\\frontend\\src\\Data.js":"67","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js":"68","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js":"69","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js":"70","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx":"71","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx":"72","D:\\program\\java\\coursebucket\\frontend\\src\\components\\ImageCarousel.js":"73","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CustomPagination.tsx":"74","D:\\program\\java\\coursebucket\\frontend\\src\\layout\\Pagination.tsx":"75","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Review.tsx":"76","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx":"77","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx":"78","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx":"79","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx":"80","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx":"81","D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\SignUp.tsx":"82","D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx":"83","D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\SignIn.tsx":"84","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx":"85","D:\\program\\java\\coursebucket\\frontend\\src\\Configure.js":"86","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js":"87","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js":"88","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\Tools.tsx":"89","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js":"90","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js":"91","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js":"92","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js":"93","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js":"94","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\api\\PersonService.tsx":"95","D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx":"96","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\Alert.tsx":"97"},{"size":956,"mtime":1627835688876,"results":"98","hashOfConfig":"99"},{"size":362,"mtime":499162500000,"results":"100","hashOfConfig":"99"},{"size":2130,"mtime":1628051614240,"results":"101","hashOfConfig":"99"},{"size":2101,"mtime":1627835688763,"results":"102","hashOfConfig":"99"},{"size":2017,"mtime":1628140605414,"results":"103","hashOfConfig":"99"},{"size":771,"mtime":1627835688864,"results":"104","hashOfConfig":"99"},{"size":7051,"mtime":1627835688863,"results":"105","hashOfConfig":"99"},{"size":8073,"mtime":1628061670557,"results":"106","hashOfConfig":"99"},{"size":13779,"mtime":1627835688834,"results":"107","hashOfConfig":"99"},{"size":4900,"mtime":1627835688871,"results":"108","hashOfConfig":"99"},{"size":19199,"mtime":1627835688804,"results":"109","hashOfConfig":"99"},{"size":4857,"mtime":1627835688865,"results":"110","hashOfConfig":"99"},{"size":19079,"mtime":1628140605411,"results":"111","hashOfConfig":"99"},{"size":2166,"mtime":1627835688841,"results":"112","hashOfConfig":"99"},{"size":1268,"mtime":1627835688831,"results":"113","hashOfConfig":"99"},{"size":1918,"mtime":1627835689631,"results":"114","hashOfConfig":"99"},{"size":7341,"mtime":1627835689694,"results":"115","hashOfConfig":"99"},{"size":506,"mtime":1627835689652,"results":"116","hashOfConfig":"99"},{"size":2460,"mtime":1627835689660,"results":"117","hashOfConfig":"99"},{"size":5967,"mtime":1627835688870,"results":"118","hashOfConfig":"99"},{"size":2668,"mtime":1627835688873,"results":"119","hashOfConfig":"99"},{"size":4631,"mtime":1627835688766,"results":"120","hashOfConfig":"99"},{"size":1955,"mtime":1627835688844,"results":"121","hashOfConfig":"99"},{"size":3522,"mtime":1628140605416,"results":"122","hashOfConfig":"99"},{"size":1431,"mtime":1627835689641,"results":"123","hashOfConfig":"99"},{"size":4886,"mtime":1627835689629,"results":"124","hashOfConfig":"99"},{"size":1548,"mtime":1628140605401,"results":"125","hashOfConfig":"99"},{"size":4098,"mtime":1627835688875,"results":"126","hashOfConfig":"99"},{"size":1176,"mtime":1627835689645,"results":"127","hashOfConfig":"99"},{"size":3912,"mtime":1627835688852,"results":"128","hashOfConfig":"99"},{"size":2264,"mtime":1627835689671,"results":"129","hashOfConfig":"99"},{"size":4012,"mtime":1627835688874,"results":"130","hashOfConfig":"99"},{"size":616,"mtime":1627835688873,"results":"131","hashOfConfig":"99"},{"size":2278,"mtime":1627835688792,"results":"132","hashOfConfig":"99"},{"size":6785,"mtime":1627835688846,"results":"133","hashOfConfig":"99"},{"size":3677,"mtime":1627835688852,"results":"134","hashOfConfig":"99"},{"size":6552,"mtime":1627835688856,"results":"135","hashOfConfig":"99"},{"size":6490,"mtime":1628140605415,"results":"136","hashOfConfig":"99"},{"size":429,"mtime":1627835688793,"results":"137","hashOfConfig":"99"},{"size":10496,"mtime":1628140605409,"results":"138","hashOfConfig":"99"},{"size":5198,"mtime":1627835688877,"results":"139","hashOfConfig":"99"},{"size":827,"mtime":1627835689684,"results":"140","hashOfConfig":"99"},{"size":1001,"mtime":1627835688850,"results":"141","hashOfConfig":"99"},{"size":1005,"mtime":1627835688849,"results":"142","hashOfConfig":"99"},{"size":794,"mtime":1627835689687,"results":"143","hashOfConfig":"99"},{"size":484,"mtime":1627835688843,"results":"144","hashOfConfig":"99"},{"size":1215,"mtime":1627835688842,"results":"145","hashOfConfig":"99"},{"size":721,"mtime":1627835688847,"results":"146","hashOfConfig":"99"},{"size":1207,"mtime":1627835688847,"results":"147","hashOfConfig":"99"},{"size":780,"mtime":1627835688861,"results":"148","hashOfConfig":"99"},{"size":1746,"mtime":1628140605410,"results":"149","hashOfConfig":"99"},{"size":707,"mtime":1627835688848,"results":"150","hashOfConfig":"99"},{"size":874,"mtime":1627835688844,"results":"151","hashOfConfig":"99"},{"size":4351,"mtime":1627835689667,"results":"152","hashOfConfig":"99"},{"size":1554,"mtime":1627835689643,"results":"153","hashOfConfig":"99"},{"size":3520,"mtime":1628067405054,"results":"154","hashOfConfig":"99"},{"size":3664,"mtime":1628067286546,"results":"155","hashOfConfig":"99"},{"size":3375,"mtime":1628067383141,"results":"156","hashOfConfig":"99"},{"size":3467,"mtime":1628067373904,"results":"157","hashOfConfig":"99"},{"size":6703,"mtime":1623492116241,"results":"158","hashOfConfig":"99"},{"size":3083,"mtime":1627835688868,"results":"159","hashOfConfig":"99"},{"size":5161,"mtime":1627835688867,"results":"160","hashOfConfig":"99"},{"size":1495,"mtime":1627835688869,"results":"161","hashOfConfig":"99"},{"size":1180,"mtime":1627835688801,"results":"162","hashOfConfig":"99"},{"size":3092,"mtime":1627835688802,"results":"163","hashOfConfig":"99"},{"size":1227,"mtime":1627835688867,"results":"164","hashOfConfig":"99"},{"size":5906,"mtime":1623174190180,"results":"165","hashOfConfig":"99"},{"size":551,"mtime":1623422585585,"results":"166","hashOfConfig":"99"},{"size":565,"mtime":1623420878822,"results":"167","hashOfConfig":"99"},{"size":615,"mtime":1628140605403,"results":"168","hashOfConfig":"99"},{"size":1325,"mtime":1627835688854,"results":"169","hashOfConfig":"99"},{"size":1460,"mtime":1627835689689,"results":"170","hashOfConfig":"99"},{"size":1166,"mtime":1623174192489,"results":"171","hashOfConfig":"99"},{"size":1421,"mtime":1627835689691,"results":"172","hashOfConfig":"99"},{"size":2334,"mtime":1627835688878,"results":"173","hashOfConfig":"99"},{"size":3703,"mtime":1627835688837,"results":"174","hashOfConfig":"99"},{"size":1886,"mtime":1627835688836,"results":"175","hashOfConfig":"99"},{"size":3243,"mtime":1627835688836,"results":"176","hashOfConfig":"99"},{"size":4835,"mtime":1627835688835,"results":"177","hashOfConfig":"99"},{"size":7609,"mtime":1627835688833,"results":"178","hashOfConfig":"99"},{"size":3159,"mtime":1627835688803,"results":"179","hashOfConfig":"99"},{"size":10082,"mtime":1628140605407,"results":"180","hashOfConfig":"99"},{"size":7410,"mtime":1628140605405,"results":"181","hashOfConfig":"99"},{"size":7134,"mtime":1628140605406,"results":"182","hashOfConfig":"99"},{"size":3845,"mtime":1627835688839,"results":"183","hashOfConfig":"99"},{"size":68,"mtime":1627848578999,"results":"184","hashOfConfig":"99"},{"size":664,"mtime":1628148045868,"results":"185","hashOfConfig":"99"},{"size":594,"mtime":1623417349645,"results":"186","hashOfConfig":"99"},{"size":647,"mtime":1627835688881,"results":"187","hashOfConfig":"99"},{"size":2054,"mtime":1628067545068,"results":"188","hashOfConfig":"99"},{"size":697,"mtime":1628050779754,"results":"189","hashOfConfig":"99"},{"size":1624,"mtime":1628067298066,"results":"190","hashOfConfig":"99"},{"size":656,"mtime":1628059325660,"results":"191","hashOfConfig":"99"},{"size":1756,"mtime":1628067273355,"results":"192","hashOfConfig":"99"},{"size":1020,"mtime":1628140605413,"results":"193","hashOfConfig":"99"},{"size":2239,"mtime":1628140605408,"results":"194","hashOfConfig":"99"},{"size":179,"mtime":1628140605414,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"1o4wz0b",{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"203"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"203"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"203"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"203"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"203"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"203"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"203"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"203"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"203"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"198"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"264","usedDeprecatedRules":"203"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"203"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"203"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"203"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"286","usedDeprecatedRules":"198"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"203"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"203"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"203"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"203"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"203"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"203"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"198"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"198"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"198"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"198"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"203"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"203"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"203"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"203"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"203"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"198"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"203"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"203"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"203"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"203"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"203"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"198"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"198"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"198"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\program\\java\\coursebucket\\frontend\\src\\index.js",[],["431","432"],"D:\\program\\java\\coursebucket\\frontend\\src\\reportWebVitals.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\App.tsx",[],["433","434"],"D:\\program\\java\\coursebucket\\frontend\\src\\Theme.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\layout\\Auth.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\MyCourse.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\Dashboard.tsx",["435","436","437","438"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Image, Looks, RateReview } from \"@material-ui/icons\";\r\nimport { FAQBox } from \"components/course/courseView/FAQ\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useState } from \"react\";\r\nimport { FaChalkboardTeacher, FaDollarSign, FaQq } from \"react-icons/fa\";\r\nimport IncomePerCourseChart from \"./teacher/IncomePerCourseChart\";\r\nimport { OverviewBarChart } from \"./teacher/Overview\";\r\nimport { UserRegistrationChart } from \"../AdminPanel/charts/UserRegistrationChart\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { CoursePopularityPieChart } from \"./teacher/PopularityPieChart\";\r\nimport { RatingLineChart } from \"./teacher/RatingLIneChart\";\r\nimport { ReviewBox } from \"components/course/courseView/Review\";\r\n\r\nfunction ContentHeader({ children }) {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <CardActionArea>\r\n          <Grid container direction=\"row\" wrap=\"nowrap\">\r\n            <Grid item>\r\n              <Image />\r\n            </Grid>\r\n            <Grid item container direction=\"column\">\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Course title</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\">Course subtitle</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActionArea>\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface PurchaseHistory {\r\n  image: JSX.Element;\r\n  courseName: string;\r\n  studentImage: JSX.Element;\r\n  studentName: string;\r\n  time: Date;\r\n  amount: number;\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Course Image\", field: \"image\" },\r\n    { title: \"Course Name\", field: \"courseName\" },\r\n    { title: \"Student Image\", field: \"studentImage\" },\r\n    { title: \"Student Name\", field: \"studentName\" },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n    // { title: \"Course Image\", field: \"image\", editable: \"never\" },\r\n    // { title: \"Course Name\", field: \"courseName\", editable: \"never\" },\r\n    // { title: \"Student Image\", field: \"studentImage\", editable: \"never\" },\r\n    // { title: \"Student Name\", field: \"studentName\", editable: \"never\" },\r\n    // { title: \"Purchase time\", field: \"time\", editable: \"never\" },\r\n    // { title: \"Purchase Amount\", field: \"amount\", editable: \"never\" },\r\n  ]);\r\n  const [data, setData] = useState([\r\n    {\r\n      image: <Image />,\r\n      courseName: \"Course Name Course Name Course Name Course Name Course Name\",\r\n      studentImage: <Image />,\r\n      studentName: \"StudentName\",\r\n      time: new Date().toDateString(),\r\n      amount: 3000,\r\n    },\r\n  ]);\r\n  const objects: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Overview\",\r\n      urlShort: \"overview\",\r\n      icon: <Looks />,\r\n      content: (\r\n        <Grid container xs spacing={2}>\r\n          <Grid item xs={12}>\r\n            <OverviewBarChart />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RatingLineChart />\r\n          </Grid>\r\n          <Grid item md={6} xs={12}>\r\n            <CoursePopularityPieChart />\r\n          </Grid>\r\n          <Grid item md={6} xs={12}>\r\n            <IncomePerCourseChart />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Purchase History\",\r\n      urlShort: \"purchase-history\",\r\n      icon: <FaDollarSign />,\r\n      content: (\r\n        <MaterialTable\r\n          // @ts-ignore\r\n          columns={columns}\r\n          title=\"Purchase History\"\r\n          data={data}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Reviews\",\r\n      urlShort: \"review\",\r\n      icon: <RateReview />,\r\n      content: (\r\n        <CustomPagination objectsPerPage={3}>\r\n          {[1, 2, 3, 4, 5].map((item) => (\r\n            <Grid item>\r\n              <ContentHeader>\r\n                <CustomPagination type=\"two-item-per-line\" objectsPerPage={2}>\r\n                  {[1, 2, 3, 4, 5].map((item) => (\r\n                    <ReviewBox />\r\n                  ))}\r\n                </CustomPagination>\r\n              </ContentHeader>\r\n            </Grid>\r\n          ))}\r\n        </CustomPagination>\r\n      ),\r\n    },\r\n    {\r\n      label: \"FAQ\",\r\n      urlShort: \"faq\",\r\n      icon: <FaQq />,\r\n      content: (\r\n        <CustomPagination objectsPerPage={3}>\r\n          {[1, 2, 3, 4, 5].map((item) => (\r\n            <Grid item>\r\n              <ContentHeader>\r\n                <CustomPagination type=\"one-item-per-line\" objectsPerPage={2}>\r\n                  {[1, 2, 3, 4, 5].map((item) => (\r\n                    <FAQBox />\r\n                  ))}\r\n                </CustomPagination>\r\n              </ContentHeader>\r\n            </Grid>\r\n          ))}\r\n        </CustomPagination>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Student List\",\r\n      urlShort: \"enrolled-student\",\r\n      icon: <FaChalkboardTeacher />,\r\n      content: (\r\n        <CustomPagination objectsPerPage={3}>\r\n          {[1, 2, 3, 4, 5].map((item) => (\r\n            <ContentHeader>\r\n              <CustomPagination type=\"calculate-by-width\">\r\n                {[1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 1, 1].map(\r\n                  (item) => (\r\n                    <Card>\r\n                      <CardActionArea>\r\n                        <CardMedia>\r\n                          <Image />\r\n                        </CardMedia>\r\n                        <CardContent>\r\n                          <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                              <Typography variant=\"h6\">Student Name</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <Typography variant=\"body2\">\r\n                                Enrolled Date\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  )\r\n                )}\r\n              </CustomPagination>\r\n            </ContentHeader>\r\n          ))}\r\n        </CustomPagination>\r\n      ),\r\n    },\r\n  ];\r\n  const route = useRouteMatch();\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route exact path={`${route.path}/${item.urlShort}`}>\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx",["439","440","441","442","443","444"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Category, Image, Language, Looks } from \"@material-ui/icons\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useState } from \"react\";\r\nimport { ImEarth } from \"react-icons/im\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { UserRegistrationChart } from \"components/AdminPanel/charts/UserRegistrationChart\";\r\nimport MultiSelectTreeView from \"./CategoryComponent\";\r\nimport CountryComponent from \"./CountryComponent\";\r\nimport DesignationComponent from \"./DesignationComponent\";\r\nimport EduStatusComponent from \"./EduStatusComponent\";\r\nimport LanguageComponent from \"./LanguageComponent\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\nimport CourseApprovalComponent from \"./CourseApprovalComponent\";\r\nimport TeacherInfoComponent from './TeacherInfoComponent';\r\nimport StudentInfoComponent from './StudentInfoComponent';\r\n\r\nfunction ContentHeader({ children }) {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <CardActionArea>\r\n          <Grid container direction=\"row\" wrap=\"nowrap\">\r\n            <Grid item>\r\n              <Image />\r\n            </Grid>\r\n            <Grid item container direction=\"column\">\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Course title</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\">Course subtitle</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActionArea>\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface PurchaseHistory {\r\n  image: JSX.Element;\r\n  courseName: string;\r\n  studentImage: JSX.Element;\r\n  studentName: string;\r\n  time: Date;\r\n  amount: number;\r\n}\r\n\r\nfunction AdminDashboard() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Course Image\", field: \"image\" },\r\n    { title: \"Course Name\", field: \"courseName\" },\r\n    { title: \"Student Image\", field: \"studentImage\" },\r\n    { title: \"Student Name\", field: \"studentName\" },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n    // { title: \"Course Image\", field: \"image\", editable: \"never\" },\r\n    // { title: \"Course Name\", field: \"courseName\", editable: \"never\" },\r\n    // { title: \"Student Image\", field: \"studentImage\", editable: \"never\" },\r\n    // { title: \"Student Name\", field: \"studentName\", editable: \"never\" },\r\n    // { title: \"Purchase time\", field: \"time\", editable: \"never\" },\r\n    // { title: \"Purchase Amount\", field: \"amount\", editable: \"never\" },\r\n  ]);\r\n  const [data, setData] = useState([\r\n    {\r\n      image: <Image />,\r\n      courseName: \"Course Name Course Name Course Name Course Name Course Name\",\r\n      studentImage: <Image />,\r\n      studentName: \"StudentName\",\r\n      time: new Date().toDateString(),\r\n      amount: 3000,\r\n    },\r\n  ]);\r\n  const objects: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Overview\",\r\n      urlShort: \"overview\",\r\n      icon: <Looks />,\r\n      content: (\r\n        <Grid container xs spacing={2}>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Visitors\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  170\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  New Course\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  17\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total Course\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  170\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  New User\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  2\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total User\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  240\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Today Income\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  $345\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                  Total Income\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"h4\">\r\n                  $2404\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCourseAdminChart />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCategoryChart />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <UserRegistrationChart />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Student Info\",\r\n      urlShort: \"student-info\",\r\n      icon: <Language />,\r\n      content: <StudentInfoComponent />,\r\n    },\r\n    {\r\n      label: \"Teacher Info\",\r\n      urlShort: \"teacher-info\",\r\n      icon: <Language />,\r\n      content: <TeacherInfoComponent />,\r\n    },\r\n    {\r\n      label: \"Course Approval\",\r\n      urlShort: \"course-approval\",\r\n      icon: <Language />,\r\n      content: <CourseApprovalComponent />,\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      urlShort: \"category\",\r\n      icon: <Category />,\r\n      content: <MultiSelectTreeView />,\r\n    },\r\n    {\r\n      label: \"Country\",\r\n      urlShort: \"country\",\r\n      icon: <ImEarth />,\r\n      content: <CountryComponent />,\r\n    },\r\n    {\r\n      label: \"Language\",\r\n      urlShort: \"language\",\r\n      icon: <Language />,\r\n      content: <LanguageComponent />,\r\n    },\r\n    {\r\n      label: \"Designation\",\r\n      urlShort: \"designation\",\r\n      icon: <Language />,\r\n      content: <DesignationComponent />,\r\n    },\r\n    {\r\n      label: \"Educational Status\",\r\n      urlShort: \"educational-status\",\r\n      icon: <Language />,\r\n      content: <EduStatusComponent />,\r\n    },\r\n  ];\r\n\r\n  const route = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route exact path={`${route.path}/${item.urlShort}`}>\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx",["445"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DoneAll, Image, LabelImportant } from \"@material-ui/icons\";\r\nimport { Course, Property, Week } from \"classes/Course\";\r\nimport {\r\n  CheckoutDialog,\r\n  CongratulationDialog,\r\n} from \"components/course/courseView/Checkout\";\r\nimport { FAQBox, FAQSection } from \"components/course/courseView/FAQ\";\r\nimport InstructorShortDetailsBox from \"components/course/courseView/InstructorShortDetails\";\r\nimport RatingSection from \"components/course/courseView/Rating\";\r\nimport { ReviewSection } from \"components/course/courseView/Review\";\r\nimport { Curriculum } from \"components/course/createCourse/Curriculum/Curriculum\";\r\nimport User from \"layout/User\";\r\nimport React, { useState } from \"react\";\r\nimport { IconPickerItem } from \"react-fa-icon-picker\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\n\r\nexport const lorem =\r\n  \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aliquid magni adipisci, a quibusdam deserunt cupiditate. Reprehenderit, molestiae quas minima corporis non nulla perspiciatis esse nostrum in harum eveniet. Repellendus, animi!\";\r\nlet course = new Course();\r\ncourse = {\r\n  ...course,\r\n  title:\r\n    'Course title Lorem ipsum dolor sit amet consectetur adipisicing \"Lorem ipsum dolor sit amet consectetur adipisicing ',\r\n  subTitle: \"Sub\",\r\n  description:\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet perspiciatis earum quidem. Numquam, quasi obcaecati similique, architecto dolore laboriosam consectetur sed aliquam nemo, inventore illo! Temporibus vitae harum quaerat earum.\",\r\n  mainPrice: 1200,\r\n  off: 30,\r\n  outcomes: [\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n  ],\r\n  prerequisite: [\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n  ],\r\n  properties: [\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n  ],\r\n  weeks: [new Week(), new Week(), new Week()],\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  MuiListItemRoot: {\r\n    alignItems: \"flex-start\",\r\n  },\r\n  MuiListItemGutters: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  MuiListItemAvatarRoot: {\r\n    minWidth: 30,\r\n  },\r\n  MuiSvgIconRoot: {\r\n    fontSize: \"1.2rem\",\r\n    marginTop: 3,\r\n  },\r\n}));\r\n\r\nexport function CourseView() {\r\n  const classes = useStyles();\r\n  const [checkout, setCheckout] = useState(false);\r\n  const [purchased, setPurchased] = useState(false);\r\n\r\n  function Price() {\r\n    return (\r\n      <>\r\n        <Grid item>\r\n          <Typography variant=\"h5\">\r\n            ৳\r\n            {\r\n              (course.mainPrice -\r\n                (course.mainPrice * course.off) / 100) as Number\r\n            }\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ textDecoration: \"line-through\" }}\r\n          >\r\n            ৳{course.mainPrice}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body1\">{course.off}% off</Typography>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function TitleSection() {\r\n    return (\r\n      <>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">{course.title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">{course.subTitle}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"row\">\r\n          <Grid item>{/* <Rating></Rating> */}</Grid>\r\n          <Grid item>118001 ratings 1090034 students</Grid>\r\n        </Grid>\r\n        <Grid item>Created by {course.teacherName}</Grid>\r\n        <Grid item container direction=\"row\">\r\n          <Grid item>Last updated {course.lastUpdate}</Grid>\r\n          <Grid item>languages</Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function CourseProperties() {\r\n    return (\r\n      <Grid item container direction=\"column\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\">This course includes:</Typography>\r\n        </Grid>\r\n        <List dense={true}>\r\n          {course.properties.map((item) => (\r\n            <ListItem\r\n              classes={{\r\n                root: classes.MuiListItemRoot,\r\n                gutters: classes.MuiListItemGutters,\r\n              }}\r\n            >\r\n              <ListItemAvatar classes={{ root: classes.MuiListItemAvatarRoot }}>\r\n                <IconPickerItem\r\n                  classes={{ root: classes.MuiSvgIconRoot }}\r\n                  //@ts-ignore\r\n                  icon={item.icon.content}\r\n                  containerStyles={{ fontSize: \"15px\" }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText>{item.text}</ListItemText>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function PCHeader() {\r\n    return (\r\n      <Card\r\n        style={{\r\n          backgroundColor: \"cyan\",\r\n          position: \"relative\",\r\n          overflow: \"inherit\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Grid container direction=\"row\">\r\n            <Grid item md={8} xs={12} direction=\"column\">\r\n              <TitleSection />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xs={12}\r\n              style={{\r\n                width: \"100%\",\r\n                position: \"absolute\",\r\n                right: 16,\r\n              }}\r\n            >\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Card style={{ ...style, zIndex: 999, marginLeft: 16 }}>\r\n                    <CardContent>\r\n                      <Image />\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        spacing={1}\r\n                      >\r\n                        <Price />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <div onClick={() => setCheckout(true)}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            Buy now\r\n                          </Button>\r\n                        </div>\r\n                        <CheckoutDialog\r\n                          open={checkout}\r\n                          onClose={() => setCheckout(false)}\r\n                          onPurchase={() => setPurchased(true)}\r\n                        />\r\n                        <CongratulationDialog\r\n                          open={purchased}\r\n                          onClose={() => {\r\n                            setPurchased(false);\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <CourseProperties />\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function MobileHeader() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" xs spacing={1}>\r\n            <Grid item>\r\n              <Image />\r\n            </Grid>\r\n            <TitleSection />\r\n            <CourseProperties />\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              style={{\r\n                zIndex: 999,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                left: 0,\r\n                backgroundColor: \"pink\",\r\n              }}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Price />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div onClick={() => setCheckout(true)}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    Buy now\r\n                  </Button>\r\n                </div>\r\n                <CheckoutDialog\r\n                  open={checkout}\r\n                  onClose={() => setCheckout(false)}\r\n                  onPurchase={() => setPurchased(true)}\r\n                />\r\n                <CongratulationDialog\r\n                  open={purchased}\r\n                  onClose={() => {\r\n                    setPurchased(false);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function Info() {\r\n    return (\r\n      <>\r\n        <Grid item>\r\n          <Card>\r\n            <CardContent>\r\n              <Grid container direction=\"column\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\">What you'll learn</Typography>\r\n                </Grid>\r\n                <List dense={false}>\r\n                  {course.outcomes.map((item) => (\r\n                    <ListItem\r\n                      classes={{\r\n                        root: classes.MuiListItemRoot,\r\n                        gutters: classes.MuiListItemGutters,\r\n                      }}\r\n                    >\r\n                      <ListItemAvatar\r\n                        classes={{ root: classes.MuiListItemAvatarRoot }}\r\n                      >\r\n                        <DoneAll classes={{ root: classes.MuiSvgIconRoot }} />\r\n                      </ListItemAvatar>\r\n                      <ListItemText>{item}</ListItemText>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Requirements</Typography>\r\n              <List dense={false}>\r\n                {course.prerequisite.map((item) => (\r\n                  <ListItem\r\n                    classes={{\r\n                      root: classes.MuiListItemRoot,\r\n                      gutters: classes.MuiListItemGutters,\r\n                    }}\r\n                  >\r\n                    <ListItemAvatar\r\n                      classes={{ root: classes.MuiListItemAvatarRoot }}\r\n                    >\r\n                      <LabelImportant\r\n                        classes={{ root: classes.MuiSvgIconRoot }}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>{item}</ListItemText>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Description</Typography>\r\n              <Typography>{course.description}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function Content() {\r\n    return (\r\n      <Card style={{ width: \"100%\" }}>\r\n        <CardContent>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Course content</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Curriculum course={course} onCourseAttrChange={(course) => {}} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function InstructorDetails() {\r\n    return <InstructorShortDetailsBox />;\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Grid container direction=\"column\" xs spacing={2}>\r\n          <Grid item>\r\n            <Responsive displayIn=\"Laptop\">\r\n              <PCHeader />\r\n            </Responsive>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            // style={{ padding: 10 }}\r\n            spacing={2}\r\n            xs\r\n            md={8}\r\n          >\r\n            <Grid item>\r\n              <Responsive displayIn=\"Tablet\">\r\n                <MobileHeader />\r\n              </Responsive>\r\n              <Responsive displayIn=\"Mobile\">\r\n                <MobileHeader />\r\n              </Responsive>\r\n            </Grid>\r\n            <Info />\r\n            <Grid item container>\r\n              <Content />\r\n            </Grid>\r\n            <Grid item>\r\n              <InstructorDetails />\r\n            </Grid>\r\n            <Grid item container>\r\n              <RatingSection />\r\n            </Grid>\r\n            <Grid item>\r\n              <ReviewSection />\r\n            </Grid>\r\n            <Grid item>\r\n              <FAQSection />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\SearchPage.tsx",["446"],"import { Grid } from \"@material-ui/core\";\r\nimport { categoryList, CategoryTreeNode } from \"classes/Category\";\r\nimport Filter from \"components/search/Filter\";\r\nimport { FilterChips } from \"components/search/filter/Chips\";\r\nimport Sort from \"components/search/Sort\";\r\nimport User from \"layout/User\";\r\nimport React, { useState } from \"react\";\r\nimport { StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\n\r\nexport interface IFilter {\r\n  type: \"LIST\" | \"CATEGORY\" | \"SLIDER\";\r\n  title: string;\r\n}\r\nexport interface IListFilter extends IFilter {\r\n  items: Array<{ title: string; id: number }>;\r\n}\r\nexport interface ICategoryFilter extends IFilter {\r\n  items: Array<CategoryTreeNode>;\r\n}\r\nexport interface ISliderFilter extends IFilter {\r\n  min: number;\r\n  max: number;\r\n  value: Array<number>;\r\n  step: number;\r\n  valueType: string;\r\n}\r\nexport type IFilterType = IListFilter | ISliderFilter | ICategoryFilter;\r\nexport interface IFilteredValue {\r\n  type: \"LIST\" | \"SLIDER\" | \"CATEGORY\";\r\n  title: string;\r\n  value: string | Array<number>;\r\n  id?: number;\r\n  valueType?: string;\r\n}\r\nvar id = 1;\r\nexport const filterObjectList: Array<IFilterType> = [\r\n  {\r\n    title: \"Teacher\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Abrar Fahad\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Mahdi BUET 3\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Md. Mehedi Hasan\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Kazi Wasif Amin Shammya\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    type: \"CATEGORY\",\r\n    items: categoryList,\r\n  },\r\n  {\r\n    title: \"Language\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Arabic\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"English\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Bangla\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Hindi\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Persian\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Rating\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 5,\r\n    value: [0, 5],\r\n    step: 0.01,\r\n    valueType: \"⭐\",\r\n  },\r\n  {\r\n    title: \"Price\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 10000,\r\n    value: [0, 10000],\r\n    step: 10,\r\n    valueType: \"$\",\r\n  },\r\n];\r\n\r\nconst Search = () => {\r\n  // const [filterData, setFilterData] = useState(\r\n  //   JSON.parse(JSON.stringify(filterObjectList))\r\n  // );\r\n  const [filteredData, setFilteredData] = useState<Array<IFilteredValue>>([]);\r\n  function onObjectsChange(value: IFilteredValue, type: \"ADD\" | \"REMOVE\") {\r\n    let array;\r\n    if (type === \"ADD\") {\r\n      let idx = filteredData.findIndex((item) => item.title === value.title);\r\n      if (value.type === \"SLIDER\" && idx != -1) {\r\n        array = [...filteredData];\r\n        array[idx] = value;\r\n      } else {\r\n        array = [...filteredData, value];\r\n      }\r\n    } else if (type === \"REMOVE\") {\r\n      let idx;\r\n      if (value.type === \"SLIDER\") {\r\n        idx = filteredData.findIndex(\r\n          (item) => item.type === value.type && item.id === value.id\r\n        );\r\n      } else {\r\n        idx = filteredData.findIndex((item) => item.type === value.type);\r\n      }\r\n      array = [...filteredData];\r\n      array.splice(idx, 1);\r\n    }\r\n    setFilteredData(array);\r\n  }\r\n  function clearAll() {\r\n    setFilteredData([]);\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Grid container>\r\n          <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n            <Grid item sm={3}>\r\n              <Grid container direction=\"column\">\r\n                <Sort />\r\n                <FilterChips\r\n                  filteredData={filteredData}\r\n                  onDelete={onObjectsChange}\r\n                />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Responsive>\r\n          <Responsive displayIn={[\"Mobile\"]}>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Sort />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n              <FilterChips\r\n                filteredData={filteredData}\r\n                onDelete={onObjectsChange}\r\n              />\r\n            </Grid>\r\n          </Responsive>\r\n          <Grid item sm={9} xs={12}>\r\n            {/* <CoursePagination courses={courses} title=\"Search Page\" /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\Home.tsx",["447","448"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"components/ImageCarousel\";\r\nimport User from \"layout/User\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CourseCarousel } from \"./course/CourseCarousel\";\r\n\r\nconst courses = [\r\n  {\r\n    title: \"Free courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homeContainer: {\r\n    padding: theme.spacing(0, 4),\r\n  },\r\n}));\r\n\r\nexport const Home = (props) => {\r\n  let match = useRouteMatch();\r\n  const history = useHistory();\r\n  console.log(props.location.state);\r\n  const classes = useStyles();\r\n  return (\r\n    <User>\r\n      <Grid container className={classes.homeContainer} direction=\"column\">\r\n        <Grid item>\r\n          <ImageSlider />\r\n        </Grid>\r\n        <Grid item>\r\n          {courses.map((courses) => (\r\n            <CourseCarousel title={courses.title} courses={courses.courses} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\Profile.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\ProfileDetails.tsx",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CourseCarousel.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\tools\\responsive\\Responsive.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CourseBox.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\layout\\User.tsx",["486"],"// components\r\nimport Footer from \"components/footer/Footer\";\r\nimport { Header } from \"components/header/Header\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function User({ children }) {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Header />\r\n          <div style={{ margin: \"0 auto\", maxWidth: \"1400px\" }}>{children}</div>\r\n          <Footer />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\Sort.tsx",["487","488","489"],"import { Button, Dialog, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, makeStyles, Radio, RadioGroup, Typography } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport React, { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\nconst sortTypes = [\r\n  \"New released\",\r\n  \"Best seller\",\r\n  \"Most reviewed\",\r\n  \"Most rated\",\r\n  \"Price low to high\",\r\n  \"Price high to low\"\r\n]\r\n\r\n\r\nconst CustomSelect = ({ data, title, open, selected, onClose, onChange }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(selected);\r\n\r\n  function handleChange(event) {\r\n    onChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={onClose}\r\n      open={open}\r\n      style={{ padding: 10 }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup >\r\n            {\r\n              data.map(item => (\r\n                <FormControlLabel\r\n                  checked={item === selected}\r\n                  value={item}\r\n                  control={<Radio />}\r\n                  label={item}\r\n                  onClick={handleChange}\r\n                />\r\n              ))\r\n            }\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <Button color=\"primary\" onClick={onClose}>\r\n        Cancel\r\n      </Button>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction Sort() {\r\n  const [open, setOpen] = useState(false);\r\n  const [sortType, setSortType] = useState(sortTypes[0]);\r\n  const handleChange = (value) => {\r\n    setSortType(value);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid sm={12} xs={6} container>\r\n      <Grid container\r\n        justify=\"space-between\"\r\n        onClick={handleOpen}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          Sort by\r\n        </Typography>\r\n        <SortIcon />\r\n      </Grid>\r\n      <CustomSelect\r\n        title={\"Set sort type\"}\r\n        selected={sortType}\r\n        open={open}\r\n        data={sortTypes}\r\n        onClose={handleClose}\r\n        onChange={handleChange}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Sort","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\Filter.tsx",["490","491"],"import {\r\n  AppBar,\r\n  Button,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Cancel } from \"@material-ui/icons\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport React from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport { GenerateFilterValue, MakeList } from \"./filter/MakeList\";\r\nimport { IFilterType, IFilteredValue } from \"./SearchPage\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  dialog: {\r\n    paper: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  drawer: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction Filter({\r\n  filteredData,\r\n  filterDataList,\r\n  onFilterChange,\r\n  onClearAll,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filterDataList: Array<IFilterType>;\r\n  onFilterChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n  onClearAll: () => void;\r\n}) {\r\n  const classes = useStyle();\r\n  const [openDrawer, setOpenDrawer] = React.useState(true);\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  function handleTabChange(event, newValue) {\r\n    setTabValue(newValue);\r\n  }\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div role=\"tabpanel\" hidden={value !== index} {...other}>\r\n        {value === index && (\r\n          <Grid container style={{ padding: 10 }}>\r\n            {children}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  // const handleFilterChange = (data) => {\r\n  //   var array = filterData;\r\n  //   var index = array.findIndex(item => item.title === data.title);\r\n  //   array[index] = data;\r\n  //   onFilterDataChange(array);\r\n  // }\r\n  // const handleFilterSliderChange = (data) => {\r\n  //   var array = rangeFilteredArray\r\n  //   var idx = array.findIndex(item => item.filterType === data.filterType)\r\n  //   array[idx].minValue = data.min\r\n  //   array[idx].maxValue = data.max\r\n  //   return array;\r\n  // }\r\n  // const handleSliderCommit = (data) => {\r\n  //   var array = handleFilterSliderChange(data);\r\n  //   onRangeFilteredArrayChange(array)\r\n  // }\r\n  // const handleFilterValueChange = (data) => {\r\n  //   var array = filteredArray;\r\n  //   if (data.type === \"add\") {\r\n  //     array.push({ filterType: data.filterType, value: data.value })\r\n  //   }\r\n  //   else if (data.type === \"remove\") {\r\n  //     array = array.filter(item => (item.filterType !== data.filterType || item.value !== data.value))\r\n  //   }\r\n  //   onFilteredArrayChange(array)\r\n  // }\r\n  // function getCurrentState(data) {\r\n  //   var array = filteredArray;\r\n  //   return array.findIndex(obj => obj.filterType === data.filterType && obj.value === data.value) !== -1\r\n  // }\r\n  // function getCurrentSliderState(filterType) {\r\n  //   var idx = rangeFilteredArray.findIndex(item => item.filterType === filterType)\r\n  //   return [rangeFilteredArray[idx].minValue, rangeFilteredArray[idx].maxValue]\r\n  // }\r\n  // function clearFilteredArray() {\r\n  //   onFilteredArrayChange([])\r\n  //   var array = rangeFilteredArray\r\n  //   array.map(filter => {\r\n  //     filter.minValue = filter.min\r\n  //     filter.maxValue = filter.max\r\n  //   })\r\n  //   onRangeFilteredArrayChange(array)\r\n  // }\r\n\r\n  function handleFilterChange(index, newFilter) {\r\n    // let newObject = [...objects];\r\n    // newObject[index] = newFilter;\r\n    // onFilterChange(newObject);\r\n  }\r\n\r\n  function MobileFilter() {\r\n    return (\r\n      <Drawer\r\n        anchor={\"right\"}\r\n        open={openDrawer}\r\n        onClose={(event) => setOpenDrawer(false)}\r\n        classes={{ paper: classes.drawer }}\r\n      >\r\n        <Sticky>\r\n          {({ style }) => (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <IconButton onClick={(event) => setOpenDrawer(false)}>\r\n                  <Cancel />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">Filter list</Typography>\r\n                <Button variant=\"contained\" onClick={onClearAll}>\r\n                  Clear All\r\n                </Button>\r\n              </Grid>\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabValue}\r\n                  onChange={handleTabChange}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {filterDataList.map((filter) => (\r\n                    <Tab label={filter.title} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            </>\r\n          )}\r\n        </Sticky>\r\n\r\n        {filterDataList.map((filter, index) => (\r\n          <TabPanel value={tabValue} index={index}>\r\n            <GenerateFilterValue\r\n              filteredData={filteredData}\r\n              filter={filter}\r\n              onFilterValueChange={onFilterChange}\r\n            />\r\n          </TabPanel>\r\n        ))}\r\n      </Drawer>\r\n    );\r\n  }\r\n  function DesktopFilter() {\r\n    return (\r\n      <List component=\"nav\">\r\n        {filterDataList.map((filter, index) => (\r\n          <MakeList\r\n            filteredData={filteredData}\r\n            filter={filter}\r\n            onFilterValueChange={onFilterChange}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        sm={12}\r\n        xs={6}\r\n        container\r\n        justify=\"space-between\"\r\n        onClick={(event) => setOpenDrawer(true)}\r\n      >\r\n        <Typography variant=\"h6\">Filter by</Typography>\r\n        <FilterListIcon />\r\n      </Grid>\r\n\r\n      <Responsive displayIn={[\"Mobile\"]}>\r\n        <MobileFilter />\r\n      </Responsive>\r\n      <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n        <DesktopFilter />\r\n      </Responsive>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\Chips.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Category.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx",["492"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Course, Week } from \"classes/Course\";\r\nimport React, { useState } from \"react\";\r\nimport { WeekView } from \"./WeekView\";\r\n\r\nexport function Curriculum({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: ({ week: Week }) => void;\r\n}) {\r\n  const [weeks, setWeeks] = useState(\r\n    course.weeks == undefined ? [new Week()] : course.weeks\r\n  );\r\n\r\n  function onWeekChange(index, week) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks[index] = week;\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ week: updWeeks });\r\n  }\r\n  function handleOnWeekAdd() {\r\n    let updWeeks = [...weeks, new Week()];\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ week: updWeeks });\r\n  }\r\n\r\n  function handleOnWeekRemove(index) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks.splice(index, 1);\r\n    onCourseAttrChange({ week: updWeeks });\r\n    setWeeks([...updWeeks]);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      {/*      <ReactSortable\r\n        list={weeks}\r\n        setList={setWeeks}\r\n      > */}\r\n      {weeks.map((item, index) => (\r\n        // <div key={item.id}>\r\n        <Grid item container>\r\n          <WeekView\r\n            week={item}\r\n            onWeekChange={(week) => onWeekChange(index, week)}\r\n            onWeekRemove={() => handleOnWeekRemove(index)}\r\n            // setWeek={(week) => onWeekChange(index, week)}\r\n            // onWeekAdd={() => handleOnWeekAdd(index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      <Grid item container justify=\"center\" style={{ marginTop: 10 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddCircle />}\r\n          onClick={handleOnWeekAdd}\r\n        >\r\n          ADD WEEK\r\n        </Button>\r\n      </Grid>\r\n      {/* </div> */}\r\n      {/* </ReactSortable> */}\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\LanguageField.js",["493","494","495","496","497"],"D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\ImageUploader.js",["498","499","500"],"import { Button, Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nexport function CustomImageUploader({\r\n  pic = \"\",\r\n  onPictureChange = (picture) => (console.log(picture))\r\n}) {\r\n  const [picture, setPicture] = useState(pic);\r\n  function handlePictureChange(picture) {\r\n    setPicture(picture);\r\n    onPictureChange(picture);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\">\r\n      <Card style={{ width: \"50%\" }} >\r\n        <img style={{ width: \"100%\" }} src=\"https://global-uploads.webflow.com/5ef5480befd392489dacf544/5f9f5e5943de7e69a1339242_5f44a7398c0cdf460857e744_img-image.jpeg\" />\r\n        {/* <CardMedia style={{ height: 300 }} image={\"https://global-uploads.webflow.com/5ef5480befd392489dacf544/5f9f5e5943de7e69a1339242_5f44a7398c0cdf460857e744_img-image.jpeg\"} /> */}\r\n      </Card>\r\n      <ImageUploader\r\n        withIcon={false}\r\n        buttonText={picture.length == 0 ? 'Choose image' : \"Change image\"}\r\n        withPreview={true}\r\n        singleImage\r\n        onChange={handlePictureChange}\r\n        imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n        maxFileSize={5242880}\r\n        withLabel={false}\r\n      />\r\n      {\r\n        picture.length != 0 ?\r\n          <Button style={{ maxWidth: 350 }}>Upload</Button>\r\n          : null\r\n      }\r\n    </Grid>\r\n  )\r\n}","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\responsive\\utilResponsive.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Person.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx",["501","502","503"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { TrainRounded } from \"@material-ui/icons\";\r\nimport { Category, categoryList } from \"classes/Category\";\r\nimport React, { useState } from \"react\";\r\nimport { CategorySelector } from \"tools/customDesign/CategorySelector\";\r\nimport { timeout } from \"tools/Tools\";\r\nimport {\r\n  IFilteredValue,\r\n  IFilterType as IFilterType,\r\n  IListFilter,\r\n  ISliderFilter,\r\n} from \"../SearchPage\";\r\nimport { FilterCheckBox } from \"./FilterCheckbox\";\r\nimport { FilterSlider } from \"./FilterSlider\";\r\n\r\nexport function MakeList({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  const [open, setOpen] = useState(true);\r\n  return (\r\n    <>\r\n      <ListItem key={filter.title} button onClick={() => setOpen(!open)}>\r\n        <ListItemText primary={filter.title} />\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <GenerateFilterValue\r\n          filteredData={filteredData}\r\n          filter={filter}\r\n          onFilterValueChange={onFilterValueChange}\r\n        />\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function GenerateFilterValue({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  if (filter.type === \"CATEGORY\") {\r\n    return (\r\n      <CategorySelector\r\n        categories={categoryList}\r\n        selectedCategories={filteredData.map(\r\n          (filterValue) =>\r\n            new Category(filterValue.id as number, filterValue.value as string)\r\n        )}\r\n        onCategorySelectionChange={(category, type) => {\r\n          onFilterValueChange(\r\n            {\r\n              type: filter.type,\r\n              title: filter.title,\r\n              value: category.name,\r\n              id: category.id,\r\n            },\r\n            type\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  } else if (filter.type === \"LIST\") {\r\n    return (\r\n      <List>\r\n        {(filter as IListFilter).items.map((item, index) => (\r\n          <ListItem\r\n            key={item.title}\r\n            // @ts-ignore\r\n            value={item}\r\n          >\r\n            <FilterCheckBox\r\n              checked={filteredData.some(\r\n                (data) => data.title === filter.title && data.id === item.id\r\n              )}\r\n              label={item.title}\r\n              onChange={(state) =>\r\n                onFilterValueChange(\r\n                  {\r\n                    type: filter.type,\r\n                    title: filter.title,\r\n                    value: item.title,\r\n                    id: item.id,\r\n                  },\r\n                  state ? \"ADD\" : \"REMOVE\"\r\n                )\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  } else if (filter.type === \"SLIDER\") {\r\n    return (\r\n      <Grid\r\n        style={{ height: \"100%\" }}\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <FilterSlider\r\n          //@ts-ignore\r\n          sliderData={{\r\n            ...filter,\r\n            // @ts-ignore\r\n            value: filteredData.some((item) => item.title === filter.title)\r\n              ? filteredData.find((item) => item.title === filter.title)?.value\r\n              : [(filter as ISliderFilter).min, (filter as ISliderFilter).max],\r\n          }}\r\n          onChange={(value, isClear) =>\r\n            onFilterValueChange(\r\n              {\r\n                type: filter.type,\r\n                title: filter.title,\r\n                value: value,\r\n                valueType: (filter as ISliderFilter).valueType,\r\n              },\r\n              isClear ? \"REMOVE\" : \"ADD\"\r\n            )\r\n          }\r\n          // handleSliderCommitFunc={handleSliderCommit}\r\n          // changeFilteredArrayFunc={handleFilterSliderChange}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx",["504"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Lecture, Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LectureView } from \"./LectureView\";\r\n\r\nconst defaultLecture = {\r\n  id: 0,\r\n  name: \"Lecture name is here...\",\r\n  type: \"\",\r\n  file: {\r\n    title: \"Title\",\r\n    body: \"\",\r\n  },\r\n};\r\n\r\nexport function WeekView({\r\n  week,\r\n  onWeekChange,\r\n  onWeekRemove,\r\n}: {\r\n  week: Week;\r\n  onWeekChange: (Week) => void;\r\n  onWeekRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(week.title);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(week.title);\r\n  }, [week.title]);\r\n\r\n  function handleOnLectureChange(index, lecture) {\r\n    week.lectures.splice(index, 1, lecture);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n  }\r\n  function handleOnLectureAdd() {\r\n    onWeekChange({ ...week, lectures: [...week.lectures, new Lecture()] });\r\n  }\r\n  function handleOnLectureRemove(index) {\r\n    week.lectures.splice(index, 1);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n  }\r\n\r\n  return (\r\n    <Accordion expanded={expanded} style={{ width: \"100%\" }}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMore onClick={(event) => setExpanded(!expanded)} />}\r\n      >\r\n        {/* <IconButton>\r\n          <ImportExport />\r\n        </IconButton> */}\r\n        {!editMode && (\r\n          <>\r\n            <IconButton onClick={(event) => setEditMode(true)}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton onClick={onWeekRemove}>\r\n              <DeleteForever />\r\n            </IconButton>\r\n            <Typography>Week {10} :</Typography>\r\n            <Typography> {fieldValue}</Typography>\r\n          </>\r\n        )}\r\n        {editMode && (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              defaultValue={fieldValue}\r\n              onBlur={(event) => setFieldValue(event.target.value)}\r\n            />\r\n            <IconButton\r\n              onClick={(event) => {\r\n                onWeekChange({ ...week, title: fieldValue });\r\n                setEditMode(false);\r\n              }}\r\n            >\r\n              <CheckCircle />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={(event) => {\r\n                setEditMode(false);\r\n                setFieldValue(week.title);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n          > */}\r\n          {week.lectures.map((item, index) => (\r\n            <Grid item container>\r\n              <LectureView\r\n                lecture={item}\r\n                onLectureChange={(lecture) =>\r\n                  handleOnLectureChange(index, lecture)\r\n                }\r\n                onLectureRemove={() => handleOnLectureRemove(index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          <Grid item container justify=\"center\" style={{ marginTop: 10 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddCircle />}\r\n              onClick={handleOnLectureAdd}\r\n            >\r\n              ADD LECTURE\r\n            </Button>\r\n          </Grid>\r\n          {/* </ReactSortable> */}\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\footer\\Footer.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx",["505","506","507"],"import { Grid, InputAdornment, Slider, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { IFilteredValue, ISliderFilter } from \"../SearchPage\";\r\n\r\nexport function FilterSlider({\r\n  sliderData,\r\n  onChange,\r\n}: {\r\n  sliderData: ISliderFilter;\r\n  onChange: (value: number[], isClear: boolean) => void;\r\n}) {\r\n  const [value, setValue] = React.useState(sliderData.value);\r\n  useEffect(() => {\r\n    setValue(sliderData.value);\r\n  }, [sliderData.value]);\r\n\r\n  async function handleSliderChange(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    // changeFilteredArrayFunc({ filterType: filterType, min: newValue[0], max: newValue[1] });\r\n  }\r\n  function handleSliderCommit(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    onChange(value, value[0] == sliderData.min && value[1] == sliderData.max);\r\n    // let newObject = object;\r\n    // newObject.value = newValue;\r\n    // onObjectChange(newObject);\r\n  }\r\n\r\n  function handleInputChangeMin(minValue) {\r\n    setValue([Math.min(minValue, value[1]), Math.max(minValue, value[1])]);\r\n  }\r\n  function handleInputChangeMax(maxValue) {\r\n    setValue([Math.min(value[0], maxValue), Math.max(value[0], maxValue)]);\r\n  }\r\n  function handleOnBlurMin(minValue) {\r\n    var newVal = Number(minValue);\r\n    minValue = minValue === \"\" ? 0 : newVal;\r\n    var maxValue = value[1];\r\n\r\n    if (newVal < sliderData.min) minValue = sliderData.min;\r\n    if (newVal > sliderData.max) minValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  }\r\n  const handleOnBlurMax = (maxValue) => {\r\n    var newVal = Number(maxValue);\r\n    var minValue = value[0];\r\n    maxValue = maxValue === \"\" ? 0 : newVal;\r\n\r\n    if (newVal < sliderData.min) maxValue = sliderData.min;\r\n    if (newVal > sliderData.max) maxValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  };\r\n  function generateMarks() {\r\n    var ara: Array<{ value: number; label: string }> = [];\r\n    for (\r\n      var i = sliderData.min;\r\n      i <= sliderData.max;\r\n      i = i + (sliderData.max - sliderData.min) / 5\r\n    ) {\r\n      ara.push({ value: i, label: \"\" + i + sliderData.valueType });\r\n    }\r\n    return ara;\r\n  }\r\n\r\n  return (\r\n    <Grid container xs spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          min={sliderData.min}\r\n          max={sliderData.max}\r\n          step={sliderData.step}\r\n          value={value}\r\n          onChange={(event, newValue) => handleSliderChange(newValue)}\r\n          onChangeCommitted={(event, newValue) => handleSliderCommit(newValue)}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          marks={generateMarks()}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Min value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[0]}\r\n          onChange={(event) => handleInputChangeMin(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMin(event.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Max value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[1]}\r\n          onChange={(event) => handleInputChangeMax(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMax(event.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Course.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx",["508","509","510","511"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n  PictureAsPdf,\r\n  TextFields,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { Lecture } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ArticleInput } from \"./ArticleInput\";\r\nimport { ArticleOutput } from \"./ArticleOutput\";\r\nimport { LinkInput } from \"./LinkInput\";\r\nimport { LinkOutput } from \"./LinkOutput\";\r\nimport { PDFInput } from \"./PDFInput\";\r\nimport { PDFOutput } from \"./PDFOutput\";\r\nimport { VideoInput } from \"./VideoInput\";\r\nimport { VideoOutput } from \"./VideoOutput\";\r\n\r\nexport function LectureView({\r\n  lecture,\r\n  onLectureChange,\r\n  onLectureRemove,\r\n}: {\r\n  lecture: Lecture;\r\n  onLectureChange: (Lecture) => void;\r\n  onLectureRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(lecture.title);\r\n  const [body, setBody] = useState(\"LECTURE_TYPE\");\r\n  useEffect(() => {\r\n    setFieldValue(lecture.title);\r\n  }, [lecture.title]);\r\n\r\n  // function handleBodyChange(body) {\r\n  //   setState({ ...state, body: body });\r\n  // }\r\n  // function handleContentClick(panel) {\r\n  //   setState({\r\n  //     ...state,\r\n  //     expanded: state.contentClicked ? '' : panel\r\n  //   })\r\n  // }\r\n  function handleOnSave(file) {\r\n    console.log(file);\r\n    onLectureChange({ ...lecture, file: file });\r\n    setBody(file.type + \"_OUTPUT\");\r\n  }\r\n  function handleOnCancel() {\r\n    setBody(\r\n      lecture.file == undefined ? \"LECTURE_TYPE\" : lecture.file.type + \"_OUTPUT\"\r\n    );\r\n  }\r\n  function handleOnUpdate() {\r\n    setBody(lecture.file.type + \"_INPUT\");\r\n  }\r\n\r\n  function LectureType() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton onClick={(event) => setBody(\"ARTICLE_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <TextFields />\r\n            <Typography>Article</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"VIDEO_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <VideoCall />\r\n            <Typography>Video</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"PDF_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <PictureAsPdf />\r\n            <Typography>PDF</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"LINK_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <LinkIcon />\r\n            <Typography>Link</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function LectureRow() {\r\n    return (\r\n      <>\r\n        {!editMode && (\r\n          <>\r\n            <IconButton onClick={(event) => setEditMode(true)}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton onClick={onLectureRemove}>\r\n              <DeleteForever />\r\n            </IconButton>\r\n            <Typography>Lecture {11} :</Typography>\r\n            <Typography> {lecture.title}</Typography>\r\n            {!expanded && lecture.file == undefined && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={(event) => setExpanded(!expanded)}\r\n              >\r\n                Content +\r\n              </Button>\r\n            )}\r\n            {expanded && lecture.file == undefined && (\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setExpanded(!expanded);\r\n                  setBody(\"LECTURE_TYPE\");\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            )}\r\n          </>\r\n        )}\r\n        {editMode && (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              defaultValue={lecture.title}\r\n              onBlur={(event) => setFieldValue(event.target.value)}\r\n            />\r\n            <IconButton\r\n              onClick={(event) => {\r\n                onLectureChange({ ...lecture, title: fieldValue });\r\n                setEditMode(false);\r\n              }}\r\n            >\r\n              <CheckCircle />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={(event) => {\r\n                setEditMode(false);\r\n                setFieldValue(lecture.title);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      key={lecture.id}\r\n      expanded={expanded}\r\n      style={{ backgroundColor: \"pink\", width: \"100%\" }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={\r\n          lecture.file != undefined && (\r\n            <ExpandMore onClick={(event) => setExpanded(!expanded)} />\r\n          )\r\n        }\r\n      >\r\n        <LectureRow />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {body === \"LECTURE_TYPE\" && <LectureType />}\r\n\r\n        {body === \"ARTICLE_INPUT\" && (\r\n          <ArticleInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"ARTICLE_OUTPUT\" && (\r\n          <ArticleOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"LINK_INPUT\" && (\r\n          <LinkInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"LINK_OUTPUT\" && (\r\n          <LinkOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"VIDEO_INPUT\" && (\r\n          <VideoInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_OUTPUT\" && (\r\n          <VideoOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"PDF_INPUT\" && (\r\n          <PDFInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"PDF_OUTPUT\" && (\r\n          <PDFOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js",["512","513","514","515","516","517","518","519"],"import { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FaPinterestSquare, FaTwitterSquare } from \"react-icons/fa\";\r\nimport {\r\n  ImFacebook2,\r\n  ImInstagram,\r\n  ImLinkedin,\r\n  ImYoutube,\r\n} from \"react-icons/im\";\r\nimport \"./SimpleReactFooter.sass\";\r\n\r\nclass SimpleReactFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.props.backgroundColor || \"bisque\" }}\r\n        className=\"footer-container\"\r\n      >\r\n        <Grid container>\r\n          <Grid className=\"grid-item\" item md={6} sm={12}>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"first-title\"\r\n            >\r\n              {this.props.title}\r\n            </div>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"description\"\r\n            >\r\n              {this.props.description}\r\n            </div>\r\n          </Grid>\r\n          <Grid container md={6}>\r\n            {this.props.columns.map((column) => (\r\n              <Grid className=\"grid-item\" item sm={3} xs={6}>\r\n                <div\r\n                  style={{ color: this.props.fontColor || \"black\" }}\r\n                  className=\"second-title\"\r\n                >\r\n                  {column.title}\r\n                </div>\r\n                {column.resources.map((resource) => (\r\n                  <div key={resource.id}>\r\n                    <a\r\n                      href={`${resource.link}`}\r\n                      target=\"_blank\"\r\n                      style={{ color: this.props.fontColor || \"black\" }}\r\n                      className=\"resources\"\r\n                    >\r\n                      {resource.name}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        {this.props.facebook !== undefined ||\r\n        this.props.linkedin !== undefined ||\r\n        this.props.instagram !== undefined ||\r\n        this.props.twitter !== undefined ||\r\n        this.props.pinterest !== undefined ||\r\n        this.props.youtube !== undefined ? (\r\n          <div className=\"social-media-col\">\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"stay-connected-title\"\r\n            >\r\n              Stay connected\r\n            </div>\r\n            <div className=\"social-media\">\r\n              {this.props.facebook !== undefined ? (\r\n                <a\r\n                  href={`https://www.facebook.com/${this.props.facebook}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImFacebook2\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.linkedin !== undefined ? (\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${this.props.linkedin}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImLinkedin\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.instagram !== undefined ? (\r\n                <a\r\n                  href={`https://www.instagram.com/${this.props.instagram}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImInstagram\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.twitter !== undefined ? (\r\n                <a\r\n                  href={`https://www.twitter.com/${this.props.twitter}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaTwitterSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.pinterest !== undefined ? (\r\n                <a\r\n                  href={`https://www.pinterest.com/${this.props.pinterest}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaPinterestSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.youtube !== undefined ? (\r\n                <a\r\n                  href={`https://www.youtube.com/channel/${this.props.youtube}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImYoutube\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div>\r\n          <div\r\n            style={{ color: this.props.copyrightColor || \"grey\" }}\r\n            className=\"copyright\"\r\n          >\r\n            Copyright &copy; {this.props.copyright}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleReactFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  linkedin: PropTypes.string,\r\n  instagram: PropTypes.string,\r\n  facebook: PropTypes.string,\r\n  youtube: PropTypes.string,\r\n  pinterest: PropTypes.string,\r\n  title: PropTypes.string,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      resources: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          link: PropTypes.string,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n  copyright: PropTypes.string,\r\n  iconColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  copyrightColor: PropTypes.string,\r\n};\r\n\r\nexport default SimpleReactFooter;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx",["520","521","522","523"],"D:\\program\\java\\coursebucket\\frontend\\src\\classes\\Files.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\Header.tsx",["524","525"],"D:\\program\\java\\coursebucket\\frontend\\src\\layout\\DrawerLayout.tsx",["526","527","528","529"],"import {\r\n  AppBar,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport User from \"./User\";\r\n\r\nconst drawerWidth = 600;\r\nconst icon = <InboxIcon />;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport interface IDrawerLayoutObject {\r\n  label: string;\r\n  urlShort?: string;\r\n  icon: JSX.Element;\r\n  content: JSX.Element;\r\n}\r\n\r\nconst DrawerLayout = ({\r\n  objects,\r\n  defaultTabIndex = 0,\r\n}: {\r\n  objects: Array<IDrawerLayoutObject>;\r\n  defaultTabIndex?: number;\r\n}) => {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(defaultTabIndex);\r\n\r\n  useEffect(() => {\r\n    setTabIndex(defaultTabIndex);\r\n  }, [defaultTabIndex]);\r\n\r\n  function timeout(delay) {\r\n    return new Promise((res) => setTimeout(res, delay));\r\n  }\r\n  function handleTabIndexChange(index) {\r\n    // await timeout(100);\r\n    setTabIndex(index);\r\n  }\r\n\r\n  function DrawerList({ objects }) {\r\n    return (\r\n      <div>\r\n        <List>\r\n          {objects.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              key={item.label}\r\n              onClick={() => handleTabIndexChange(index)}\r\n            >\r\n              {/* <ListItemIcon>{<InboxIcon />}</ListItemIcon> */}\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n  function TabPanel({ children, value, index, ...other }) {\r\n    return (\r\n      <div role=\"tabpanel\" hidden={value != index} {...other}>\r\n        {value === index && children}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Responsive displayIn={[\"Tablet\", \"Laptop\"]}>\r\n          <Grid container direction=\"row\">\r\n            <Grid style={{ width: drawerWidth }} item sm>\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Drawer\r\n                    classes={{\r\n                      paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ ...style, marginTop: 24, marginBottom: 24 }}\r\n                    variant=\"permanent\"\r\n                    open\r\n                  >\r\n                    <Tabs\r\n                      orientation=\"vertical\"\r\n                      value={tabIndex}\r\n                      onChange={(event, newValue) => setTabIndex(newValue)}\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                    >\r\n                      {objects.map((item, idx) => (\r\n                        <Tab label={item.label} icon={item.icon} />\r\n                      ))}\r\n                    </Tabs>\r\n                  </Drawer>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n            <Grid item className={classes.content}>\r\n              {objects.map((item, idx) => (\r\n                <TabPanel value={tabIndex} index={idx}>\r\n                  {item.content}\r\n                </TabPanel>\r\n              ))}\r\n              {/* {objects\r\n                .map((item) => ({ content: item.content }))\r\n                .map((item, index) => (\r\n                  <div hidden={tabIndex !== index}>{item.content}</div>\r\n                ))} */}\r\n            </Grid>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive displayIn=\"Mobile\">\r\n          <Sticky>\r\n            {({ style }) => (\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabIndex}\r\n                  onChange={(event, newValue) => setTabIndex(newValue)}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {objects.map((item, idx) => (\r\n                    <Tab label={item.label} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            )}\r\n          </Sticky>\r\n\r\n          {objects.map((item, idx) => (\r\n            <TabPanel\r\n              value={tabIndex}\r\n              index={idx}\r\n              style={{\r\n                padding: 15,\r\n              }}\r\n            >\r\n              {item.content}\r\n            </TabPanel>\r\n          ))}\r\n        </Responsive>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default DrawerLayout;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx",["530","531","532"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport VideoPlayer from \"react-simple-video-player\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function VideoOutput({ file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      <VideoPlayer\r\n        url={require(\"assets/video/Video-1.mp4\")}\r\n        // poster={require('assets/img/Banner-1.jpg')}\r\n        width={400}\r\n        height={300}\r\n        autoplay\r\n      />\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.content} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx",["533"],"import { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { FileUploader } from \"tools/customDesign/FileUploader\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\n\r\nexport function VideoInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTile] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  function handleContentChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"VIDEO\", title, content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <MUIRichTextEditor\r\n        label=\"Start typing here...\"\r\n        value={content}\r\n        onChange={handleContentChange}\r\n      />\r\n      <FileUploader />\r\n    </InputLayout>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx",["534"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\nimport { FileUploader } from \"tools/customDesign/FileUploader\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\n\r\nexport function PDFInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTitle] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  function handleContentChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"PDF\", title, content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <MUIRichTextEditor\r\n        label=\"Start typing here...\"\r\n        defaultValue={content}\r\n        onChange={handleContentChange}\r\n      />\r\n      <FileUploader />\r\n    </InputLayout>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx",["535","536","537","538","539","540","541"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function PDFOutput({ file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      {/* <PDFOpener /> */}\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.content} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\TopNav.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\SideNav.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\header\\MenuBar.tsx",["542"],"import { Collapse, Grid, List, ListItem, ListItemText, makeStyles } from \"@material-ui/core\";\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\n\r\n\r\n// let CSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    backgroundColor: \"#ffc107\",\r\n    padding: theme.spacing(0, 1, 0, 1)\r\n  },\r\n  menuItemWrapper: {\r\n    height: \"auto\",\r\n  },\r\n  menu: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: \"space-between\",\r\n      borderBottom: \"1px solid black\",\r\n    }\r\n  },\r\n  subMenuContainer: {\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fd7e14\",\r\n    zIndex: 100,\r\n    [theme.breakpoints.down('sm')]: {\r\n      position: \"relative\",\r\n      marginLeft: \"20px\",\r\n      // right: \"80%\",\r\n      // width: \"100%\",\r\n    },\r\n  },\r\n  subMenuItem: {\r\n    padding: theme.spacing(1, 3),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: \"50%\",\r\n    }\r\n  },\r\n  signInBtn: {\r\n    justify: \"start\",\r\n    label: {\r\n      justify: \"start\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport const menuItems = {\r\n  defaultExpanded: [],\r\n  data: [\r\n    {\r\n      title: \"Menu 1\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 2\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 1\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 2\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 3\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 3\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 4\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 5\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 6\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 7\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 8\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n  ]\r\n}\r\n\r\n\r\n\r\nexport function SubMenu({ item: items, open }) {\r\n  const classes = useStyles();\r\n  if (!items.length) return <></>\r\n  else return (\r\n    <div className={classes.subMenuContainer}>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {items.map(item => (\r\n            <ListItem className={classes.subMenuItem} button key={item.title}>\r\n              <ListItemText primary={item.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport function Menu({ item }) {\r\n  const classes = useStyles();\r\n  const subItems = item.items;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleMouseEnterLeave = (doOpen) => {\r\n    if (subItems.length) {\r\n      setOpen(doOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item className={classes.menuItemWrapper} onMouseEnter={() => (setOpen(true))} onMouseLeave={() => (setOpen(false))}>\r\n      <List disablePadding>\r\n        <ListItem className={classes.menu} button key={item.title}>\r\n          {item.title}\r\n          {subItems.length > 0\r\n            ?\r\n            !open\r\n              ? <ExpandMoreIcon />\r\n              : <ExpandLessIcon />\r\n            : <React.Fragment></React.Fragment>\r\n          }\r\n        </ListItem>\r\n      </List>\r\n      <SubMenu item={subItems} open={open} />\r\n    </Grid >\r\n  )\r\n}\r\n\r\n\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\FileUploader.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js",["543","544"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport DesignationService from '../AdminPanel/api/DesignationService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction DesignationComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Designation ', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllDesignations()\r\n\r\n\r\n  function getAllDesignations() {\r\n    DesignationService.getAllDesignation()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllDesignations() {\r\n    useEffect(() => { getAllDesignations() }, []);\r\n  }\r\n\r\n  function CallupdateDesignation(designation) {\r\n\r\n    DesignationService.updateDesignation(designation)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteDesignation(id) {\r\n\r\n    DesignationService.deleteDesignation(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdDesignation(designation) {\r\n\r\n    DesignationService.addDesignation(designation)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Designation\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdDesignation(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateDesignation(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteDesignation(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DesignationComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js",["545","546"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CountryService from '../AdminPanel/api/CountryService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllCountries()\r\n\r\n  function getAllCountries() {\r\n    CountryService.getAllCountries()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCountries() {\r\n    useEffect(() => { getAllCountries() }, []);\r\n  }\r\n\r\n  function CallupdateCountry(country) {\r\n\r\n    CountryService.updateCountry(country)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n  }\r\n  function CalldeleteCountry(id) {\r\n\r\n    CountryService.deleteCountry(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  function CalladdCountry(country) {\r\n\r\n    CountryService.addCountry(country)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Country\"\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                //console.log(newData.id)\r\n                CalladdCountry(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                //setData([...dataUpdate]);\r\n                CallupdateCountry(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete])\r\n                CalldeleteCountry(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default CountryComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js",["547","548"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages() {\r\n    LanguageService.getAllLanguages()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteLanguage(id) {\r\n\r\n    LanguageService.deleteLanguage(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Language\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                CalladdLanguage(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateLanguage(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteLanguage(oldData.id)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js",["549","550"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus() }, [])\r\n  }\r\n\r\n  function CallupdateEduStatus(edustatus) {\r\n\r\n    EduStatusService.updateEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus(id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container >\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Educational Status\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdEduStatus(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateEduStatus(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteEdustatus(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx",["551"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { Chart, Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport React from \"react\";\r\n\r\nexport function CoursePopularityPieChart() {\r\n  const data = [\r\n    {\r\n      title: \"Course name 1\",\r\n      rating: 20,\r\n      ratingValue: 4.78,\r\n      review: 100,\r\n      purchase: 10,\r\n    },\r\n    {\r\n      title: \"Course name 2\",\r\n      rating: 2,\r\n      ratingValue: 5,\r\n      review: 12,\r\n      purchase: 192,\r\n    },\r\n    {\r\n      title: \"Course name 3\",\r\n      rating: 10,\r\n      ratingValue: 4.98,\r\n      review: 50,\r\n      purchase: 230,\r\n    },\r\n    {\r\n      title: \"Course name 4\",\r\n      rating: 20,\r\n      ratingValue: 4.76,\r\n      review: 20,\r\n      purchase: 12,\r\n    },\r\n    {\r\n      title: \"Course name 5\",\r\n      rating: 100,\r\n      ratingValue: 3.99,\r\n      review: 25,\r\n      purchase: 0,\r\n    },\r\n    {\r\n      title: \"Course name 6\",\r\n      rating: 2,\r\n      ratingValue: 1.2,\r\n      review: 43,\r\n      purchase: 30,\r\n    },\r\n    {\r\n      title: \"Course name 7\",\r\n      rating: 15,\r\n      ratingValue: 2.1,\r\n      review: 53,\r\n      purchase: 40,\r\n    },\r\n    {\r\n      title: \"Course name 8\",\r\n      rating: 22,\r\n      ratingValue: 3.2,\r\n      review: 23,\r\n      purchase: 55,\r\n    },\r\n    {\r\n      title: \"Course name 9\",\r\n      rating: 1,\r\n      ratingValue: 5,\r\n      review: 100,\r\n      purchase: 67,\r\n    },\r\n  ];\r\n  const dataSource = data.map((item) => ({\r\n    ...item,\r\n    value:\r\n      item.rating * item.ratingValue * 0.35 +\r\n      item.review * 0.15 +\r\n      item.purchase * 0.5,\r\n  }));\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.ratingValue} (${data.rating})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.review}</Typography>\r\n        <Typography variant=\"body2\">Purchase: {data.purchase}</Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Popularity\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx",["552","553","554","555"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  ArgumentAxis,\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  enrolledStudent: number;\r\n  review: number;\r\n  rating1: number;\r\n  rating2: number;\r\n  rating3: number;\r\n  rating4: number;\r\n  rating5: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\ninterface ICourse {\r\n  id: number;\r\n  name: string;\r\n}\r\nconst courseArray: Array<ICourse> = [\r\n  { id: 1, name: \"Course name 1\" },\r\n  { id: 2, name: \"Course name 2\" },\r\n  { id: 3, name: \"Course name 3\" },\r\n  { id: 4, name: \"Course name 4\" },\r\n  { id: 5, name: \"Course name 5\" },\r\n  { id: 6, name: \"Course name 6\" },\r\n  { id: 7, name: \"Course name 7\" },\r\n];\r\nexport function OverviewBarChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[1]);\r\n  const [course, setCourse] = useState<ICourse>(courseArray[0]);\r\n\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n =\r\n      viewType == viewTypeArray[0]\r\n        ? 7\r\n        : viewType === viewTypeArray[1]\r\n        ? 30\r\n        : 12;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      if (viewType == viewTypeArray[0]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", { weekday: \"short\" });\r\n      } else if (viewType == viewTypeArray[1]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n        });\r\n      } else if (viewType == viewTypeArray[2]) {\r\n        let date = new Date().setMonth(new Date().getMonth() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n        });\r\n      }\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        enrolledStudent: 10,\r\n        review: 20,\r\n        rating1: 3,\r\n        rating2: 4,\r\n        rating3: 0,\r\n        rating4: 10,\r\n        rating5: 2,\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  //   <SelectBox\r\n  //   dataSource={viewTypeArray}\r\n  //   defaultValue={viewTypeArray[1]}\r\n  //   onSelectionChanged={(event) =>\r\n  //     setViewType(event.selectedItem as string)\r\n  //   }\r\n  // />\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"stackedBar\" />\r\n          <Series\r\n            valueField=\"enrolledStudent\"\r\n            name=\"Enrolled Student\"\r\n            stack=\"Enrolled Student\"\r\n          />\r\n          {console.log(\"rendering\")}\r\n          <Series valueField=\"review\" name=\"Review\" stack=\"Review\" />\r\n          <Series valueField=\"rating1\" name=\"1 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating2\" name=\"2 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating3\" name=\"3 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating4\" name=\"4 star\" stack=\"Rating\" />\r\n          <Series valueField=\"rating5\" name=\"5 star\" stack=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Student number\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ArgumentAxis\r\n          // defaultVisualRange={{ startValue: 300, endValue: 500 }}\r\n          />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container direction=\"row\" justify=\"center\" xs spacing={1}>\r\n          <Grid item>\r\n            <Select\r\n              value={viewType}\r\n              onChange={(event) => setViewType(event.target.value as string)}\r\n              variant=\"outlined\"\r\n            >\r\n              {viewTypeArray.map((item) => (\r\n                <MenuItem\r\n                  key={item}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Select\r\n              value={course}\r\n              onChange={(event) => setCourse(event.target.value as ICourse)}\r\n              variant=\"outlined\"\r\n            >\r\n              {courseArray.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx",["556","557","558"],"import { Card, CardContent, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  rating: number;\r\n}\r\nexport function RatingLineChart() {\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n = 30;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n      data = new Date(date).toLocaleString(\"default\", {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n      });\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        rating: Math.random() * 5,\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Rating\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"spline\" />\r\n          <Series valueField=\"rating\" name=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Rating\" />\r\n          </ValueAxis>\r\n          <Legend visible={false} />\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx",["559"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { Chart, Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport React from \"react\";\r\n\r\nexport function PopularCourseAdminChart() {\r\n  const data = [\r\n    {\r\n      title: \"Course name 1\",\r\n      rating: 20,\r\n      ratingValue: 4.78,\r\n      review: 100,\r\n      purchase: 10,\r\n    },\r\n    {\r\n      title: \"Course name 2\",\r\n      rating: 2,\r\n      ratingValue: 5,\r\n      review: 12,\r\n      purchase: 192,\r\n    },\r\n    {\r\n      title: \"Course name 3\",\r\n      rating: 10,\r\n      ratingValue: 4.98,\r\n      review: 50,\r\n      purchase: 230,\r\n    },\r\n    {\r\n      title: \"Course name 4\",\r\n      rating: 20,\r\n      ratingValue: 4.76,\r\n      review: 20,\r\n      purchase: 12,\r\n    },\r\n    {\r\n      title: \"Course name 5\",\r\n      rating: 100,\r\n      ratingValue: 3.99,\r\n      review: 25,\r\n      purchase: 0,\r\n    },\r\n    {\r\n      title: \"Course name 6\",\r\n      rating: 2,\r\n      ratingValue: 1.2,\r\n      review: 43,\r\n      purchase: 30,\r\n    },\r\n    {\r\n      title: \"Course name 7\",\r\n      rating: 15,\r\n      ratingValue: 2.1,\r\n      review: 53,\r\n      purchase: 40,\r\n    },\r\n    {\r\n      title: \"Course name 8\",\r\n      rating: 22,\r\n      ratingValue: 3.2,\r\n      review: 23,\r\n      purchase: 55,\r\n    },\r\n    {\r\n      title: \"Course name 9\",\r\n      rating: 1,\r\n      ratingValue: 5,\r\n      review: 100,\r\n      purchase: 67,\r\n    },\r\n  ];\r\n  const dataSource = data.map((item) => ({\r\n    ...item,\r\n    value:\r\n      item.rating * item.ratingValue * 0.35 +\r\n      item.review * 0.15 +\r\n      item.purchase * 0.5,\r\n  }));\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.ratingValue} (${data.rating})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.review}</Typography>\r\n        <Typography variant=\"body2\">Purchase: {data.purchase}</Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Most Popular Courses\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\Data.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js",["560"],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx",["561","562","563"],"import { Property } from \"classes/Course\";\r\nimport React from \"react\";\r\nimport { AddAbleTextField } from \"./AddAbleTextField\";\r\n\r\nexport function TargetStudent({ course, onCourseAttrChange }) {\r\n  if (course.outcomes == undefined) {\r\n    course = { ...course, outcomes: [\"\"] };\r\n  }\r\n  if (course.prerequisite == undefined) {\r\n    course = { ...course, prerequisite: [\"\"] };\r\n  }\r\n  if (course.properties == undefined) {\r\n    course = { ...course, properties: [new Property()] };\r\n  }\r\n  console.log(course);\r\n  return (\r\n    <>\r\n      <AddAbleTextField\r\n        header=\"What will students learn in your course?\"\r\n        objects={course.outcomes}\r\n        onObjectsChange={(outcomes) =>\r\n          onCourseAttrChange({ outcomes: outcomes })\r\n        }\r\n      />\r\n      <AddAbleTextField\r\n        header=\"Are there any course requirements or prerequisites?\"\r\n        objects={course.prerequisite}\r\n        onObjectsChange={(prerequisite) =>\r\n          onCourseAttrChange({ prerequisite: prerequisite })\r\n        }\r\n      />\r\n      <AddAbleTextField\r\n        header=\"Write down the properties in brief with attractive icons\"\r\n        showIconPicker\r\n        objects={course.properties}\r\n        onObjectsChange={(properties) =>\r\n          onCourseAttrChange({ properties: properties })\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\ImageCarousel.js",["564"],"import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst images = [\r\n  require('assets/banner/Banner-1.jpg'),\r\n  require('assets/banner/Banner-2.jpg'),\r\n  require('assets/banner/Banner-3.jpg'),\r\n  require('assets/banner/Banner-4.jpg'),\r\n]\r\n\r\n\r\nexport default function ImageSlider(props) {\r\n\r\n  return (\r\n    <Carousel\r\n      animation=\"slide\"\r\n      fullHeightHover={true}\r\n      stopAutoPlayOnHover={false}\r\n      timeout={500}\r\n      navButtonsProps={{\r\n        style: {\r\n          width: 20,\r\n          height: 120,\r\n          backgroundColor: 'cornflowerblue',\r\n          borderRadius: 5\r\n        }\r\n      }}\r\n      NextIcon={<ArrowForwardIosIcon />}\r\n      PrevIcon={<ArrowBackIosIcon style={{ marginLeft: 12 }} />}\r\n    >\r\n      {\r\n        images.map((src, i) => <Image key={i} src={src.default} />)\r\n      }\r\n    </Carousel >\r\n  )\r\n}\r\n\r\nfunction Image(props) {\r\n  return (\r\n    // <Grid container style={{ padding: \"0px 40px\" }}>\r\n    <img width=\"100%\" {...props} />\r\n    // </Grid>\r\n  )\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\CustomPagination.tsx",["565","566"],"import { Grid, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport CourseBox from 'components/course/CourseBox';\r\nimport React, { useState } from 'react';\r\n\r\nconst CourseBoxContainer = ({ courses }) => {\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        {courses.map(course => (\r\n          <CourseBox courseData={course} />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\nconst CoursePagination = ({ courses, title }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n\r\n  const indexOfLastCourse = currentPage * postsPerPage;\r\n  const indexOfFirstCourse = indexOfLastCourse - postsPerPage;\r\n  const currentCourses = courses.slice(indexOfFirstCourse, indexOfLastCourse);\r\n\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-between\">\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <CourseBoxContainer courses={currentCourses} />\r\n      <Pagination\r\n        count={Math.ceil(courses.length / postsPerPage)}\r\n        page={currentPage}\r\n        onChange={paginate}\r\n        color=\"secondary\"\r\n        siblingCount={3}\r\n        size=\"large\"\r\n      />\r\n    </Grid >\r\n  );\r\n};\r\n\r\nexport default CoursePagination;\r\n\r\n\r\n\r\n\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\layout\\Pagination.tsx",["567","568","569","570","571"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction CustomPagination({\r\n  type = \"one-item-per-line\",\r\n  title,\r\n  children,\r\n  objectsPerPage = 12,\r\n}: {\r\n  type?: \"one-item-per-line\" | \"two-item-per-line\" | \"calculate-by-width\";\r\n  children: JSX.Element[];\r\n  title?: string;\r\n  objectsPerPage?: number;\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const indexOfLastObject = currentPage * objectsPerPage;\r\n  const indexOfFirstObject = indexOfLastObject - objectsPerPage;\r\n  const currentPageObjects = children.slice(\r\n    indexOfFirstObject,\r\n    indexOfLastObject\r\n  );\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  let elements;\r\n  if (type === \"one-item-per-line\") {\r\n    elements = (\r\n      <Grid container direction=\"column\" xs spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item xs={12}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"two-item-per-line\") {\r\n    elements = (\r\n      <Grid container spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item xs={6}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"calculate-by-width\") {\r\n    elements = (\r\n      <Grid container direction=\"row\" justify=\"space-between\" xs spacing={2}>\r\n        {currentPageObjects.map((item) => (\r\n          <Grid item>{item}</Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {title != undefined && (\r\n        <Typography\r\n          variant=\"h3\"\r\n          style={{ textAlign: \"center\", marginBottom: 10 }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"space-between\"\r\n      >\r\n        {elements}\r\n        <Pagination\r\n          count={Math.ceil(children.length / objectsPerPage)}\r\n          page={currentPage}\r\n          onChange={paginate}\r\n          color=\"secondary\"\r\n          siblingCount={3}\r\n          size=\"large\"\r\n          style={{ marginTop: 15 }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPagination;\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Review.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx",["572","573"],"import {\r\n  Avatar,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { lorem } from \"components/course/courseView/CoursePage\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\n\r\nexport function FAQSection() {\r\n  const [writeFAQ, setWriteFAQ] = useState(true);\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" xs spacing={2}>\r\n          <Grid item container direction=\"row\" justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                FAQ\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setWriteFAQ(true)}\r\n              >\r\n                Ask a question\r\n              </Button>\r\n              <FAQInputAnswerDialog\r\n                open={writeFAQ}\r\n                onClose={() => setWriteFAQ(false)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {[1, 2, 3, 4].map((item) => (\r\n            <>\r\n              <Divider />\r\n              <Grid item>\r\n                <FAQBox />\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function FAQBox() {\r\n  return (\r\n    <Grid container direction=\"row\" wrap=\"nowrap\" xs spacing={2}>\r\n      <Grid item>\r\n        <Avatar />\r\n      </Grid>\r\n      <Grid item container direction=\"column\">\r\n        <Grid>\r\n          <Typography variant=\"h5\">Questioner</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\">4 weeks ago</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body1\">{lorem + lorem}</Typography>\r\n        </Grid>\r\n        <Grid item style={{ marginTop: 20 }}>\r\n          <Grid container direction=\"row\" wrap=\"nowrap\" xs spacing={2}>\r\n            <Grid item>\r\n              <Avatar />\r\n            </Grid>\r\n            <Grid item container direction=\"column\">\r\n              <Grid>\r\n                <Typography variant=\"h5\">Respondent</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\">4 weeks ago</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body1\">{lorem + lorem}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction FAQInputQuestionDialog({ open, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Ask a question</DialogTitle>\r\n      <DialogContent>\r\n        <MUIRichTextEditor />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify=\"center\" xs spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction FAQInputAnswerDialog({ open, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Reply this question</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" xs spacing={2}>\r\n          <Grid item>\r\n            <Typography>Question will be here...</Typography>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item>\r\n            <MUIRichTextEditor />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justify=\"center\" xs spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                onClose();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx",["574","575","576","577"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  Slide,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { Image } from \"@material-ui/icons\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport React, { useState } from \"react\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\n\r\nexport function CongratulationDialog({\r\n  open,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}) {\r\n  return (\r\n    <Dialog open={open} keepMounted onClose={onClose}>\r\n      <DialogContent>\r\n        <Image />\r\n        <Card>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              wrap=\"nowrap\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              xs\r\n              spacing={1}\r\n            >\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                xs\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Image />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Course Title</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"flex-end\"\r\n                style={{ width: \"auto\" }}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body1\">10000</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body1\">500</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function CheckoutDialog({\r\n  open,\r\n  onClose,\r\n  onPurchase,\r\n}: {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onPurchase: () => void;\r\n}) {\r\n  const [nameOnCard, setNameOnCard] = useState(\"\");\r\n  const [cardNum, setCardNum] = useState(\"\");\r\n  const [expDate, setExpDate] = useState(new Date());\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Checkout</DialogTitle>\r\n      <DialogContent>\r\n        <Grid direction=\"column\" xs spacing={2}>\r\n          <Grid item container direction=\"row\" wrap=\"nowrap\" xs spacing={4}>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Card details</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Name on card\"\r\n                  onBlur={(event) => setNameOnCard(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Card number\"\r\n                  onBlur={(event) => setCardNum(event.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <KeyboardDatePicker\r\n                  // disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MMM/yyyy\"\r\n                  label=\"Expire Date\"\r\n                  inputVariant=\"outlined\"\r\n                  value={expDate}\r\n                  onChange={(date) => {\r\n                    setExpDate(date as Date);\r\n                  }}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Summary</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Original price</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">10000</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Discount</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">989</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Total</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">1209</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    onClose();\r\n                    onPurchase();\r\n                  }}\r\n                >\r\n                  Complete payment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardHeader>\r\n                <Typography variant=\"h5\">Order details</Typography>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  xs\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <Image />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">Course Title</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">10000</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">500</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx",["578","579","580","581"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  teacher: number;\r\n  student: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\n\r\nexport function UserRegistrationChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[1]);\r\n\r\n  const dataSource: Array<ISource> = [];\r\n  function generateRandomData() {\r\n    let n =\r\n      viewType == viewTypeArray[0]\r\n        ? 7\r\n        : viewType === viewTypeArray[1]\r\n        ? 30\r\n        : 12;\r\n    for (let i = 0; i < n; i++) {\r\n      let data;\r\n      if (viewType == viewTypeArray[0]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", { weekday: \"short\" });\r\n      } else if (viewType == viewTypeArray[1]) {\r\n        let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n        });\r\n      } else if (viewType == viewTypeArray[2]) {\r\n        let date = new Date().setMonth(new Date().getMonth() - (n - 1 - i));\r\n        data = new Date(date).toLocaleString(\"default\", {\r\n          month: \"short\",\r\n          year: \"numeric\",\r\n        });\r\n      }\r\n      console.log(data);\r\n      dataSource.push({\r\n        state: data,\r\n        teacher: Math.round(Math.random() * 200),\r\n        student: Math.round(Math.random() * 200),\r\n      });\r\n    }\r\n  }\r\n  generateRandomData();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"state\" type=\"stackedBar\" />\r\n          <Series valueField=\"teacher\" name=\"Teacher\" stack=\"Teacher\" />\r\n          <Series valueField=\"student\" name=\"Student\" stack=\"Student\" />\r\n          <ValueAxis>\r\n            <Title text=\"Count\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container justify=\"center\">\r\n          <Select\r\n            value={viewType}\r\n            onChange={(event) => setViewType(event.target.value as string)}\r\n            variant=\"outlined\"\r\n          >\r\n            {viewTypeArray.map((item) => (\r\n              <MenuItem\r\n                key={item}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\SignUp.tsx",["582","583","584","585","586","587","588"],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx",["589","590","591","592","593"],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\SignIn.tsx",["594"],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\Configure.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\tools\\Tools.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js",["595","596"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CourseApprovalService from '../AdminPanel/api/CourseApprovalService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction CourseApproval(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    { title: 'Title', field: 'title', editable: false },\r\n    { title: 'Teacher Username', field: 'teacherId', editable: false },\r\n    { title: 'Publish Date', field: 'publishDate', editable: false }\r\n  ])\r\n\r\n  const [data1, setData1] = useState([])\r\n  const [data2, setData2] = useState([])\r\n\r\n  function getUnapprovedCourses() {\r\n    CourseApprovalService.getUnapprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData1(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n  function getApprovedCourses() {\r\n    CourseApprovalService.getApprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData2(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getApprovedCourses()\r\n    getUnapprovedCourses()\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Grid container xs spacing={3}>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Approved Courses\"\r\n          data={data1}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Unapproved Courses\"\r\n          data={data2}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CourseApproval","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js",["597","598"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport InfoService from '../AdminPanel/api/InfoService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction TeacherInfoComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Username', field: 'username', editable: false },\r\n    { title: 'Course Created', field: 'courseCreated', editable: false },\r\n    { title: 'Course purchased', field: 'coursePurchased', editable: false },\r\n    { title: 'Total Income', field: 'totalIncome', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n\r\n  function getTeacherInfo() {\r\n    InfoService.getTeacherInfo()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => { getTeacherInfo() }, []);\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <Grid item container> \r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Teacher Information\"\r\n        data={data}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n        />\r\n        </Grid>\r\n    </Grid>\r\n\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default TeacherInfoComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js",["599","600"],"\r\nimport React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport InfoService from '../AdminPanel/api/InfoService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction StudentInfoComponent(props) {\r\n    const { useState } = React;\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Username', field: 'username', editable: false },\r\n        { title: 'Course Owned', field: 'courseOwned', editable: false },\r\n        { title: 'Money Spent', field: 'moneySpent', editable: false }\r\n    ])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    function getStudentInfo() {\r\n        InfoService.getStudentInfo()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                //callData(response.data)          \r\n                setData(response.data);\r\n                //setData(response.data)\r\n            }\r\n            )\r\n    }\r\n\r\n    useEffect(() => { getStudentInfo() }, []);\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n            <Grid item container>\r\n                <MaterialTable\r\n                    style={{ width: \"100%\" }}\r\n                    columns={columns}\r\n                    title=\"Student Information\"\r\n                    data={data}\r\n                    options={{\r\n                        actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default StudentInfoComponent","D:\\program\\java\\coursebucket\\frontend\\src\\components\\person\\api\\PersonService.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx",[],"D:\\program\\java\\coursebucket\\frontend\\src\\tools\\customDesign\\Alert.tsx",[],{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","replacedBy":"604"},{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","replacedBy":"604"},{"ruleId":"605","severity":1,"message":"606","line":18,"column":10,"nodeType":"607","messageId":"608","endLine":18,"endColumn":31},{"ruleId":"605","severity":1,"message":"609","line":50,"column":11,"nodeType":"607","messageId":"608","endLine":50,"endColumn":26},{"ruleId":"605","severity":1,"message":"610","line":60,"column":19,"nodeType":"607","messageId":"608","endLine":60,"endColumn":29},{"ruleId":"605","severity":1,"message":"611","line":74,"column":16,"nodeType":"607","messageId":"608","endLine":74,"endColumn":23},{"ruleId":"605","severity":1,"message":"612","line":26,"column":10,"nodeType":"607","messageId":"608","endLine":26,"endColumn":23},{"ruleId":"605","severity":1,"message":"609","line":51,"column":11,"nodeType":"607","messageId":"608","endLine":51,"endColumn":26},{"ruleId":"605","severity":1,"message":"613","line":61,"column":10,"nodeType":"607","messageId":"608","endLine":61,"endColumn":17},{"ruleId":"605","severity":1,"message":"610","line":61,"column":19,"nodeType":"607","messageId":"608","endLine":61,"endColumn":29},{"ruleId":"605","severity":1,"message":"614","line":75,"column":10,"nodeType":"607","messageId":"608","endLine":75,"endColumn":14},{"ruleId":"605","severity":1,"message":"611","line":75,"column":16,"nodeType":"607","messageId":"608","endLine":75,"endColumn":23},{"ruleId":"605","severity":1,"message":"615","line":19,"column":10,"nodeType":"607","messageId":"608","endLine":19,"endColumn":16},{"ruleId":"616","severity":1,"message":"617","line":120,"column":42,"nodeType":"618","messageId":"619","endLine":120,"endColumn":44},{"ruleId":"605","severity":1,"message":"620","line":391,"column":7,"nodeType":"607","messageId":"608","endLine":391,"endColumn":12},{"ruleId":"605","severity":1,"message":"621","line":392,"column":9,"nodeType":"607","messageId":"608","endLine":392,"endColumn":16},{"ruleId":"605","severity":1,"message":"622","line":101,"column":9,"nodeType":"607","messageId":"608","endLine":101,"endColumn":14},{"ruleId":"605","severity":1,"message":"623","line":105,"column":10,"nodeType":"607","messageId":"608","endLine":105,"endColumn":21},{"ruleId":"605","severity":1,"message":"624","line":106,"column":10,"nodeType":"607","messageId":"608","endLine":106,"endColumn":21},{"ruleId":"605","severity":1,"message":"625","line":107,"column":10,"nodeType":"607","messageId":"608","endLine":107,"endColumn":26},{"ruleId":"616","severity":1,"message":"626","line":124,"column":28,"nodeType":"618","messageId":"619","endLine":124,"endColumn":30},{"ruleId":"616","severity":1,"message":"626","line":128,"column":35,"nodeType":"618","messageId":"619","endLine":128,"endColumn":37},{"ruleId":"616","severity":1,"message":"626","line":138,"column":30,"nodeType":"618","messageId":"619","endLine":138,"endColumn":32},{"ruleId":"616","severity":1,"message":"626","line":142,"column":37,"nodeType":"618","messageId":"619","endLine":142,"endColumn":39},{"ruleId":"627","severity":1,"message":"628","line":158,"column":6,"nodeType":"629","endLine":158,"endColumn":8,"suggestions":"630"},{"ruleId":"616","severity":1,"message":"617","line":163,"column":24,"nodeType":"618","messageId":"619","endLine":163,"endColumn":26},{"ruleId":"616","severity":1,"message":"617","line":164,"column":23,"nodeType":"618","messageId":"619","endLine":164,"endColumn":25},{"ruleId":"616","severity":1,"message":"617","line":165,"column":24,"nodeType":"618","messageId":"619","endLine":165,"endColumn":26},{"ruleId":"616","severity":1,"message":"617","line":166,"column":23,"nodeType":"618","messageId":"619","endLine":166,"endColumn":25},{"ruleId":"616","severity":1,"message":"617","line":167,"column":18,"nodeType":"618","messageId":"619","endLine":167,"endColumn":20},{"ruleId":"616","severity":1,"message":"617","line":168,"column":22,"nodeType":"618","messageId":"619","endLine":168,"endColumn":24},{"ruleId":"616","severity":1,"message":"617","line":169,"column":16,"nodeType":"618","messageId":"619","endLine":169,"endColumn":18},{"ruleId":"616","severity":1,"message":"626","line":173,"column":32,"nodeType":"618","messageId":"619","endLine":173,"endColumn":34},{"ruleId":"616","severity":1,"message":"626","line":185,"column":39,"nodeType":"618","messageId":"619","endLine":185,"endColumn":41},{"ruleId":"616","severity":1,"message":"626","line":200,"column":32,"nodeType":"618","messageId":"619","endLine":200,"endColumn":34},{"ruleId":"616","severity":1,"message":"626","line":208,"column":39,"nodeType":"618","messageId":"619","endLine":208,"endColumn":41},{"ruleId":"616","severity":1,"message":"626","line":225,"column":25,"nodeType":"618","messageId":"619","endLine":225,"endColumn":27},{"ruleId":"605","severity":1,"message":"631","line":236,"column":9,"nodeType":"607","messageId":"608","endLine":236,"endColumn":24},{"ruleId":"616","severity":1,"message":"626","line":258,"column":40,"nodeType":"618","messageId":"619","endLine":258,"endColumn":42},{"ruleId":"616","severity":1,"message":"626","line":258,"column":73,"nodeType":"618","messageId":"619","endLine":258,"endColumn":75},{"ruleId":"616","severity":1,"message":"626","line":261,"column":40,"nodeType":"618","messageId":"619","endLine":261,"endColumn":42},{"ruleId":"616","severity":1,"message":"626","line":261,"column":73,"nodeType":"618","messageId":"619","endLine":261,"endColumn":75},{"ruleId":"616","severity":1,"message":"626","line":275,"column":39,"nodeType":"618","messageId":"619","endLine":275,"endColumn":41},{"ruleId":"616","severity":1,"message":"626","line":275,"column":71,"nodeType":"618","messageId":"619","endLine":275,"endColumn":73},{"ruleId":"616","severity":1,"message":"626","line":278,"column":39,"nodeType":"618","messageId":"619","endLine":278,"endColumn":41},{"ruleId":"616","severity":1,"message":"626","line":278,"column":71,"nodeType":"618","messageId":"619","endLine":278,"endColumn":73},{"ruleId":"616","severity":1,"message":"626","line":292,"column":42,"nodeType":"618","messageId":"619","endLine":292,"endColumn":44},{"ruleId":"616","severity":1,"message":"626","line":320,"column":36,"nodeType":"618","messageId":"619","endLine":320,"endColumn":38},{"ruleId":"616","severity":1,"message":"626","line":323,"column":33,"nodeType":"618","messageId":"619","endLine":323,"endColumn":35},{"ruleId":"616","severity":1,"message":"626","line":333,"column":34,"nodeType":"618","messageId":"619","endLine":333,"endColumn":36},{"ruleId":"616","severity":1,"message":"626","line":438,"column":29,"nodeType":"618","messageId":"619","endLine":438,"endColumn":31},{"ruleId":"616","severity":1,"message":"626","line":449,"column":29,"nodeType":"618","messageId":"619","endLine":449,"endColumn":31},{"ruleId":"616","severity":1,"message":"626","line":462,"column":29,"nodeType":"618","messageId":"619","endLine":462,"endColumn":31},{"ruleId":"605","severity":1,"message":"620","line":8,"column":7,"nodeType":"607","messageId":"608","endLine":8,"endColumn":12},{"ruleId":"605","severity":1,"message":"632","line":26,"column":9,"nodeType":"607","messageId":"608","endLine":26,"endColumn":16},{"ruleId":"605","severity":1,"message":"633","line":27,"column":10,"nodeType":"607","messageId":"608","endLine":27,"endColumn":15},{"ruleId":"605","severity":1,"message":"634","line":27,"column":17,"nodeType":"607","messageId":"608","endLine":27,"endColumn":25},{"ruleId":"605","severity":1,"message":"635","line":16,"column":18,"nodeType":"607","messageId":"608","endLine":16,"endColumn":33},{"ruleId":"605","severity":1,"message":"636","line":110,"column":12,"nodeType":"607","messageId":"608","endLine":110,"endColumn":30},{"ruleId":"616","severity":1,"message":"626","line":15,"column":18,"nodeType":"618","messageId":"619","endLine":15,"endColumn":20},{"ruleId":"637","severity":1,"message":"638","line":49,"column":7,"nodeType":"607","messageId":"608","endLine":49,"endColumn":19},{"ruleId":"616","severity":1,"message":"626","line":63,"column":35,"nodeType":"618","messageId":"619","endLine":63,"endColumn":37},{"ruleId":"616","severity":1,"message":"626","line":88,"column":94,"nodeType":"618","messageId":"619","endLine":88,"endColumn":96},{"ruleId":"627","severity":1,"message":"639","line":95,"column":6,"nodeType":"629","endLine":95,"endColumn":8,"suggestions":"640"},{"ruleId":"616","severity":1,"message":"626","line":114,"column":62,"nodeType":"618","messageId":"619","endLine":114,"endColumn":64},{"ruleId":"641","severity":1,"message":"642","line":18,"column":9,"nodeType":"643","endLine":18,"endColumn":173},{"ruleId":"616","severity":1,"message":"626","line":23,"column":36,"nodeType":"618","messageId":"619","endLine":23,"endColumn":38},{"ruleId":"616","severity":1,"message":"617","line":32,"column":24,"nodeType":"618","messageId":"619","endLine":32,"endColumn":26},{"ruleId":"605","severity":1,"message":"644","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":22},{"ruleId":"605","severity":1,"message":"645","line":12,"column":10,"nodeType":"607","messageId":"608","endLine":12,"endColumn":17},{"ruleId":"646","severity":1,"message":"647","line":15,"column":3,"nodeType":"648","messageId":"649","endLine":15,"endColumn":29,"fix":"650"},{"ruleId":"605","severity":1,"message":"651","line":23,"column":7,"nodeType":"607","messageId":"608","endLine":23,"endColumn":21},{"ruleId":"605","severity":1,"message":"652","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":24},{"ruleId":"616","severity":1,"message":"626","line":29,"column":30,"nodeType":"618","messageId":"619","endLine":29,"endColumn":32},{"ruleId":"616","severity":1,"message":"626","line":29,"column":60,"nodeType":"618","messageId":"619","endLine":29,"endColumn":62},{"ruleId":"616","severity":1,"message":"626","line":66,"column":20,"nodeType":"618","messageId":"619","endLine":66,"endColumn":22},{"ruleId":"616","severity":1,"message":"626","line":122,"column":40,"nodeType":"618","messageId":"619","endLine":122,"endColumn":42},{"ruleId":"616","severity":1,"message":"626","line":131,"column":39,"nodeType":"618","messageId":"619","endLine":131,"endColumn":41},{"ruleId":"616","severity":1,"message":"617","line":181,"column":24,"nodeType":"618","messageId":"619","endLine":181,"endColumn":26},{"ruleId":"653","severity":1,"message":"654","line":14,"column":3,"nodeType":"655","messageId":"656","endLine":16,"endColumn":4},{"ruleId":"657","severity":1,"message":"658","line":50,"column":21,"nodeType":"643","messageId":"659","endLine":55,"endColumn":22,"fix":"660"},{"ruleId":"657","severity":1,"message":"658","line":79,"column":17,"nodeType":"643","messageId":"659","endLine":83,"endColumn":18,"fix":"661"},{"ruleId":"657","severity":1,"message":"658","line":93,"column":17,"nodeType":"643","messageId":"659","endLine":97,"endColumn":18,"fix":"662"},{"ruleId":"657","severity":1,"message":"658","line":107,"column":17,"nodeType":"643","messageId":"659","endLine":111,"endColumn":18,"fix":"663"},{"ruleId":"657","severity":1,"message":"658","line":121,"column":17,"nodeType":"643","messageId":"659","endLine":125,"endColumn":18,"fix":"664"},{"ruleId":"657","severity":1,"message":"658","line":135,"column":17,"nodeType":"643","messageId":"659","endLine":139,"endColumn":18,"fix":"665"},{"ruleId":"657","severity":1,"message":"658","line":149,"column":17,"nodeType":"643","messageId":"659","endLine":153,"endColumn":18,"fix":"666"},{"ruleId":"605","severity":1,"message":"667","line":7,"column":20,"nodeType":"607","messageId":"608","endLine":7,"endColumn":32},{"ruleId":"605","severity":1,"message":"668","line":129,"column":5,"nodeType":"607","messageId":"608","endLine":129,"endColumn":6},{"ruleId":"616","severity":1,"message":"626","line":157,"column":59,"nodeType":"618","messageId":"619","endLine":157,"endColumn":61},{"ruleId":"616","severity":1,"message":"626","line":168,"column":59,"nodeType":"618","messageId":"619","endLine":168,"endColumn":61},{"ruleId":"627","severity":1,"message":"669","line":199,"column":6,"nodeType":"629","endLine":199,"endColumn":8,"suggestions":"670"},{"ruleId":"641","severity":1,"message":"642","line":205,"column":9,"nodeType":"643","endLine":208,"endColumn":11},{"ruleId":"605","severity":1,"message":"671","line":20,"column":7,"nodeType":"607","messageId":"608","endLine":20,"endColumn":11},{"ruleId":"605","severity":1,"message":"645","line":74,"column":12,"nodeType":"607","messageId":"608","endLine":74,"endColumn":19},{"ruleId":"605","severity":1,"message":"672","line":82,"column":12,"nodeType":"607","messageId":"608","endLine":82,"endColumn":22},{"ruleId":"616","severity":1,"message":"617","line":103,"column":42,"nodeType":"618","messageId":"619","endLine":103,"endColumn":44},{"ruleId":"605","severity":1,"message":"673","line":7,"column":9,"nodeType":"607","messageId":"608","endLine":7,"endColumn":19},{"ruleId":"605","severity":1,"message":"674","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":18},{"ruleId":"605","severity":1,"message":"675","line":9,"column":9,"nodeType":"607","messageId":"608","endLine":9,"endColumn":17},{"ruleId":"605","severity":1,"message":"676","line":9,"column":17,"nodeType":"607","messageId":"608","endLine":9,"endColumn":24},{"ruleId":"605","severity":1,"message":"677","line":9,"column":17,"nodeType":"607","messageId":"608","endLine":9,"endColumn":25},{"ruleId":"605","severity":1,"message":"673","line":6,"column":9,"nodeType":"607","messageId":"608","endLine":6,"endColumn":19},{"ruleId":"605","severity":1,"message":"674","line":7,"column":10,"nodeType":"607","messageId":"608","endLine":7,"endColumn":18},{"ruleId":"605","severity":1,"message":"675","line":8,"column":9,"nodeType":"607","messageId":"608","endLine":8,"endColumn":17},{"ruleId":"605","severity":1,"message":"678","line":10,"column":10,"nodeType":"607","messageId":"608","endLine":10,"endColumn":18},{"ruleId":"605","severity":1,"message":"679","line":11,"column":10,"nodeType":"607","messageId":"608","endLine":11,"endColumn":20},{"ruleId":"605","severity":1,"message":"680","line":11,"column":22,"nodeType":"607","messageId":"608","endLine":11,"endColumn":35},{"ruleId":"605","severity":1,"message":"681","line":13,"column":12,"nodeType":"607","messageId":"608","endLine":13,"endColumn":33},{"ruleId":"605","severity":1,"message":"682","line":177,"column":9,"nodeType":"607","messageId":"608","endLine":177,"endColumn":30},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"605","severity":1,"message":"684","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":15},{"ruleId":"616","severity":1,"message":"626","line":49,"column":16,"nodeType":"618","messageId":"619","endLine":49,"endColumn":18},{"ruleId":"616","severity":1,"message":"626","line":56,"column":20,"nodeType":"618","messageId":"619","endLine":56,"endColumn":22},{"ruleId":"616","severity":1,"message":"626","line":59,"column":27,"nodeType":"618","messageId":"619","endLine":59,"endColumn":29},{"ruleId":"616","severity":1,"message":"626","line":65,"column":27,"nodeType":"618","messageId":"619","endLine":65,"endColumn":29},{"ruleId":"605","severity":1,"message":"685","line":1,"column":29,"nodeType":"607","messageId":"608","endLine":1,"endColumn":37},{"ruleId":"605","severity":1,"message":"686","line":1,"column":39,"nodeType":"607","messageId":"608","endLine":1,"endColumn":45},{"ruleId":"605","severity":1,"message":"687","line":14,"column":17,"nodeType":"607","messageId":"608","endLine":14,"endColumn":25},{"ruleId":"605","severity":1,"message":"684","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":15},{"ruleId":"637","severity":1,"message":"688","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":20},{"ruleId":"616","severity":1,"message":"626","line":6,"column":23,"nodeType":"618","messageId":"619","endLine":6,"endColumn":25},{"ruleId":"616","severity":1,"message":"626","line":9,"column":27,"nodeType":"618","messageId":"619","endLine":9,"endColumn":29},{"ruleId":"616","severity":1,"message":"626","line":12,"column":25,"nodeType":"618","messageId":"619","endLine":12,"endColumn":27},{"ruleId":"641","severity":1,"message":"642","line":43,"column":5,"nodeType":"643","endLine":43,"endColumn":36},{"ruleId":"605","severity":1,"message":"689","line":18,"column":10,"nodeType":"607","messageId":"608","endLine":18,"endColumn":17},{"ruleId":"605","severity":1,"message":"690","line":18,"column":19,"nodeType":"607","messageId":"608","endLine":18,"endColumn":29},{"ruleId":"605","severity":1,"message":"689","line":16,"column":10,"nodeType":"607","messageId":"608","endLine":16,"endColumn":17},{"ruleId":"605","severity":1,"message":"690","line":16,"column":19,"nodeType":"607","messageId":"608","endLine":16,"endColumn":29},{"ruleId":"616","severity":1,"message":"626","line":38,"column":19,"nodeType":"618","messageId":"619","endLine":38,"endColumn":21},{"ruleId":"616","severity":1,"message":"626","line":48,"column":19,"nodeType":"618","messageId":"619","endLine":48,"endColumn":21},{"ruleId":"616","severity":1,"message":"617","line":59,"column":14,"nodeType":"618","messageId":"619","endLine":59,"endColumn":16},{"ruleId":"605","severity":1,"message":"691","line":16,"column":10,"nodeType":"607","messageId":"608","endLine":16,"endColumn":16},{"ruleId":"605","severity":1,"message":"692","line":99,"column":10,"nodeType":"607","messageId":"608","endLine":99,"endColumn":32},{"ruleId":"605","severity":1,"message":"693","line":11,"column":3,"nodeType":"607","messageId":"608","endLine":11,"endColumn":8},{"ruleId":"605","severity":1,"message":"694","line":15,"column":10,"nodeType":"607","messageId":"608","endLine":15,"endColumn":25},{"ruleId":"605","severity":1,"message":"695","line":90,"column":10,"nodeType":"607","messageId":"608","endLine":90,"endColumn":20},{"ruleId":"605","severity":1,"message":"696","line":91,"column":10,"nodeType":"607","messageId":"608","endLine":91,"endColumn":17},{"ruleId":"616","severity":1,"message":"626","line":30,"column":16,"nodeType":"618","messageId":"619","endLine":30,"endColumn":18},{"ruleId":"616","severity":1,"message":"626","line":37,"column":20,"nodeType":"618","messageId":"619","endLine":37,"endColumn":22},{"ruleId":"616","severity":1,"message":"626","line":40,"column":27,"nodeType":"618","messageId":"619","endLine":40,"endColumn":29},{"ruleId":"616","severity":1,"message":"626","line":46,"column":27,"nodeType":"618","messageId":"619","endLine":46,"endColumn":29},{"ruleId":"605","severity":1,"message":"697","line":26,"column":10,"nodeType":"607","messageId":"608","endLine":26,"endColumn":19},{"ruleId":"605","severity":1,"message":"698","line":83,"column":7,"nodeType":"607","messageId":"608","endLine":83,"endColumn":21},{"ruleId":"616","severity":1,"message":"626","line":101,"column":21,"nodeType":"618","messageId":"619","endLine":101,"endColumn":23},{"ruleId":"616","severity":1,"message":"617","line":101,"column":50,"nodeType":"618","messageId":"619","endLine":101,"endColumn":52},{"ruleId":"616","severity":1,"message":"617","line":105,"column":14,"nodeType":"618","messageId":"619","endLine":105,"endColumn":16},{"ruleId":"616","severity":1,"message":"617","line":106,"column":16,"nodeType":"618","messageId":"619","endLine":106,"endColumn":18},{"ruleId":"616","severity":1,"message":"617","line":107,"column":13,"nodeType":"618","messageId":"619","endLine":107,"endColumn":15},{"ruleId":"605","severity":1,"message":"697","line":17,"column":10,"nodeType":"607","messageId":"608","endLine":17,"endColumn":19},{"ruleId":"616","severity":1,"message":"626","line":81,"column":42,"nodeType":"618","messageId":"619","endLine":81,"endColumn":44},{"ruleId":"616","severity":1,"message":"617","line":87,"column":18,"nodeType":"618","messageId":"619","endLine":87,"endColumn":20},{"ruleId":"616","severity":1,"message":"617","line":184,"column":33,"nodeType":"618","messageId":"619","endLine":184,"endColumn":35},{"ruleId":"616","severity":1,"message":"617","line":187,"column":28,"nodeType":"618","messageId":"619","endLine":187,"endColumn":30},{"ruleId":"605","severity":1,"message":"697","line":23,"column":10,"nodeType":"607","messageId":"608","endLine":23,"endColumn":19},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"637","severity":1,"message":"683","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":10,"column":19,"nodeType":"607","messageId":"608","endLine":10,"endColumn":29},{"ruleId":"637","severity":1,"message":"683","line":5,"column":10,"nodeType":"607","messageId":"608","endLine":5,"endColumn":16},{"ruleId":"637","severity":1,"message":"610","line":11,"column":21,"nodeType":"607","messageId":"608","endLine":11,"endColumn":31},"no-native-reassign",["699"],"no-negated-in-lhs",["700"],"@typescript-eslint/no-unused-vars","'UserRegistrationChart' is defined but never used.","Identifier","unusedVar","'PurchaseHistory' is defined but never used.","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","'ContentHeader' is defined but never used.","'columns' is assigned a value but never used.","'data' is assigned a value but never used.","'FAQBox' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'match' is assigned a value but never used.","'history' is assigned a value but never used.","'theme' is assigned a value but never used.","'oldPassword' is assigned a value but never used.","'newPassword' is assigned a value but never used.","'againNewPassword' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'person.accountType', 'person.card', 'person.country', 'person.dob', and 'props.location.state.registered'. Either include them or remove the dependency array.","ArrayExpression",["701"],"'handleDobChange' is assigned a value but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'StickyContainer' is defined but never used.","'handleFilterChange' is defined but never used.","no-unused-vars","'languageItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objects'. Either include it or remove the dependency array. If 'setLanguages' needs the current value of 'objects', you can also switch to useReducer instead of useState and read 'objects' in the reducer.",["702"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TrainRounded' is defined but never used.","'timeout' is defined but never used.","no-useless-rename","Import IFilterType unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"703","text":"704"},"'defaultLecture' is assigned a value but never used.","'IFilteredValue' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"705","text":"706"},{"range":"707","text":"706"},{"range":"708","text":"706"},{"range":"709","text":"706"},{"range":"710","text":"706"},{"range":"711","text":"706"},{"range":"712","text":"706"},"'categoryList' is defined but never used.","'i' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'popUpNavProperty.admin', 'popUpNavProperty.student', and 'popUpNavProperty.teacher'. Either include them or remove the dependency array.",["713"],"'icon' is assigned a value but never used.","'DrawerList' is defined but never used.","'onFileLoad' is assigned a value but never used.","'pictures' is assigned a value but never used.","'onChange' is assigned a value but never used.","'setTile' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'handleMouseEnterLeave' is assigned a value but never used.","'Drawer' is defined but never used.","'Chart' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'useState' is defined but never used.","'authHeader' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Rating' is defined but never used.","'FAQInputQuestionDialog' is defined but never used.","'Slide' is defined but never used.","'TransitionProps' is defined but never used.","'nameOnCard' is assigned a value but never used.","'cardNum' is assigned a value but never used.","'Copyright' is defined but never used.","'person' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"714","fix":"715"},{"desc":"716","fix":"717"},[398,424],"IFilterType",[1762,1762]," rel=\"noreferrer\"",[2770,2770],[3261,3261],[3751,3751],[4236,4236],[4731,4731],[5230,5230],{"desc":"718","fix":"719"},"Update the dependencies array to be: [person.accountType, person.card, person.country, person.dob, props.location.state.registered]",{"range":"720","text":"721"},"Update the dependencies array to be: [objects]",{"range":"722","text":"723"},"Update the dependencies array to be: [popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",{"range":"724","text":"725"},[5118,5120],"[person.accountType, person.card, person.country, person.dob, props.location.state.registered]",[2317,2319],"[objects]",[4996,4998],"[popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]"]