[{"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js":"1","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js":"2","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx":"3","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js":"4","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx":"5","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx":"6","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx":"7","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx":"8","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx":"9","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx":"10","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx":"11","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx":"12","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx":"13","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js":"14","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js":"15","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js":"16","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx":"17","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx":"18","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx":"19","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx":"20","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js":"21","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js":"22","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx":"23","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx":"24","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js":"25","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx":"26","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx":"27","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx":"28","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx":"29","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx":"30","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx":"31","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx":"32","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js":"33","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx":"34","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx":"35","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx":"36","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx":"37","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx":"38","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx":"39","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx":"40","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js":"41","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx":"42","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js":"43","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx":"44","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx":"45","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx":"46","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx":"47","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx":"48","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx":"49","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx":"50","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js":"51","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx":"52","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx":"53","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx":"54","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx":"55","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx":"56","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx":"57","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx":"58","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx":"59","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx":"60","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx":"61","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx":"62","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx":"63","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js":"64","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js":"65","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js":"66","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js":"67","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx":"68","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx":"69","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx":"70","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js":"71","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx":"72","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx":"73","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js":"74","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js":"75","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js":"76","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx":"77","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx":"78","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx":"79","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx":"80","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx":"81","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx":"82","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx":"83","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx":"84","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx":"85","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx":"86","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx":"87","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx":"88","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js":"89","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js":"90","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js":"91","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js":"92","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js":"93","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx":"94","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx":"95","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx":"96","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js":"97","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx":"98","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx":"99","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx":"100","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx":"101","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx":"102","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx":"103","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx":"104","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx":"105","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx":"106","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx":"107","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx":"108","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx":"109"},{"size":1296,"mtime":1629086192290,"results":"110","hashOfConfig":"111"},{"size":375,"mtime":1623403118146,"results":"112","hashOfConfig":"111"},{"size":2205,"mtime":1629083999166,"results":"113","hashOfConfig":"111"},{"size":2253,"mtime":1629030103930,"results":"114","hashOfConfig":"111"},{"size":3513,"mtime":1628328034937,"results":"115","hashOfConfig":"111"},{"size":4624,"mtime":1629119543568,"results":"116","hashOfConfig":"111"},{"size":18575,"mtime":1629050152502,"results":"117","hashOfConfig":"111"},{"size":4900,"mtime":1627749865034,"results":"118","hashOfConfig":"111"},{"size":1210,"mtime":1629051509115,"results":"119","hashOfConfig":"111"},{"size":19199,"mtime":1626938150874,"results":"120","hashOfConfig":"111"},{"size":10170,"mtime":1628886240206,"results":"121","hashOfConfig":"111"},{"size":22011,"mtime":1628919561662,"results":"122","hashOfConfig":"111"},{"size":6579,"mtime":1628847386775,"results":"123","hashOfConfig":"111"},{"size":3375,"mtime":1628263362814,"results":"124","hashOfConfig":"111"},{"size":3467,"mtime":1628263362813,"results":"125","hashOfConfig":"111"},{"size":5906,"mtime":1623403109731,"results":"126","hashOfConfig":"111"},{"size":2843,"mtime":1629102274713,"results":"127","hashOfConfig":"111"},{"size":1898,"mtime":1628777390688,"results":"128","hashOfConfig":"111"},{"size":1268,"mtime":1626936530954,"results":"129","hashOfConfig":"111"},{"size":8161,"mtime":1628885979444,"results":"130","hashOfConfig":"111"},{"size":1918,"mtime":1626935419439,"results":"131","hashOfConfig":"111"},{"size":551,"mtime":1628777390278,"results":"132","hashOfConfig":"111"},{"size":505,"mtime":1628879021026,"results":"133","hashOfConfig":"111"},{"size":2968,"mtime":1629094377716,"results":"134","hashOfConfig":"111"},{"size":565,"mtime":1628777390278,"results":"135","hashOfConfig":"111"},{"size":2389,"mtime":1628577670968,"results":"136","hashOfConfig":"111"},{"size":5964,"mtime":1628577670997,"results":"137","hashOfConfig":"111"},{"size":2668,"mtime":1627748529259,"results":"138","hashOfConfig":"111"},{"size":4631,"mtime":1627729053813,"results":"139","hashOfConfig":"111"},{"size":2390,"mtime":1628781682421,"results":"140","hashOfConfig":"111"},{"size":5233,"mtime":1628969061318,"results":"141","hashOfConfig":"111"},{"size":8172,"mtime":1629090511427,"results":"142","hashOfConfig":"111"},{"size":3679,"mtime":1628920097418,"results":"143","hashOfConfig":"111"},{"size":11131,"mtime":1629041959789,"results":"144","hashOfConfig":"111"},{"size":9707,"mtime":1629087666347,"results":"145","hashOfConfig":"111"},{"size":3094,"mtime":1628960248914,"results":"146","hashOfConfig":"111"},{"size":4209,"mtime":1629095794575,"results":"147","hashOfConfig":"111"},{"size":2081,"mtime":1629088337116,"results":"148","hashOfConfig":"111"},{"size":1623,"mtime":1628886147055,"results":"149","hashOfConfig":"111"},{"size":4013,"mtime":1628577671239,"results":"150","hashOfConfig":"111"},{"size":68,"mtime":1628777285516,"results":"151","hashOfConfig":"111"},{"size":5916,"mtime":1628783147062,"results":"152","hashOfConfig":"111"},{"size":1176,"mtime":1626935440521,"results":"153","hashOfConfig":"111"},{"size":1619,"mtime":1628796343912,"results":"154","hashOfConfig":"111"},{"size":12010,"mtime":1628868455959,"results":"155","hashOfConfig":"111"},{"size":2264,"mtime":1626876167123,"results":"156","hashOfConfig":"111"},{"size":4012,"mtime":1627745980333,"results":"157","hashOfConfig":"111"},{"size":616,"mtime":1627731256092,"results":"158","hashOfConfig":"111"},{"size":2054,"mtime":1629085843571,"results":"159","hashOfConfig":"111"},{"size":10347,"mtime":1628794028519,"results":"160","hashOfConfig":"111"},{"size":6552,"mtime":1626876263511,"results":"161","hashOfConfig":"111"},{"size":6449,"mtime":1628602956332,"results":"162","hashOfConfig":"111"},{"size":1038,"mtime":1628746724495,"results":"163","hashOfConfig":"111"},{"size":619,"mtime":1628793678241,"results":"164","hashOfConfig":"111"},{"size":1251,"mtime":1628793709459,"results":"165","hashOfConfig":"111"},{"size":1099,"mtime":1628747369633,"results":"166","hashOfConfig":"111"},{"size":4721,"mtime":1628593399654,"results":"167","hashOfConfig":"111"},{"size":714,"mtime":1628577673378,"results":"168","hashOfConfig":"111"},{"size":881,"mtime":1628577672587,"results":"169","hashOfConfig":"111"},{"size":721,"mtime":1626584558878,"results":"170","hashOfConfig":"111"},{"size":1107,"mtime":1628710101727,"results":"171","hashOfConfig":"111"},{"size":1174,"mtime":1628742737789,"results":"172","hashOfConfig":"111"},{"size":484,"mtime":1626584910425,"results":"173","hashOfConfig":"111"},{"size":4886,"mtime":1626935419290,"results":"174","hashOfConfig":"111"},{"size":3666,"mtime":1628577666779,"results":"175","hashOfConfig":"111"},{"size":3520,"mtime":1628263362812,"results":"176","hashOfConfig":"111"},{"size":6703,"mtime":1626451200167,"results":"177","hashOfConfig":"111"},{"size":9566,"mtime":1628796382949,"results":"178","hashOfConfig":"111"},{"size":8571,"mtime":1629133881896,"results":"179","hashOfConfig":"111"},{"size":2714,"mtime":1629099781755,"results":"180","hashOfConfig":"111"},{"size":665,"mtime":1628777388460,"results":"181","hashOfConfig":"111"},{"size":2214,"mtime":1629099864072,"results":"182","hashOfConfig":"111"},{"size":1495,"mtime":1628777390645,"results":"183","hashOfConfig":"111"},{"size":594,"mtime":1628777390279,"results":"184","hashOfConfig":"111"},{"size":616,"mtime":1628777388460,"results":"185","hashOfConfig":"111"},{"size":1166,"mtime":1623403117368,"results":"186","hashOfConfig":"111"},{"size":5239,"mtime":1628789443370,"results":"187","hashOfConfig":"111"},{"size":5255,"mtime":1629133006606,"results":"188","hashOfConfig":"111"},{"size":5383,"mtime":1628791594637,"results":"189","hashOfConfig":"111"},{"size":8671,"mtime":1628260045019,"results":"190","hashOfConfig":"111"},{"size":1636,"mtime":1628793437249,"results":"191","hashOfConfig":"111"},{"size":6388,"mtime":1628404431820,"results":"192","hashOfConfig":"111"},{"size":10280,"mtime":1628404877691,"results":"193","hashOfConfig":"111"},{"size":5705,"mtime":1628699594726,"results":"194","hashOfConfig":"111"},{"size":2420,"mtime":1628868452462,"results":"195","hashOfConfig":"111"},{"size":64,"mtime":1628404368032,"results":"196","hashOfConfig":"111"},{"size":1678,"mtime":1628918045130,"results":"197","hashOfConfig":"111"},{"size":5595,"mtime":1628595342177,"results":"198","hashOfConfig":"111"},{"size":2780,"mtime":1629060635434,"results":"199","hashOfConfig":"111"},{"size":2273,"mtime":1629060636163,"results":"200","hashOfConfig":"111"},{"size":2474,"mtime":1629060635976,"results":"201","hashOfConfig":"111"},{"size":695,"mtime":1628777390353,"results":"202","hashOfConfig":"111"},{"size":655,"mtime":1628777390278,"results":"203","hashOfConfig":"111"},{"size":3031,"mtime":1628747360604,"results":"204","hashOfConfig":"111"},{"size":307,"mtime":1628323877068,"results":"205","hashOfConfig":"111"},{"size":2697,"mtime":1628592157591,"results":"206","hashOfConfig":"111"},{"size":1431,"mtime":1628603372487,"results":"207","hashOfConfig":"111"},{"size":3683,"mtime":1628920293184,"results":"208","hashOfConfig":"111"},{"size":924,"mtime":1629027820139,"results":"209","hashOfConfig":"111"},{"size":300,"mtime":1628746428431,"results":"210","hashOfConfig":"111"},{"size":4216,"mtime":1629035341672,"results":"211","hashOfConfig":"111"},{"size":1185,"mtime":1629081387689,"results":"212","hashOfConfig":"111"},{"size":659,"mtime":1629090769549,"results":"213","hashOfConfig":"111"},{"size":3944,"mtime":1629100287436,"results":"214","hashOfConfig":"111"},{"size":2471,"mtime":1629095085770,"results":"215","hashOfConfig":"111"},{"size":1815,"mtime":1629095061371,"results":"216","hashOfConfig":"111"},{"size":1864,"mtime":1629095028269,"results":"217","hashOfConfig":"111"},{"size":2828,"mtime":1629096699655,"results":"218","hashOfConfig":"111"},{"size":3539,"mtime":1629102081438,"results":"219","hashOfConfig":"111"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},"1broz17",{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"222"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"228"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"228"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"228"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"228"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"228"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"228"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"228"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"222"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"222"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"228"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"228"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"228"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"228"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"228"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"228"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"228"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"228"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"222"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"228"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"228"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"228"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"228"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"327","usedDeprecatedRules":"228"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"228"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"228"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"228"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"228"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"228"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"356","usedDeprecatedRules":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"228"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"228"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"228"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"228"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"228"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"228"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"222"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"222"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"228"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"228"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"408","usedDeprecatedRules":"222"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"228"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"222"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"222"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"228"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"228"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"228"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"228"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"228"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"228"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"228"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"451","usedDeprecatedRules":"228"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"228"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"222"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"222"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"222"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"228"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"228"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"228"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"489","usedDeprecatedRules":"228"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"492","usedDeprecatedRules":"228"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"228"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"228"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"228"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"228"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"228"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"228"},"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js",[],["511","512"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx",["513","514"],"import { CourseView } from \"components/course/courseView/CoursePage\";\r\nimport CreateCourse from \"components/course/createCourse/CreateCoursePage\";\r\nimport { Home } from \"components/Home\";\r\nimport Profile from \"components/person/Profile\";\r\nimport ProfileDetails from \"components/person/ProfileDetails\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport React from \"react\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport AdminDashboard from \"components/AdminPanel/AdminDashboard\";\r\nimport Dashboard from \"components/person/dashboard/Dashboard\";\r\nimport MyCourse from \"components/person/MyCourse\";\r\nimport Search from \"components/search/SearchPage\";\r\nimport Auth from \"layout/Auth\";\r\n\r\n// export const RouteAddress = {\r\n//   home: { route: \"/home\", child: [] },\r\n//   search: { route: \"/search\", child: [] },\r\n//   admin: {\r\n//     route: \"/admin\",\r\n//     child: [\r\n//       { country: { route: \"/country\" }, child: [] },\r\n//       { language: { route: \"/language\" }, child: [] },\r\n//     ],\r\n//   },\r\n//   search: \"/search\",\r\n//   admin: \"/admin\",\r\n// };\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/profile/:username\" component={Profile} />\r\n        <Route path=\"/profile-details\" component={ProfileDetails} />\r\n        <Route path=\"/create-course\" exact component={CreateCourse} />\r\n        <Route path=\"/create-course/:courseId\" component={CreateCourse} />\r\n        <Route path=\"/course/:courseId\" component={CourseView} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/my-course\" component={MyCourse} />\r\n        <Route path=\"/admin\" component={AdminDashboard} />\r\n\r\n        <Route path=\"/file-upload\" component={FileUploader} />\r\n        <Route path=\"/test\" component={Auth} />\r\n        <Redirect from=\"/\" to=\"/test\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["515","516"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js",["517"],"import { createTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const theme = createTheme({\r\n  typography: {\r\n    subtitle2: {\r\n      fontSize: 13\r\n    }\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 767,\r\n      md: 991,\r\n      lg: 1199,\r\n      xl: 1439\r\n    }\r\n  },\r\n\r\n  // overrides: {\r\n  //   MuiCssBaseline: {\r\n  //     '@global': {\r\n  //       '@font-face': [raleway],\r\n  //     },\r\n  //   },\r\n  // },\r\n});\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    type: \"light\"\r\n  },\r\n});\r\nObject.assign(lightTheme, {\r\n  overrides: {\r\n    ...lightTheme.overrides,\r\n    MUIRichTextEditor: {\r\n      placeHolder: {\r\n        position: 'relative'\r\n      },\r\n      // root: {\r\n      //   minHeight: 200\r\n      // },\r\n    },\r\n    MuiDropzoneArea: {\r\n      root: {\r\n        minHeight: \"100%\"\r\n      },\r\n    },\r\n    MuiDropzonePreviewList: {\r\n      root: {\r\n        justifyContent: \"space-around\",\r\n      },\r\n      imageContainer: {\r\n        flexBasis: \"100%\",\r\n        maxWidth: \"90%\",\r\n      },\r\n      image: {\r\n        height: -1\r\n      },\r\n      removeButton: {\r\n        top: 0,\r\n        right: 0,\r\n      },\r\n    },\r\n    MuiDropzoneArea: {\r\n      root: {\r\n        minHeight: 0,\r\n      },\r\n      text: {\r\n        textAlign: \"center\"\r\n      }\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        textAlign: \"justify\",\r\n      }\r\n    },\r\n    PrivateTabIndicator: {\r\n      root: {\r\n        height: 6\r\n      },\r\n      vertical: {\r\n        width: 6\r\n      }\r\n    },\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        margin: 'auto',\r\n        marginRight: 0,\r\n      }\r\n    }\r\n    // spacing: {\r\n    //   '&:hover': {\r\n    //   },\r\n    // }\r\n  }\r\n})\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  tiny: {\r\n    fontSize: \"8px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  small: {\r\n    fontSize: \"12px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  medium: {\r\n    fontSize: \"16px\",\r\n    fontFamily: \"inherit\",\r\n    lineHeight: \"1.1rem\"\r\n  },\r\n  big: {\r\n    fontSize: \"20px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  huge: {\r\n    fontSize: \"24px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  bold: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"inherit\",\r\n  }\r\n}))","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx",["518","519","520","521","522","523","524","525"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx",["526","527","528","529","530","531"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DoneAll, LabelImportant } from \"@material-ui/icons\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { Course, Property, PublicResponse, Week } from \"classes/Course\";\r\nimport {\r\n  CheckoutDialog,\r\n  CongratulationDialog,\r\n} from \"components/course/courseView/Checkout\";\r\nimport { FAQSection } from \"components/course/courseView/FAQ\";\r\nimport InstructorShortDetailsBox from \"components/course/courseView/InstructorShortDetails\";\r\nimport RatingSection from \"components/course/courseView/Rating\";\r\nimport { ReviewSection } from \"components/course/courseView/Review\";\r\nimport { Curriculum } from \"components/course/createCourse/Curriculum/Curriculum\";\r\nimport TeacherService from \"components/person/api/TeacherService\";\r\nimport { format } from \"date-fns\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IconPickerItem } from \"react-fa-icon-picker\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport CourseService from \"../api/CourseService\";\r\nimport { TeacherMiniInfo } from \"./../../../classes/Person\";\r\n\r\nexport const lorem =\r\n  \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aliquid magni adipisci, a quibusdam deserunt cupiditate. Reprehenderit, molestiae quas minima corporis non nulla perspiciatis esse nostrum in harum eveniet. Repellendus, animi!\";\r\nlet course = new Course();\r\ncourse = {\r\n  ...course,\r\n  title:\r\n    'Course title Lorem ipsum dolor sit amet consectetur adipisicing \"Lorem ipsum dolor sit amet consectetur adipisicing ',\r\n  subTitle: \"Sub\",\r\n  description:\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet perspiciatis earum quidem. Numquam, quasi obcaecati similique, architecto dolore laboriosam consectetur sed aliquam nemo, inventore illo! Temporibus vitae harum quaerat earum.\",\r\n  mainPrice: 1200,\r\n  off: 30,\r\n  outcomes: [\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n  ],\r\n  prerequisites: [\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n    lorem,\r\n  ],\r\n  properties: [\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n    new Property(\"Lorem ipsum dolor sit ok boss khela hobe amet\"),\r\n  ],\r\n  weeks: [new Week(), new Week(), new Week()],\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  MuiListItemRoot: {\r\n    alignItems: \"flex-start\",\r\n  },\r\n  MuiListItemGutters: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  MuiListItemAvatarRoot: {\r\n    minWidth: 30,\r\n  },\r\n  MuiSvgIconRoot: {\r\n    fontSize: \"1.2rem\",\r\n    marginTop: 3,\r\n  },\r\n}));\r\n\r\nexport function CourseView() {\r\n  const { courseId } = useParams();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [checkoutShow, setCheckoutShow] = useState(false);\r\n  const [congratulationShow, setCongratulationShow] = useState(false);\r\n  const [course, setCourse] = useState<Course>(new Course());\r\n  const [teacherInfo, setTeacherInfo] = useState<TeacherMiniInfo>();\r\n  const [publicResponse, setPublicResponse] = useState<PublicResponse>();\r\n  const [isBought, setIsBought] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      loadCourseContent();\r\n    }\r\n  }, []);\r\n\r\n  function handleCongratulationClose() {\r\n    setCongratulationShow(false);\r\n    // history.push(`/course/${courseId}`);\r\n  }\r\n\r\n  function handleOnPurchase() {\r\n    CourseService.purchase(courseId).then((response) => {\r\n      if (response.status == 200) {\r\n        loadCourseContent();\r\n        setCheckoutShow(false);\r\n        setCongratulationShow(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function loadCourseContent() {\r\n    await CourseService.getCourseToShow(courseId).then((response) => {\r\n      console.log(\"Course fetched\", response.data);\r\n      setCourse(response.data);\r\n      handleReloadPublicResponse(response.data.teacherUsername);\r\n    });\r\n    await CourseService.isBought(courseId).then((response) => {\r\n      console.log(\"course bought\", response.data);\r\n      setIsBought(response.data);\r\n    });\r\n  }\r\n\r\n  async function handleReloadPublicResponse(teacherUsername: string) {\r\n    await TeacherService.getMiniInfo(teacherUsername).then((response) => {\r\n      console.log(\"Teacher mini info loaded\", response.data);\r\n      setTeacherInfo(response.data);\r\n    });\r\n    await CourseService.courseRatingReview(courseId).then((response) => {\r\n      console.log(\"Course additional property fetched\", response.data);\r\n      setPublicResponse(response.data);\r\n    });\r\n  }\r\n\r\n  function Price() {\r\n    return (\r\n      <>\r\n        <Grid item>\r\n          <Typography variant=\"h5\">\r\n            ৳\r\n            {course?.mainPrice\r\n              ? course?.mainPrice - (course?.mainPrice * course?.off) / 100\r\n              : \"\"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography\r\n            variant=\"body2\"\r\n            style={{ textDecoration: \"line-through\" }}\r\n          >\r\n            ৳{course?.mainPrice}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body1\">{course?.off}% off</Typography>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function TitleSection() {\r\n    let date = new Date(course?.publishDate);\r\n    let formattedDate = \"\";\r\n    if (course.publishDate)\r\n      formattedDate = format(date as Date, \"hh:mm a - dd MMMM, yyyy\");\r\n    return (\r\n      <>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">{course?.title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">{course?.subTitle}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Rating\r\n              value={publicResponse?.ratingValue}\r\n              readOnly\r\n              name=\"rating\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>\r\n              ({publicResponse?.ratingCount} rating\r\n              {publicResponse?.ratingCount && publicResponse?.ratingCount > 1\r\n                ? \"s\"\r\n                : \"\"}\r\n              )\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {publicResponse?.enrolledStudentCount} student enrolled\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>Created by {course?.teacherName}</Grid>\r\n        <Grid item container direction=\"row\">\r\n          <Grid item>Published date: {formattedDate}</Grid>\r\n          <Grid item container direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Grid item>\r\n              <Typography>Languages:</Typography>\r\n            </Grid>\r\n            {course?.languages.map((lang) => (\r\n              <Grid item key={lang.id}>\r\n                <Chip variant=\"outlined\" color=\"primary\" label={lang.name} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function CourseProperties() {\r\n    return (\r\n      <Grid item container direction=\"column\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\">This course includes:</Typography>\r\n        </Grid>\r\n        <List dense={true}>\r\n          {course?.properties.map((item, index) => (\r\n            <ListItem\r\n              key={item.id ? item.id : index}\r\n              classes={{\r\n                root: classes.MuiListItemRoot,\r\n                gutters: classes.MuiListItemGutters,\r\n              }}\r\n            >\r\n              <ListItemAvatar classes={{ root: classes.MuiListItemAvatarRoot }}>\r\n                <IconPickerItem\r\n                  // classes={{ root: classes.MuiSvgIconRoot }}\r\n                  //@ts-ignore\r\n                  icon={item.icon.content}\r\n                  containerStyles={{ fontSize: \"15px\" }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText>{item.text}</ListItemText>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function PCHeader() {\r\n    return (\r\n      <Card\r\n        style={{\r\n          backgroundColor: \"cyan\",\r\n          position: \"relative\",\r\n          overflow: \"inherit\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Grid container direction=\"row\">\r\n            <Grid item container md={8} xs={12} direction=\"column\">\r\n              <TitleSection />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xs={12}\r\n              style={{\r\n                width: \"100%\",\r\n                position: \"absolute\",\r\n                right: 16,\r\n              }}\r\n            >\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Card style={{ ...style, zIndex: 999, marginLeft: 16 }}>\r\n                    <CardContent>\r\n                      <img src={course?.cover?.content} />\r\n                      {!isBought && (\r\n                        <>\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"center\"\r\n                            spacing={1}\r\n                          >\r\n                            <Price />\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <div onClick={() => setCheckoutShow(true)}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ width: \"100%\" }}\r\n                              >\r\n                                Buy now\r\n                              </Button>\r\n                            </div>\r\n                            <CheckoutDialog\r\n                              open={checkoutShow}\r\n                              course={course}\r\n                              onClose={() => setCheckoutShow(false)}\r\n                              onPurchase={handleOnPurchase}\r\n                            />\r\n                            <CongratulationDialog\r\n                              open={congratulationShow}\r\n                              course={course}\r\n                              onClose={handleCongratulationClose}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      )}\r\n                      <CourseProperties />\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function MobileHeader() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" spacing={1}>\r\n            <Grid item>\r\n              <img src={course?.cover?.content} />\r\n            </Grid>\r\n            <Grid item>\r\n              <TitleSection />\r\n            </Grid>\r\n            <Grid item>\r\n              <CourseProperties />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              style={{\r\n                zIndex: 999,\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                left: 0,\r\n                backgroundColor: \"pink\",\r\n              }}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Price />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div onClick={() => setCheckoutShow(true)}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    Buy now\r\n                  </Button>\r\n                </div>\r\n                <CheckoutDialog\r\n                  open={checkoutShow}\r\n                  course={course}\r\n                  onClose={() => setCheckoutShow(false)}\r\n                  onPurchase={handleOnPurchase}\r\n                />\r\n                <CongratulationDialog\r\n                  open={congratulationShow}\r\n                  course={course}\r\n                  onClose={handleCongratulationClose}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function Info() {\r\n    return (\r\n      <>\r\n        <Grid item container>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <CardContent>\r\n              <Grid container direction=\"column\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\">What you'll learn</Typography>\r\n                </Grid>\r\n                <List dense={false}>\r\n                  {course?.outcomes.map((item, index) => (\r\n                    <ListItem\r\n                      key={index}\r\n                      classes={{\r\n                        root: classes.MuiListItemRoot,\r\n                        gutters: classes.MuiListItemGutters,\r\n                      }}\r\n                    >\r\n                      <ListItemAvatar\r\n                        classes={{ root: classes.MuiListItemAvatarRoot }}\r\n                      >\r\n                        <DoneAll classes={{ root: classes.MuiSvgIconRoot }} />\r\n                      </ListItemAvatar>\r\n                      <ListItemText>{item}</ListItemText>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item container>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Requirements</Typography>\r\n              <List dense={false}>\r\n                {course?.prerequisites.map((item, index) => (\r\n                  <ListItem\r\n                    key={index}\r\n                    classes={{\r\n                      root: classes.MuiListItemRoot,\r\n                      gutters: classes.MuiListItemGutters,\r\n                    }}\r\n                  >\r\n                    <ListItemAvatar\r\n                      classes={{ root: classes.MuiListItemAvatarRoot }}\r\n                    >\r\n                      <LabelImportant\r\n                        classes={{ root: classes.MuiSvgIconRoot }}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>{item}</ListItemText>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item container>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Description</Typography>\r\n              <Typography>{course?.description}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n  function Content() {\r\n    return (\r\n      <Card style={{ width: \"100%\" }}>\r\n        <CardContent>\r\n          <Grid container direction=\"column\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Course content</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Curriculum course={course} onCourseAttrChange={(course) => {}} />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function InstructorDetails() {\r\n    return <InstructorShortDetailsBox details={teacherInfo} />;\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n              <PCHeader />\r\n            </Responsive>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            // style={{ padding: 10 }}\r\n            spacing={2}\r\n            xs\r\n            md={8}\r\n          >\r\n            <Grid item>\r\n              <Responsive displayIn={[\"Mobile\"]}>\r\n                <MobileHeader />\r\n              </Responsive>\r\n            </Grid>\r\n            <Info />\r\n            <Grid item container>\r\n              <Content />\r\n            </Grid>\r\n            <Grid item container>\r\n              <InstructorDetails />\r\n            </Grid>\r\n            <Grid item container>\r\n              <RatingSection\r\n                courseId={courseId}\r\n                data={publicResponse}\r\n                onRatingSubmit={() =>\r\n                  handleReloadPublicResponse(course?.teacherUsername)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item container>\r\n              <ReviewSection\r\n                courseId={courseId}\r\n                reviews={\r\n                  publicResponse?.reviews\r\n                    ? publicResponse?.reviews[0].reviewInfos\r\n                    : undefined\r\n                }\r\n                onReviewSubmit={() =>\r\n                  handleReloadPublicResponse(course?.teacherUsername)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item container>\r\n              <FAQSection\r\n                courseId={courseId}\r\n                faqs={\r\n                  publicResponse?.faqs\r\n                    ? publicResponse?.faqs[0].faqInfos\r\n                    : undefined\r\n                }\r\n                onSubmit={() => {\r\n                  handleReloadPublicResponse(course?.teacherUsername);\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx",["532"],"import { Grid } from \"@material-ui/core\";\r\nimport { categoryList, CategoryTreeNode } from \"classes/Category\";\r\nimport Filter from \"components/search/Filter\";\r\nimport { FilterChips } from \"components/search/filter/Chips\";\r\nimport Sort from \"components/search/Sort\";\r\nimport User from \"layout/User\";\r\nimport React, { useState } from \"react\";\r\nimport { StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\n\r\nexport interface IFilter {\r\n  type: \"LIST\" | \"CATEGORY\" | \"SLIDER\";\r\n  title: string;\r\n}\r\nexport interface IListFilter extends IFilter {\r\n  items: Array<{ title: string; id: number }>;\r\n}\r\nexport interface ICategoryFilter extends IFilter {\r\n  items: Array<CategoryTreeNode>;\r\n}\r\nexport interface ISliderFilter extends IFilter {\r\n  min: number;\r\n  max: number;\r\n  value: Array<number>;\r\n  step: number;\r\n  valueType: string;\r\n}\r\nexport type IFilterType = IListFilter | ISliderFilter | ICategoryFilter;\r\nexport interface IFilteredValue {\r\n  type: \"LIST\" | \"SLIDER\" | \"CATEGORY\";\r\n  title: string;\r\n  value: string | Array<number>;\r\n  id?: number;\r\n  valueType?: string;\r\n}\r\nvar id = 1;\r\nexport const filterObjectList: Array<IFilterType> = [\r\n  {\r\n    title: \"Teacher\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Abrar Fahad\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Mahdi BUET 3\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Md. Mehedi Hasan\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Kazi Wasif Amin Shammya\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    type: \"CATEGORY\",\r\n    items: categoryList,\r\n  },\r\n  {\r\n    title: \"Language\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Arabic\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"English\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Bangla\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Hindi\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Persian\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Rating\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 5,\r\n    value: [0, 5],\r\n    step: 0.01,\r\n    valueType: \"⭐\",\r\n  },\r\n  {\r\n    title: \"Price\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 10000,\r\n    value: [0, 10000],\r\n    step: 10,\r\n    valueType: \"$\",\r\n  },\r\n];\r\n\r\nconst Search = () => {\r\n  // const [filterData, setFilterData] = useState(\r\n  //   JSON.parse(JSON.stringify(filterObjectList))\r\n  // );\r\n  const [filteredData, setFilteredData] = useState<Array<IFilteredValue>>([]);\r\n  function onObjectsChange(value: IFilteredValue, type: \"ADD\" | \"REMOVE\") {\r\n    let array;\r\n    if (type === \"ADD\") {\r\n      let idx = filteredData.findIndex((item) => item.title === value.title);\r\n      if (value.type === \"SLIDER\" && idx != -1) {\r\n        array = [...filteredData];\r\n        array[idx] = value;\r\n      } else {\r\n        array = [...filteredData, value];\r\n      }\r\n    } else if (type === \"REMOVE\") {\r\n      let idx;\r\n      if (value.type === \"SLIDER\") {\r\n        idx = filteredData.findIndex(\r\n          (item) => item.type === value.type && item.id === value.id\r\n        );\r\n      } else {\r\n        idx = filteredData.findIndex((item) => item.type === value.type);\r\n      }\r\n      array = [...filteredData];\r\n      array.splice(idx, 1);\r\n    }\r\n    setFilteredData(array);\r\n  }\r\n  function clearAll() {\r\n    setFilteredData([]);\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Grid container>\r\n          <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n            <Grid item sm={3}>\r\n              <Grid container direction=\"column\">\r\n                <Sort />\r\n                <FilterChips\r\n                  filteredData={filteredData}\r\n                  onDelete={onObjectsChange}\r\n                />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Responsive>\r\n          <Responsive displayIn={[\"Mobile\"]}>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Sort />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n              <FilterChips\r\n                filteredData={filteredData}\r\n                onDelete={onObjectsChange}\r\n              />\r\n            </Grid>\r\n          </Responsive>\r\n          <Grid item sm={9} xs={12}>\r\n            {/* <CoursePagination courses={courses} title=\"Search Page\" /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx",["533","534"],"import { MiniCourse } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentService from \"./api/StudentService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nfunction MyCourse() {\r\n  const [courses, setCourses] = useState<MiniCourse>();\r\n  const [title, setTitle] = useState(\"\");\r\n  useEffect(() => {\r\n    if (AuthService.getCurrentAccountType() == \"Student\") {\r\n      StudentService.getPurchaseCourse().then((response) => {\r\n        console.log(\"Purchased course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"Purchased Courses\");\r\n      });\r\n    } else if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n      TeacherService.getCreateCourse().then((response) => {\r\n        console.log(\"Created course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"My Courses\");\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <User>\r\n      <CoursePagination courses={courses} title={title} />\r\n    </User>\r\n  );\r\n}\r\n\r\nexport default MyCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx",["535","536"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"components/ImageCarousel\";\r\nimport User from \"layout/User\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CourseCarousel } from \"./course/CourseCarousel\";\r\n\r\nconst courses = [\r\n  {\r\n    title: \"Free courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homeContainer: {\r\n    padding: theme.spacing(0, 4),\r\n  },\r\n}));\r\n\r\nexport const Home = (props) => {\r\n  let match = useRouteMatch();\r\n  const history = useHistory();\r\n  console.log(props.location.state);\r\n  const classes = useStyles();\r\n  return (\r\n    <User>\r\n      <Grid container className={classes.homeContainer} direction=\"column\">\r\n        <Grid item>\r\n          <ImageSlider />\r\n        </Grid>\r\n        <Grid item>\r\n          {courses.map((courses) => (\r\n            <CourseCarousel title={courses.title} courses={courses.courses} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx",["537","538"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { LinkedIn, WorkOutlined } from \"@material-ui/icons\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { MiniCourse } from \"classes/Course\";\r\nimport { Person, Student, Teacher } from \"classes/Person\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TeacherMiniInfo } from \"./../../classes/Person\";\r\nimport PersonService from \"./api/PersonService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"2.5rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  general: [\r\n    {\r\n      type: \"Name\",\r\n      value: \"Md. Mehedi Hasan\",\r\n    },\r\n    {\r\n      type: \"Institution\",\r\n      value: \"Bangladesh University of Engineering and Technology\",\r\n    },\r\n    {\r\n      type: \"About\",\r\n      value:\r\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam?\",\r\n    },\r\n  ],\r\n  socialMediaData: [\r\n    {\r\n      type: \"Email\",\r\n      link: \"66.mehedi@gmail.com\",\r\n      icon: \"<EmailIcon/>\",\r\n    },\r\n    {\r\n      type: \"Facebook\",\r\n      link: \"66.mehedi\",\r\n      icon: \"FacebookIcon\",\r\n    },\r\n    {\r\n      type: \"YouTube\",\r\n      link: \"66.mehedi\",\r\n      icon: \"YoutubeIcon\",\r\n    },\r\n    {\r\n      type: \"Twitter\",\r\n      link: \"66.mehedi\",\r\n      icon: \"TwitterIcon\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const { username } = useParams();\r\n  const [person, setPerson] = useState<Student | Teacher | Person>();\r\n  const [courses, setCourses] = useState<Array<MiniCourse>>();\r\n  const [miniInfo, setMiniInfo] = useState<TeacherMiniInfo>();\r\n\r\n  useEffect(() => {\r\n    PersonService.getPersonToShow(username).then((response) => {\r\n      console.log(\"Fetched person\", response.data);\r\n      setPerson(response.data);\r\n    });\r\n    TeacherService.getCreateCourseByUsername(username).then((response) => {\r\n      console.log(\"Fetched created course list\", response.data);\r\n      setCourses(response.data);\r\n    });\r\n    TeacherService.getMiniInfo(username).then((response) => {\r\n      console.log(\"Teacher mini info \", response.data);\r\n      setMiniInfo(response.data);\r\n    });\r\n  }, []);\r\n  function LeftComponent() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" spacing={3}>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Avatar className={classes.avatar} src={person?.photo?.content} />\r\n            </Grid>\r\n            <Grid item container>\r\n              <Details />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function RightComponent() {\r\n    return (\r\n      <Grid container direction=\"column\" spacing={2}>\r\n        <Grid item container justifyContent=\"space-around\" spacing={2}>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.courseCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Course\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.studentCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Students\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.reviewCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Review\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.ratingCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                <Rating value={miniInfo?.rating} precision={0.1} readOnly />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container>\r\n          <CoursePagination courses={courses} title=\"Courses\" />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  // const SocialMedia = () => {\r\n  //   return (\r\n  //     <Grid item container direction=\"row\" justifyContent=\"space-around\">\r\n  //       {data.socialMediaData.map((item) => (\r\n  //         <Link href=\"#\">\r\n  //           <IconButton>\r\n  //             <Icon iconName={item.type} />\r\n  //           </IconButton>\r\n  //         </Link>\r\n  //       ))}\r\n  //     </Grid>\r\n  //   );\r\n  // };\r\n\r\n  // function Icon({ iconName }) {\r\n  //   if (iconName === \"Email\") return <EmailIcon />;\r\n  //   else if (iconName === \"Facebook\") return <FacebookIcon />;\r\n  //   else if (iconName === \"Twitter\") return <TwitterIcon />;\r\n  //   else if (iconName === \"YouTube\") return <YouTubeIcon />;\r\n  //   return null;\r\n  // }\r\n  function Details() {\r\n    function CreateItem({ attribute, value = \"\", children = <></> }) {\r\n      return (\r\n        <Grid item container direction=\"column\" alignItems=\"flex-start\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\">{attribute}</Typography>\r\n          </Grid>\r\n          <Grid item container>\r\n            {value && <Typography variant=\"body1\">{value}</Typography>}\r\n            {children}\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    function ContactChip({ url, icon, text }) {\r\n      return (\r\n        <Chip\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          clickable\r\n          icon={icon}\r\n          label={text}\r\n          onClick={(event) => window.open(url, \"_blank\")}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid item container direction=\"column\" spacing={2}>\r\n        <CreateItem\r\n          attribute=\"Name\"\r\n          value={person?.firstName + \" \" + person?.lastName}\r\n        />\r\n        <CreateItem attribute=\"Country\" value={person?.country?.name} />\r\n        {/* <CreateItem attribute=\"Designation\" value={person?.designation?.name} /> */}\r\n        <CreateItem attribute=\"Languages\">\r\n          <Grid container spacing={1}>\r\n            {person?.languages?.map((lang) => (\r\n              <Grid item key={lang.id}>\r\n                <Chip variant=\"outlined\" color=\"primary\" label={lang?.name} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CreateItem>\r\n        <CreateItem attribute=\"Institution\" value={person?.institution} />\r\n        <CreateItem attribute=\"About\" value={person?.about} />\r\n        <CreateItem attribute=\"Contact\">\r\n          <Grid container direction=\"column\" spacing={1}>\r\n            <Grid item container>\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Send Message\r\n              </Button>\r\n            </Grid>\r\n            {person?.fbURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.fb.com/\" + person?.fbURL}\r\n                  icon={<FacebookIcon />}\r\n                  text={`/${person?.fbURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.youtubeURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.youtube.com/channel/\" + person?.fbURL}\r\n                  icon={<YouTubeIcon />}\r\n                  text={`/${person?.youtubeURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.linkedInURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.linkedin.com/\" + person?.fbURL}\r\n                  icon={<LinkedIn />}\r\n                  text={`/${person?.linkedInURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.website && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={person?.website}\r\n                  icon={<WorkOutlined />}\r\n                  text={person?.website}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </CreateItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <Grid container>\r\n        <Grid container direction=\"row\" alignItems=\"flex-start\">\r\n          <Grid item sm={4} lg={3}>\r\n            <LeftComponent />\r\n          </Grid>\r\n          <Grid item sm={8} lg={9} style={{ paddingLeft: 16 }}>\r\n            <RightComponent />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx",["539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport axios from \"axios\";\r\nimport { CreditCard, Designation, EduStatus, Person } from \"classes/Person\";\r\nimport CountryService from \"components/AdminPanel/api/CountryService\";\r\nimport DesignationService from \"components/AdminPanel/api/DesignationService\";\r\nimport EduStatusService from \"components/AdminPanel/api/EduStatusService\";\r\nimport AuthService, { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport User from \"layout/User\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { ImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\nimport { ErrorMessage } from \"tools/Tools\";\r\nimport { Country } from \"./../../classes/Country\";\r\nimport PersonService from \"./api/PersonService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    padding: \"30px 0px\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n// const countryItem: Array<Country> = [\r\n//   { id: 1, name: \"Bangladesh\", adminId: \"Mehedi\" },\r\n//   { id: 2, name: \"India\", adminId: \"Mehedi\" },\r\n//   { id: 3, name: \"Palestain\", adminId: \"Mehedi\" },\r\n//   { id: 4, name: \"Egypt\", adminId: \"Mehedi\" },\r\n//   { id: 5, name: \"Iran\", adminId: \"Mehedi\" },\r\n// ];\r\n// const designations: Array<Designation> = [\r\n//   { id: 1, type: \"Professor\", adminId: \"Mehedi\" },\r\n//   { id: 2, type: \"Freelencer\", adminId: \"Mehedi\" },\r\n// ];\r\n// const eduStatuses: Array<EduStatus> = [\r\n//   { id: 1, type: \"HSC\", adminId: \"Mehedi\" },\r\n//   { id: 2, type: \"SSC\", adminId: \"Mehedi\" },\r\n//   { id: 3, type: \"BA\", adminId: \"Mehedi\" },\r\n//   { id: 4, type: \"BSc\", adminId: \"Mehedi\" },\r\n//   { id: 5, type: \"MA\", adminId: \"Mehedi\" },\r\n//   { id: 6, type: \"MSc\", adminId: \"Mehedi\" },\r\n// ];\r\n\r\nconst ProfileDetails = (props) => {\r\n  const history = useHistory();\r\n  const [person, setPerson] = useState<Person>(props.location.state.person);\r\n  // let person: Person;\r\n\r\n  const [error, setError] = useState(false);\r\n  const [dob, setDob] = React.useState<Date | null>(null);\r\n  const [countryItem, setCountryItem] = useState<Array<Country>>([]);\r\n  const [statusItem, setStatusItem] = useState<\r\n    Array<Designation> | Array<EduStatus>\r\n  >([]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [countryId, setCountryId] = React.useState<number | undefined>();\r\n  const [statusId, setStatusId] = React.useState<number | undefined>();\r\n  const [cardExpireDate, setCardExpireDate] = React.useState<Date | null>(null);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [againNewPassword, setAgainNewPassword] = useState(\"\");\r\n  // const [files, setFiles] = useState<FileObject[]>([]);\r\n  const [tempFiles, setTempFiles] = useState<FileObject[]>([]);\r\n\r\n  // Snackbar control\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  // function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n  //   if (reason === \"clickaway\") {\r\n  //     return;\r\n  //   }\r\n  //   setOpen(false);\r\n  // }\r\n  // Initialize  - start\r\n\r\n  useEffect(() => {\r\n    console.log(\"heheh\");\r\n    if (props.location.state) {\r\n      setPerson(props.location.state.person);\r\n    } else if (AuthService.getCurrentAccountType() != \"\") {\r\n      if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n        axios\r\n          .get(GLOBAL.HOST + \"/get-teacher-self\", authHeaders())\r\n          .then((response) => {\r\n            console.log(\"Person data from header\", response);\r\n            // history.goBack();\r\n            history.push({\r\n              pathname: \"/profile-details\",\r\n              state: {\r\n                person: response.data,\r\n                registered: true,\r\n              },\r\n            });\r\n          });\r\n      } else if (AuthService.getCurrentAccountType() == \"Student\") {\r\n        axios\r\n          .get(GLOBAL.HOST + \"/get-student-self\", authHeaders())\r\n          .then((response) => {\r\n            console.log(\"Person data from header\", response);\r\n            // history.goBack();\r\n            history.push({\r\n              pathname: \"/profile-details\",\r\n              state: {\r\n                person: response.data,\r\n                registered: true,\r\n              },\r\n            });\r\n          });\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n    CountryService.getAllCountries().then((response) => {\r\n      setCountryItem(response.data);\r\n    });\r\n    if (person.accountType == \"Student\") {\r\n      EduStatusService.getAllEduStatus().then((response) => {\r\n        setStatusItem(response.data);\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      DesignationService.getAllDesignation().then((response) => {\r\n        setStatusItem(response.data);\r\n      });\r\n    }\r\n    // console.log(JSON.parse(JSON.stringify(person.country)));\r\n    if (props.location.state.registered) {\r\n      if (person.country) {\r\n        setCountryId(person.country.id);\r\n      }\r\n      if (person.accountType == \"Teacher\") {\r\n        PersonService.getDesignation().then((response) => {\r\n          setStatusId(response.data.id);\r\n        });\r\n      } else if (person.accountType == \"Student\") {\r\n        PersonService.getEduStatus().then((response) => {\r\n          setStatusId(response.data.id);\r\n        });\r\n      }\r\n      if (person.dob) {\r\n        //@ts-ignore\r\n        setDob(person.dob);\r\n      }\r\n      if (person.card && person.card.expireDate) {\r\n        setCardExpireDate(person.card.expireDate);\r\n      }\r\n    }\r\n    // if (person.dob == undefined) {\r\n    //   person.dob = dob;\r\n    // }\r\n    return () => {\r\n      setOldPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setAgainNewPassword(\"\");\r\n    };\r\n  }, []);\r\n  // Initialize - end\r\n\r\n  function passwordInfoCheck(func) {\r\n    if (oldPassword && newPassword && againNewPassword) {\r\n      if (newPassword != againNewPassword) {\r\n        setErrorMessage(\"Password mismatch\");\r\n        setShowErrorMessage(true);\r\n      }\r\n      PersonService.changePassword(oldPassword, newPassword).then(\r\n        (response) => {\r\n          if (response.data.stringValue) {\r\n            setErrorMessage(response.data.stringValue);\r\n            setShowErrorMessage(true);\r\n          } else {\r\n            setSuccessMessage(\"Password change successfully\");\r\n            setShowSuccessMessage(true);\r\n            func();\r\n          }\r\n        }\r\n      );\r\n    } else if (!oldPassword && !newPassword && !againNewPassword) {\r\n      func();\r\n    } else {\r\n      setErrorMessage(\"Fill up password field properly\");\r\n      setShowErrorMessage(true);\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    if (person.accountType == \"Student\") {\r\n      // @ts-ignore\r\n      AuthService.registerStudent(person, statusId).then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        console.log(\"done\");\r\n        history.push(\"/home\");\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      // @ts-ignore\r\n      AuthService.registerTeacher(person, statusId).then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        console.log(\"done\");\r\n        history.push(\"/home\");\r\n      });\r\n    }\r\n  }\r\n\r\n  function update() {\r\n    if (person.accountType == \"Student\") {\r\n      // @ts-ignore\r\n      PersonService.updateStudent(person, statusId).then((response) => {\r\n        if (response.data.stringValue) {\r\n          setErrorMessage(response.data.stringValue);\r\n          setShowErrorMessage(true);\r\n        } else {\r\n          props.location.state.person = person;\r\n          setSuccessMessage(\"Successfully updated.\");\r\n          setShowSuccessMessage(true);\r\n        }\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      // @ts-ignore\r\n      PersonService.updateTeacher(person, statusId).then((response) => {\r\n        if (response.data.stringValue) {\r\n          setErrorMessage(response.data.stringValue);\r\n          setShowErrorMessage(true);\r\n        } else {\r\n          props.location.state.person = person;\r\n          setSuccessMessage(\"Successfully updated.\");\r\n          setShowSuccessMessage(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleSaveClicked(event) {\r\n    event.preventDefault();\r\n    if (person.card) {\r\n      if (\r\n        !person.card.cardNo ||\r\n        !person.card.expireDate ||\r\n        !person.card.nameOnCard\r\n      ) {\r\n        setErrorMessage(\"Please set all information of credit card properly\");\r\n        setShowErrorMessage(true);\r\n        return;\r\n      }\r\n    }\r\n    if (props.location.state.registered) {\r\n      passwordInfoCheck(() => {\r\n        console.log(\"Updated person \", person);\r\n        if (person.photo) {\r\n          person.photo.upload().then(update);\r\n        } else {\r\n          update();\r\n        }\r\n      });\r\n    } else {\r\n      console.log(person);\r\n      if (person.photo) {\r\n        person.photo.upload().then(register);\r\n      } else {\r\n        register();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    let country = countryItem.filter(\r\n      (item) => item.id == event.target.value\r\n    )[0];\r\n    person.country = country;\r\n    setCountryId(event.target.value);\r\n  };\r\n  const handleStatusChange = (event) => {\r\n    setStatusId(event.target.value);\r\n  };\r\n\r\n  // function handleProfilePicChange(event) {\r\n  //   event.preventDefault();\r\n  //   setFiles(event.target.files[0]);\r\n  //   person.photo = new Files(\"PICTURE\", \"Profile Picture\").setFile(\r\n  //     event.target.files[0]\r\n  //   );\r\n  // }\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  function PersonalDetails() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <ControlledTextfield\r\n          label=\"First Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.firstName}\r\n          onChange={(event) => {\r\n            person.firstName = event.target.value;\r\n            console.log(person);\r\n          }}\r\n          required\r\n          pattern=\"name\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"Last Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.lastName}\r\n          onChange={(event) => (person.lastName = event.target.value)}\r\n          required\r\n          pattern=\"name\"\r\n        />\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          required\r\n        >\r\n          <InputLabel>Country</InputLabel>\r\n          <Select\r\n            value={countryId}\r\n            onChange={handleCountryChange}\r\n            label=\"Country *\"\r\n          >\r\n            {countryItem.map((item) => (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          required\r\n        >\r\n          <InputLabel>\r\n            {person.accountType == \"Student\"\r\n              ? \"Educational Status\"\r\n              : \"Designation\"}\r\n          </InputLabel>\r\n          <Select\r\n            value={statusId}\r\n            onChange={handleStatusChange}\r\n            label={\r\n              person.accountType == \"Student\"\r\n                ? \"Educational Status *\"\r\n                : \"Designation *\"\r\n            }\r\n          >\r\n            {statusItem.map((item) => (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Date of Birth\"\r\n          inputVariant=\"outlined\"\r\n          value={dob}\r\n          margin=\"normal\"\r\n          onChange={(date) => {\r\n            setDob(date);\r\n            person.dob = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          required\r\n        />\r\n        <LanguageField\r\n          objects={person.languages}\r\n          onObjectsChange={(selected) => (person.languages = selected)}\r\n        />\r\n        <TextField\r\n          label=\"Institution\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.institution}\r\n          onChange={(event) => (person.institution = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Website\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.website}\r\n          onChange={(event) => (person.website = event.target.value)}\r\n          inputProps={{\r\n            type: \"url\",\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Facebook\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.facebook.com/\",\r\n          }}\r\n          defaultValue={person.fbURL}\r\n          onChange={(event) => (person.fbURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"YouTube\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.youtube.com/channel/\",\r\n          }}\r\n          defaultValue={person.youtubeURL}\r\n          onChange={(event) => (person.youtubeURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"LinkedIn\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.linkedin.com/\",\r\n          }}\r\n          defaultValue={person.linkedInURL}\r\n          onChange={(event) => (person.linkedInURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"About\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          multiline\r\n          rows={6}\r\n          defaultValue={person.about}\r\n          onChange={(event) => (person.about = event.target.value)}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function CreditCardInfo() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Credit Card No\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.cardNo ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.cardNo = event.target.value;\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Name on Card\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.nameOnCard ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.nameOnCard = event.target.value;\r\n          }}\r\n        />\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Expire Date\"\r\n          margin=\"normal\"\r\n          inputVariant=\"outlined\"\r\n          value={cardExpireDate}\r\n          onChange={(date) => {\r\n            setCardExpireDate(date as Date);\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.expireDate = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function ProfilePicture() {\r\n    return (\r\n      <ImageUploader\r\n        title=\"Profile Picture\"\r\n        onSetClick={(file) => {\r\n          //@ts-ignore\r\n          setPerson({ ...person, photo: file });\r\n          setErrorMessage(\"\");\r\n        }}\r\n        onDeleteClick={() => {\r\n          person.photo = undefined;\r\n          setErrorMessage(\"\");\r\n        }}\r\n        imageDestination={person?.photo}\r\n      />\r\n    );\r\n  }\r\n  function Security() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          disabled\r\n          defaultValue={person.email}\r\n        />\r\n        <ControlledTextfield\r\n          label=\"Old Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={oldPassword}\r\n          onChange={(event) => setOldPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"New Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={newPassword}\r\n          onChange={(event) => setNewPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"New Password (Again)\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={againNewPassword}\r\n          onChange={(event) => setAgainNewPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  function FullPage() {\r\n    return (\r\n      <Grid item xs={12} sm={8} md={5} style={{ margin: \"0 auto\" }}>\r\n        <form onSubmit={handleSaveClicked} encType=\"multipart/form-data\">\r\n          <Accordion\r\n            expanded={expanded === \"panel1\"}\r\n            onChange={handleChange(\"panel1\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                General settings\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <PersonalDetails />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === \"panel2\"}\r\n            onChange={handleChange(\"panel2\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                Profile Picture\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <ProfilePicture />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === \"panel3\"}\r\n            onChange={handleChange(\"panel3\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                Credit Card Information\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <CreditCardInfo />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          {props.location.state.registered && (\r\n            <Accordion\r\n              expanded={expanded === \"panel4\"}\r\n              onChange={handleChange(\"panel4\")}\r\n            >\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                  Security\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Security />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          )}\r\n          <Grid item container justifyContent=\"center\" style={{ padding: 10 }}>\r\n            <Button\r\n              // onClick={handleSaveClicked}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={(event) => history.goBack()}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ marginLeft: 10 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <ErrorMessage\r\n        open={showErrorMessage}\r\n        message={errorMessage}\r\n        onClose={setShowErrorMessage}\r\n      />\r\n      {props.location.state.registered ? (\r\n        <User>\r\n          <Grid container justifyContent=\"center\">\r\n            <FullPage />\r\n          </Grid>\r\n        </User>\r\n      ) : (\r\n        <FullPage />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx",["565","566","567","568","569","570","571"],"import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Course } from \"classes/Course\";\r\nimport { CoursePrice } from \"components/course/createCourse/CoursePrice\";\r\nimport { Curriculum } from \"components/course/createCourse/Curriculum/Curriculum\";\r\nimport { TargetStudent } from \"components/course/createCourse/TargetStudent\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CourseService from \"../api/CourseService\";\r\nimport { LandingPage } from \"./Landing\";\r\nimport { Files } from \"classes/Files\";\r\n\r\nfunction CreateCourse(props) {\r\n  let { courseId } = useParams();\r\n  const icon = <InboxIcon />;\r\n  const [course, setCourse] = useState(new Course());\r\n  console.log(course);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (courseId != undefined) {\r\n      CourseService.getCourseForUpdate(courseId).then((response) => {\r\n        console.log(\"Course fetched\", response.data);\r\n        let cover = response.data.cover;\r\n        response.data.cover = new Files(cover.type, cover.title)\r\n          .setId(cover.id)\r\n          .setContent(cover.content);\r\n        setCourse(response.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleOnSave() {\r\n    let error = false;\r\n    if (!course.title) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Title\", { variant: \"warning\" });\r\n    }\r\n    if (!course.subTitle) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Subtitle\", { variant: \"warning\" });\r\n    }\r\n    if (\r\n      !course.languages ||\r\n      (course.languages && course.languages.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate at least one language\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.description) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Description\", { variant: \"warning\" });\r\n    }\r\n    if (!course.mainCategory || !course.subCategory) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate a Category and Sub-Category\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.cover) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate an attractive cover photo\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (course.mainPrice < 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set a price or set to 0 for FREE\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (\r\n      !course.prerequisites ||\r\n      (course.prerequisites && course.prerequisites.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one prerequisite\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.prerequisites &&\r\n      course.prerequisites.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up prerequisite field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (!course.outcomes || (course.outcomes && course.outcomes.length == 0)) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one outcome\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.outcomes &&\r\n      course.outcomes.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up outcome field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (\r\n      !course.properties ||\r\n      (course.properties && course.properties.length < 3)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least three short properties\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.properties &&\r\n      course.properties.forEach((element) => {\r\n        if (!element.text) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up properties field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (course.weeks.length == 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one week with lecture\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.weeks.forEach((element) => {\r\n      if (element.lectures.length == 0) {\r\n        error = true;\r\n        enqueueSnackbar(\r\n          \"Please set up at least one lecture in week: \" + element.weekNo,\r\n          { variant: \"warning\" }\r\n        );\r\n        return;\r\n      }\r\n      element.lectures.forEach((lecture) => {\r\n        if (!lecture.file) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            `Please set up lecture properly in week: ${element.weekNo} and lecture: ${lecture.lectureNo}`,\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    });\r\n    if (error) return;\r\n\r\n    if (course.id) {\r\n      CourseService.updateCourse(course);\r\n    } else {\r\n      CourseService.addCourse(course);\r\n    }\r\n    //   .then((response) => {\r\n    //   if (response.status == 200) {\r\n    //     enqueueSnackbar(\"Successfully uploaded\", { variant: \"success\" });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  function handleOnCancel() {}\r\n\r\n  function handleCourseAttrChange(attribute) {\r\n    setCourse({ ...course, ...attribute });\r\n    console.log(course);\r\n  }\r\n\r\n  const topics: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Landing Page\",\r\n      icon: icon,\r\n      content: (\r\n        <LandingPage\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Target Your Student\",\r\n      icon: <InboxIcon />,\r\n      content: (\r\n        <TargetStudent\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set your curriculum\",\r\n      icon: icon,\r\n      content: (\r\n        <Curriculum\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set a price\",\r\n      icon: icon,\r\n      content: (\r\n        <CoursePrice\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n          onSave={handleOnSave}\r\n          onCancel={handleOnCancel}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <DrawerLayout objects={topics} />;\r\n}\r\n\r\nexport default CreateCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js",["572","573"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages() {\r\n    LanguageService.getAllLanguages()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteLanguage(id) {\r\n\r\n    LanguageService.deleteLanguage(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Language\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                CalladdLanguage(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateLanguage(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteLanguage(oldData.id)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js",["574","575"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus() }, [])\r\n  }\r\n\r\n  function CallupdateEduStatus(edustatus) {\r\n\r\n    EduStatusService.updateEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus(id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container >\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Educational Status\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdEduStatus(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateEduStatus(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteEdustatus(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js",[],["576","577"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx",["578"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useStyles } from \"Theme\";\r\n\r\nconst localStyles = makeStyles((theme) => ({\r\n  titleBox: {\r\n    height: \"115px\",\r\n  },\r\n  title: {\r\n    marginBottom: \"5px\",\r\n    maxHeight: \"80px\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  },\r\n  offPrice: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n}));\r\n\r\nfunction CourseBox({ courseData }) {\r\n  const global = useStyles();\r\n  const local = localStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <CardActionArea\r\n        style={{\r\n          width: \"185px\",\r\n        }}\r\n        onClick={(event) => history.push(`/course/${courseData.id}`)}\r\n      >\r\n        <Card>\r\n          <CardMedia\r\n            style={{ height: 135, backgroundSize: \"contain\" }}\r\n            image={courseData.coverContent}\r\n          />\r\n          <CardContent style={{ padding: \"0px 10px 10px 10px\" }}>\r\n            <Grid\r\n              container\r\n              className={local.titleBox}\r\n              wrap=\"nowrap\"\r\n              direction=\"column\"\r\n              justifyContent=\"flex-start\"\r\n            >\r\n              <Typography\r\n                className={classNames(local.title, global.medium, global.bold)}\r\n                align=\"left\"\r\n              >\r\n                {courseData.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" align=\"left\">\r\n                {courseData.teacherName}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"flex-end\"\r\n              alignItems=\"center\"\r\n              spacing={1}\r\n            >\r\n              <Rating size=\"small\" value={courseData.rating} readOnly />\r\n              <Grid item className={global.medium}>\r\n                {courseData.rating}\r\n              </Grid>\r\n              <Grid item className={global.tiny}>\r\n                ({courseData.ratingCount})\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"flex-end\"\r\n              alignItems=\"center\"\r\n              spacing={1}\r\n            >\r\n              <Grid item className={classNames(global.medium, local.offPrice)}>\r\n                {courseData.price * (1 - courseData.off / 100)}\r\n              </Grid>\r\n              <Grid item className={classNames(global.big, global.bold)}>\r\n                {courseData.price}\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </CardActionArea>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseBox;\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import clsx from 'clsx';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardHeader from '@material-ui/core/CardHeader';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { red } from '@material-ui/core/colors';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import img1 from '../../resources/image/DefaultCourseImage.jpg';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     maxWidth: 345,\r\n//   },\r\n//   media: {\r\n//     height: 0,\r\n//     paddingTop: '56.25%', // 16:9\r\n//   },\r\n//   expand: {\r\n//     transform: 'rotate(0deg)',\r\n//     marginLeft: 'auto',\r\n//     transition: theme.transitions.create('transform', {\r\n//       duration: theme.transitions.duration.shortest,\r\n//     }),\r\n//   },\r\n//   expandOpen: {\r\n//     transform: 'rotate(180deg)',\r\n//   },\r\n//   avatar: {\r\n//     backgroundColor: red[500],\r\n//   },\r\n// }));\r\n\r\n// export default function CourseBox() {\r\n//   const classes = useStyles();\r\n//   const [expanded, setExpanded] = React.useState(false);\r\n\r\n//   const handleExpandClick = () => {\r\n//     setExpanded(!expanded);\r\n//   };\r\n\r\n//   return (\r\n//     <Card className={classes.root}>\r\n//       <CardHeader\r\n//         avatar={\r\n//           <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n//             R\r\n//           </Avatar>\r\n//         }\r\n//         action={\r\n//           <IconButton aria-label=\"settings\">\r\n//             <MoreVertIcon />\r\n//           </IconButton>\r\n//         }\r\n//         title=\"Shrimp and Chorizo Paella\"\r\n//         subheader=\"September 14, 2016\"\r\n//       />\r\n//       <CardMedia\r\n//         className={classes.media}\r\n//         // image=\"https://img-a.udemycdn.com/course/240x135/354176_fe73_5.jpg?5oD1okbOTmx4KDKe6F5fXBTC6wejveIIVoHJG9Ui4HOqnVb3a7UnSjdB2qx6qM7W5HnMzpmzsPufkR9PDkeH2F8qCorS1Ahy5_sxQqc3EkXLVinKd_YdG1Or-3M53h4\"\r\n//         image={img1}\r\n//         title=\"Paella dish\"\r\n//       />\r\n//       <CardContent>\r\n//         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n//           This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n//           guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n//         </Typography>\r\n//       </CardContent>\r\n//       <CardActions disableSpacing>\r\n//         <IconButton aria-label=\"add to favorites\">\r\n//           <FavoriteIcon />\r\n//         </IconButton>\r\n//         <IconButton aria-label=\"share\">\r\n//           <ShareIcon />\r\n//         </IconButton>\r\n//         <IconButton\r\n//           className={clsx(classes.expand, {\r\n//             [classes.expandOpen]: expanded,\r\n//           })}\r\n//           onClick={handleExpandClick}\r\n//           aria-expanded={expanded}\r\n//           aria-label=\"show more\"\r\n//         >\r\n//           <ExpandMoreIcon />\r\n//         </IconButton>\r\n//       </CardActions>\r\n//       <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n//         <CardContent>\r\n//           <Typography paragraph>Method:</Typography>\r\n//           <Typography paragraph>\r\n//             Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n//             minutes.\r\n//           </Typography>\r\n//           <Typography paragraph>\r\n//             Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n//             heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n//             browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n//             and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n//             pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n//             saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n//           </Typography>\r\n//           <Typography paragraph>\r\n//             Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n//             without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n//             medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n//             again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n//             minutes more. (Discard any mussels that don’t open.)\r\n//           </Typography>\r\n//           <Typography>\r\n//             Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Collapse>\r\n//     </Card>\r\n//   );\r\n// }\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx",["579"],"// components\r\nimport { Header } from \"components/header/Header\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function User({ children }) {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Header />\r\n          <div style={{ margin: \"0 auto\", maxWidth: \"1400px\", padding: 20 }}>\r\n            {children}\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx",["580","581","582","583","584","585"],"import { Divider, Grid, GridSpacing, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction CustomPagination({\r\n  type = \"one-item-per-line\",\r\n  title,\r\n  children,\r\n  objectsPerPage = 12,\r\n  divider = false,\r\n  spacing = 2,\r\n}: {\r\n  type?: \"one-item-per-line\" | \"two-item-per-line\" | \"calculate-by-width\";\r\n  children: JSX.Element[];\r\n  title?: string;\r\n  objectsPerPage?: number;\r\n  divider?: boolean;\r\n  spacing?: GridSpacing | undefined;\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const indexOfLastObject = currentPage * objectsPerPage;\r\n  const indexOfFirstObject = indexOfLastObject - objectsPerPage;\r\n  const currentPageObjects = children\r\n    ? children.slice(indexOfFirstObject, indexOfLastObject)\r\n    : [];\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  let elementsWithContainer;\r\n  if (type === \"one-item-per-line\") {\r\n    elementsWithContainer = (\r\n      <Grid container direction=\"column\" spacing={spacing}>\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item container key={index}>\r\n            {index != 0 && divider ? (\r\n              <Grid item xs={12} key={index}>\r\n                <Divider style={{ marginBottom: 4 }} />\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              {item}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"two-item-per-line\") {\r\n    elementsWithContainer = (\r\n      <Grid container spacing={2}>\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item xs={6} key={index}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"calculate-by-width\") {\r\n    elementsWithContainer = (\r\n      <Grid container direction=\"row\" spacing={2} justifyContent=\"flex-start\">\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item xs={6} sm={6} md={3} lg={2} key={index}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {title != undefined && (\r\n        <Typography\r\n          variant=\"h3\"\r\n          style={{ textAlign: \"center\", marginBottom: 10 }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        {elementsWithContainer}\r\n        <Grid item container justifyContent=\"center\">\r\n          <Pagination\r\n            count={children ? Math.ceil(children.length / objectsPerPage) : 0}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            color=\"secondary\"\r\n            siblingCount={3}\r\n            size=\"large\"\r\n            style={{ marginTop: 15 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPagination;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx",["586","587","588"],"import { Button, Dialog, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, makeStyles, Radio, RadioGroup, Typography } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport React, { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\nconst sortTypes = [\r\n  \"New released\",\r\n  \"Best seller\",\r\n  \"Most reviewed\",\r\n  \"Most rated\",\r\n  \"Price low to high\",\r\n  \"Price high to low\"\r\n]\r\n\r\n\r\nconst CustomSelect = ({ data, title, open, selected, onClose, onChange }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(selected);\r\n\r\n  function handleChange(event) {\r\n    onChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={onClose}\r\n      open={open}\r\n      style={{ padding: 10 }}\r\n    >\r\n      <DialogTitle style={{ textAlign: \"center\" }}>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup >\r\n            {\r\n              data.map(item => (\r\n                <FormControlLabel\r\n                  checked={item === selected}\r\n                  value={item}\r\n                  control={<Radio />}\r\n                  label={item}\r\n                  onClick={handleChange}\r\n                />\r\n              ))\r\n            }\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <Button color=\"primary\" onClick={onClose}>\r\n        Cancel\r\n      </Button>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nfunction Sort() {\r\n  const [open, setOpen] = useState(false);\r\n  const [sortType, setSortType] = useState(sortTypes[0]);\r\n  const handleChange = (value) => {\r\n    setSortType(value);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <Grid sm={12} xs={6} container>\r\n      <Grid container\r\n        justify=\"space-between\"\r\n        onClick={handleOpen}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          Sort by\r\n        </Typography>\r\n        <SortIcon />\r\n      </Grid>\r\n      <CustomSelect\r\n        title={\"Set sort type\"}\r\n        selected={sortType}\r\n        open={open}\r\n        data={sortTypes}\r\n        onClose={handleClose}\r\n        onChange={handleChange}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Sort","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx",["589","590"],"import {\r\n  AppBar,\r\n  Button,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Cancel } from \"@material-ui/icons\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport React from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport { GenerateFilterValue, MakeList } from \"./filter/MakeList\";\r\nimport { IFilterType, IFilteredValue } from \"./SearchPage\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  dialog: {\r\n    paper: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  drawer: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction Filter({\r\n  filteredData,\r\n  filterDataList,\r\n  onFilterChange,\r\n  onClearAll,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filterDataList: Array<IFilterType>;\r\n  onFilterChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n  onClearAll: () => void;\r\n}) {\r\n  const classes = useStyle();\r\n  const [openDrawer, setOpenDrawer] = React.useState(true);\r\n  const [tabValue, setTabValue] = React.useState(0);\r\n\r\n  function handleTabChange(event, newValue) {\r\n    setTabValue(newValue);\r\n  }\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div role=\"tabpanel\" hidden={value !== index} {...other}>\r\n        {value === index && (\r\n          <Grid container style={{ padding: 10 }}>\r\n            {children}\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  // const handleFilterChange = (data) => {\r\n  //   var array = filterData;\r\n  //   var index = array.findIndex(item => item.title === data.title);\r\n  //   array[index] = data;\r\n  //   onFilterDataChange(array);\r\n  // }\r\n  // const handleFilterSliderChange = (data) => {\r\n  //   var array = rangeFilteredArray\r\n  //   var idx = array.findIndex(item => item.filterType === data.filterType)\r\n  //   array[idx].minValue = data.min\r\n  //   array[idx].maxValue = data.max\r\n  //   return array;\r\n  // }\r\n  // const handleSliderCommit = (data) => {\r\n  //   var array = handleFilterSliderChange(data);\r\n  //   onRangeFilteredArrayChange(array)\r\n  // }\r\n  // const handleFilterValueChange = (data) => {\r\n  //   var array = filteredArray;\r\n  //   if (data.type === \"add\") {\r\n  //     array.push({ filterType: data.filterType, value: data.value })\r\n  //   }\r\n  //   else if (data.type === \"remove\") {\r\n  //     array = array.filter(item => (item.filterType !== data.filterType || item.value !== data.value))\r\n  //   }\r\n  //   onFilteredArrayChange(array)\r\n  // }\r\n  // function getCurrentState(data) {\r\n  //   var array = filteredArray;\r\n  //   return array.findIndex(obj => obj.filterType === data.filterType && obj.value === data.value) !== -1\r\n  // }\r\n  // function getCurrentSliderState(filterType) {\r\n  //   var idx = rangeFilteredArray.findIndex(item => item.filterType === filterType)\r\n  //   return [rangeFilteredArray[idx].minValue, rangeFilteredArray[idx].maxValue]\r\n  // }\r\n  // function clearFilteredArray() {\r\n  //   onFilteredArrayChange([])\r\n  //   var array = rangeFilteredArray\r\n  //   array.map(filter => {\r\n  //     filter.minValue = filter.min\r\n  //     filter.maxValue = filter.max\r\n  //   })\r\n  //   onRangeFilteredArrayChange(array)\r\n  // }\r\n\r\n  function handleFilterChange(index, newFilter) {\r\n    // let newObject = [...objects];\r\n    // newObject[index] = newFilter;\r\n    // onFilterChange(newObject);\r\n  }\r\n\r\n  function MobileFilter() {\r\n    return (\r\n      <Drawer\r\n        anchor={\"right\"}\r\n        open={openDrawer}\r\n        onClose={(event) => setOpenDrawer(false)}\r\n        classes={{ paper: classes.drawer }}\r\n      >\r\n        <Sticky>\r\n          {({ style }) => (\r\n            <>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n              >\r\n                <IconButton onClick={(event) => setOpenDrawer(false)}>\r\n                  <Cancel />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">Filter list</Typography>\r\n                <Button variant=\"contained\" onClick={onClearAll}>\r\n                  Clear All\r\n                </Button>\r\n              </Grid>\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabValue}\r\n                  onChange={handleTabChange}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {filterDataList.map((filter) => (\r\n                    <Tab label={filter.title} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            </>\r\n          )}\r\n        </Sticky>\r\n\r\n        {filterDataList.map((filter, index) => (\r\n          <TabPanel value={tabValue} index={index}>\r\n            <GenerateFilterValue\r\n              filteredData={filteredData}\r\n              filter={filter}\r\n              onFilterValueChange={onFilterChange}\r\n            />\r\n          </TabPanel>\r\n        ))}\r\n      </Drawer>\r\n    );\r\n  }\r\n  function DesktopFilter() {\r\n    return (\r\n      <List component=\"nav\">\r\n        {filterDataList.map((filter, index) => (\r\n          <MakeList\r\n            filteredData={filteredData}\r\n            filter={filter}\r\n            onFilterValueChange={onFilterChange}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        sm={12}\r\n        xs={6}\r\n        container\r\n        justify=\"space-between\"\r\n        onClick={(event) => setOpenDrawer(true)}\r\n      >\r\n        <Typography variant=\"h6\">Filter by</Typography>\r\n        <FilterListIcon />\r\n      </Grid>\r\n\r\n      <Responsive displayIn={[\"Mobile\"]}>\r\n        <MobileFilter />\r\n      </Responsive>\r\n      <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n        <DesktopFilter />\r\n      </Responsive>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx",["591","592"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { WeekView } from \"./WeekView\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport function Curriculum({ course, onCourseAttrChange }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [weeks, setWeeks] = useState(course.weeks);\r\n\r\n  useEffect(() => {\r\n    // handleOnWeekAdd();\r\n  }, []);\r\n\r\n  function onWeekChange(index, week) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks[index] = week;\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n  function handleOnWeekAdd() {\r\n    let updWeeks = [...weeks, new Week().setWeekNo(weeks.length + 1)];\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n\r\n  function handleOnWeekRemove(index) {\r\n    if (weeks.length == 1) {\r\n      enqueueSnackbar(\"There must be at least a week\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    let updWeeks = [...weeks];\r\n    updWeeks.splice(index, 1);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n    setWeeks([...updWeeks]);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      {/*      <ReactSortable\r\n        list={weeks}\r\n        setList={setWeeks}\r\n      > */}\r\n\r\n      {/* <ReactSortable list={weeks} setList={setWeeks} style={{ width: \"100%\" }}> */}\r\n      {weeks.map((item, index) => (\r\n        // <div key={item.id}>\r\n        <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n          <WeekView\r\n            week={item}\r\n            onWeekChange={(week) => onWeekChange(index, week)}\r\n            onWeekRemove={() => handleOnWeekRemove(index)}\r\n            weekNo={index + 1}\r\n            // setWeek={(week) => onWeekChange(index, week)}\r\n            // onWeekAdd={() => handleOnWeekAdd(index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      {/* </ReactSortable> */}\r\n      <Grid item container justifyContent=\"center\" style={{ marginTop: 10 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddCircle />}\r\n          onClick={handleOnWeekAdd}\r\n        >\r\n          ADD WEEK\r\n        </Button>\r\n      </Grid>\r\n      {/* </div> */}\r\n      {/* </ReactSortable> */}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx",["593"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { PublicResponse } from \"classes/Course\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nfunction RatingBox({\r\n  data,\r\n  courseId,\r\n  onRatingSubmit,\r\n}: {\r\n  courseId: number;\r\n  data: PublicResponse | undefined;\r\n  onRatingSubmit: () => void;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [ratingValue, setRatingValue] = useState<number>(0);\r\n  const [ratingDone, setRatingDone] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      CourseService.ratingSelf(courseId).then((response) => {\r\n        if (response.data > 0) setRatingDone(true);\r\n        setRatingValue(response.data);\r\n      });\r\n    }\r\n  }, [courseId]);\r\n  function handleRatingSubmit() {\r\n    CourseService.submitRating(courseId, ratingValue).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your rating submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        setRatingDone(true);\r\n        onRatingSubmit();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Grid\r\n              item\r\n              md={2}\r\n              xs={3}\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography>{data?.ratingValue}</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>{data?.ratingCount} Rating</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>Course Rating</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={10} xs={9} container direction=\"column\">\r\n              {[5, 4, 3, 2, 1].map((value) => (\r\n                <Grid\r\n                  key={value}\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item style={{ width: \"100%\" }}>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={\r\n                        data?.ratingByNumber\r\n                          ? (data?.ratingByNumber[value] / data?.ratingCount) *\r\n                            100\r\n                          : 0\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Rating\r\n                      name=\"course-rating-output\"\r\n                      value={value}\r\n                      readOnly\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>{data?.ratingByNumber[value]}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            xs\r\n            spacing={2}\r\n          >\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              wrap=\"nowrap\"\r\n              justifyContent=\"center\"\r\n              xs\r\n              spacing={2}\r\n            >\r\n              <Grid item>\r\n                <Typography variant=\"body1\">\r\n                  {ratingDone ? \"Your rating : \" : \"Give a rating\"}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Rating\r\n                  name=\"course-rating-input\"\r\n                  readOnly={ratingDone}\r\n                  value={ratingValue}\r\n                  onChange={(event, value) => setRatingValue(value as number)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {!ratingDone && ratingValue && ratingValue > 0 ? (\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                xs\r\n                spacing={2}\r\n              >\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleRatingSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => setRatingValue(0)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RatingBox;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx",["594","595"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { ReviewInfo } from \"classes/Course\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nexport function ReviewSection({\r\n  reviews,\r\n  courseId,\r\n  onReviewSubmit,\r\n}: {\r\n  reviews?: ReviewInfo[] | undefined;\r\n  courseId: number;\r\n  onReviewSubmit: () => void;\r\n}) {\r\n  const [reviewInputShow, setReviewInputShow] = useState(false);\r\n  const [reviewOutputShow, setReviewOutputShow] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [myReview, setMyReview] = useState<ReviewInfo>();\r\n  useEffect(() => {\r\n    CourseService.reviewSelf(courseId).then((response) => {\r\n      console.log(\"my review\", response.data);\r\n      setMyReview(response.data);\r\n    });\r\n  }, [reviews]);\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                Review\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  myReview\r\n                    ? setReviewOutputShow(true)\r\n                    : setReviewInputShow(true);\r\n                }}\r\n              >\r\n                {myReview ? \"See your review\" : \"Write a review\"}\r\n              </Button>\r\n              {!myReview && (\r\n                <ReviewInputDialog\r\n                  open={reviewInputShow}\r\n                  courseId={courseId}\r\n                  onClose={() => setReviewInputShow(false)}\r\n                  onReviewSubmit={onReviewSubmit}\r\n                />\r\n              )}\r\n              {myReview && (\r\n                <ReviewOutputDialog\r\n                  open={reviewOutputShow}\r\n                  review={myReview}\r\n                  onClose={() => setReviewOutputShow(false)}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {!reviews?.length && (\r\n            <Grid item container>\r\n              <Typography variant=\"h5\">\r\n                Be first to review this course\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          {reviews && (\r\n            <Grid item container direction=\"column\" spacing={2}>\r\n              {reviews?.map((review, index) => (\r\n                <Grid item container key={index}>\r\n                  <Divider\r\n                    style={{ width: \"100%\", marginTop: 8, marginBottom: 16 }}\r\n                  />\r\n                  <ReviewBox review={review} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\nexport function ReviewBox({ review }: { review: ReviewInfo | undefined }) {\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n      <Grid item>\r\n        <IconButton\r\n          onClick={(event) =>\r\n            history.push(`/profile/${review?.studentUsername}`)\r\n          }\r\n        >\r\n          <Avatar src={review?.studentImage} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item container direction=\"column\">\r\n        <Grid>\r\n          <Link href={`/profile/${review?.studentUsername}`} variant=\"h5\">\r\n            {review?.studentName}\r\n          </Link>\r\n        </Grid>\r\n        <Grid item container direction=\"row\" spacing={2}>\r\n          <Grid item>\r\n            <Rating value={review?.ratingValue} readOnly name=\"rating-input\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\">\r\n              {new Date(review?.reviewTime + \"\").toLocaleString()}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body1\">{review?.review}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction ReviewInputDialog({ open, onClose, courseId, onReviewSubmit }) {\r\n  const [ratingValue, setRatingValue] = useState<number>(0);\r\n  const [ratingDone, setRatingDone] = useState<boolean>(false);\r\n  const [review, setReview] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      CourseService.ratingSelf(courseId).then((response) => {\r\n        if (response.data > 0) setRatingDone(true);\r\n        setRatingValue(response.data);\r\n      });\r\n    }\r\n  }, [courseId]);\r\n  async function handleReviewSubmit() {\r\n    let error = false;\r\n    if (!ratingValue) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please give a rating\", { variant: \"warning\" });\r\n    }\r\n    if (!review) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please give a review and submit again\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (error) return;\r\n    if (!ratingDone) {\r\n      await CourseService.submitRating(courseId, ratingValue).then((response) =>\r\n        console.log(response)\r\n      );\r\n      console.log(\"ratingSubmitted\");\r\n    }\r\n    await CourseService.submitReview(courseId, review).then((response) =>\r\n      console.log(response)\r\n    );\r\n    console.log(\"reviewSubmitted\");\r\n    onReviewSubmit();\r\n    onClose();\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Write a review</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            wrap=\"nowrap\"\r\n            justifyContent=\"center\"\r\n            xs\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"body1\">\r\n                {ratingDone ? \"Your rating : \" : \"Give a rating : \"}{\" \"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Rating\r\n                value={ratingValue}\r\n                readOnly={ratingDone}\r\n                name=\"rating-in-review-box\"\r\n                onChange={(event, value) => setRatingValue(value as number)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              label=\"Write your review\"\r\n              onBlur={(event) => setReview(event.target.value)}\r\n              multiline\r\n              rows={6}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleReviewSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction ReviewOutputDialog({ open, review, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogContent>\r\n        <ReviewBox review={review} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container justifyContent=\"center\">\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js",["596","597","598","599","600","601"],"import {\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  useTheme\r\n} from \"@material-ui/core\";\r\nimport LanguageService from \"components/AdminPanel/api/LanguageService\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n// const languageItem = [\r\n//   \"Bangla\", \"English\", \"Hindi\", \"Arabic\", \"Persian\",\r\n// ]\r\n\r\nconst languageItem = [\r\n  { id: 1, name: \"Bengali\", adminId: \"Mehedi\" },\r\n  { id: 2, name: \"English\", adminId: \"Mehedi\" },\r\n  { id: 3, name: \"Hindi\", adminId: \"Mehedi\" },\r\n  { id: 4, name: \"Arabic\", adminId: \"Mehedi\" },\r\n  { id: 5, name: \"Persian\", adminId: \"Mehedi\" },\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nfunction getStyles(id, languages, theme) {\r\n  return {\r\n    fontWeight:\r\n      languages.some(item => item == id)\r\n        ? theme.typography.fontWeightMedium\r\n        :\r\n        theme.typography.fontWeightRegular,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport function LanguageField({\r\n  objects,\r\n  onObjectsChange = (languages) => console.log(languages),\r\n}) {\r\n  const [languageItem, setLanguageItem] = useState([]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [languages, setLanguages] = useState([]);\r\n  const onLanguagesChange = (event) => {\r\n    setLanguages(event.target.value);\r\n    onObjectsChange(event.target.value.map(item => languageItem.find(langItem => langItem.id == item)));\r\n  };\r\n  useEffect(() => {\r\n    if (objects != undefined)\r\n      setLanguages(objects.map(item => item.id));\r\n    LanguageService.getAllLanguages().then(response => {\r\n      setLanguageItem(response.data);\r\n    });\r\n    return () => {\r\n      // setLanguages([]);\r\n      // setLanguageItem([]);\r\n    }\r\n  }, [])\r\n  // if (objects == undefined) return null;\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-multiple-chip-label\">Language</InputLabel>\r\n      <Select\r\n        label=\"Language\"\r\n        labelId=\"demo-multiple-chip-label\"\r\n        id=\"demo-multiple-chip\"\r\n        multiple\r\n        value={languages}\r\n        onChange={onLanguagesChange}\r\n        // input={<Input />}\r\n        renderValue={(selected) => (\r\n          <div className={classes.chips}>\r\n            {\r\n              selected.map((id) => (\r\n                <Chip\r\n                  key={id}\r\n                  label={languageItem.filter(item => item.id == id)[0]?.name}\r\n                  className={classes.chip}\r\n                />\r\n              )\r\n              )\r\n            }\r\n          </div>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {languageItem.map((item) => {\r\n          // @ts-ignore\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              value={item.id}\r\n              style={getStyles(item.id, languages, theme)}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx",["602","603","604","605"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Course } from \"classes/Course\";\r\nimport { CreditCard } from \"classes/Person\";\r\nimport PersonService from \"components/person/api/PersonService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\n\r\nexport function CongratulationDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n}) {\r\n  return (\r\n    <Dialog open={open} keepMounted onClose={onClose}>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <img src={require(\"assets/img/congratulation.jpg\").default} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h4\">You successfully purchased</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course?.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice &&\r\n                          course.off &&\r\n                          course.mainPrice -\r\n                            (course.mainPrice * course.off) / 100}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function CheckoutDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n  onPurchase,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n  onPurchase: () => void;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [creditCard, setCreditCard] = useState<CreditCard | undefined>();\r\n  useEffect(() => {\r\n    PersonService.getCreditCardDetails().then((response) => {\r\n      console.log(\"Credit card fetched\", response.data);\r\n      setCreditCard(response.data);\r\n    });\r\n    return () => {\r\n      setCreditCard(undefined);\r\n    };\r\n  }, []);\r\n  let offeredPrice =\r\n    course?.mainPrice - (course?.mainPrice * course?.off) / 100;\r\n  let expDate = new Date(creditCard?.expireDate + \"\");\r\n\r\n  if (course == undefined) return <></>;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Checkout</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" wrap=\"nowrap\" xs spacing={4}>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Card details</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Name on card\"\r\n                  value={creditCard?.nameOnCard}\r\n                  onChange={(event) =>\r\n                    setCreditCard({\r\n                      ...creditCard,\r\n                      nameOnCard: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={creditCard?.cardNo}\r\n                  label=\"Card number\"\r\n                  onChange={(event) =>\r\n                    setCreditCard({ ...creditCard, cardNo: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <KeyboardDatePicker\r\n                  // disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MMM/yyyy\"\r\n                  label=\"Expire Date\"\r\n                  inputVariant=\"outlined\"\r\n                  value={creditCard?.expireDate}\r\n                  onChange={(date) => {\r\n                    setCreditCard({ ...creditCard, expireDate: date as Date });\r\n                  }}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Summary</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Original price</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">{course?.mainPrice}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Discount</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">\r\n                    {course.mainPrice &&\r\n                      course.off &&\r\n                      (course?.mainPrice * course?.off) / 100}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Total</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">\r\n                    {course.mainPrice && course.off && offeredPrice}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    let error = false;\r\n                    if (!creditCard?.cardNo) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide a credit card no\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.nameOnCard) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide name on card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.expireDate) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide expire date of card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    } else if (expDate.getTime() < new Date().getTime()) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Your credit card is expired\", {\r\n                        variant: \"error\",\r\n                      });\r\n                    }\r\n                    if (error) return;\r\n                    onPurchase();\r\n                  }}\r\n                >\r\n                  Complete payment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardHeader>\r\n                <Typography variant=\"h5\">Order details</Typography>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course?.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice && course.off && offeredPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx",["606","607","608"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { FaqInfo } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nexport function FAQSection({\r\n  courseId,\r\n  faqs,\r\n  onSubmit,\r\n}: {\r\n  courseId: number;\r\n  faqs: FaqInfo[] | undefined;\r\n  onSubmit: () => void;\r\n}) {\r\n  const [questionInputShow, setQuestionInputShow] = useState(false);\r\n  const [questionOutputShow, setQuestionOutputShow] = useState(false);\r\n  const [myFaq, setMyFaq] = useState<FaqInfo>();\r\n  useEffect(() => {\r\n    CourseService.faqSelf(courseId).then((response) => {\r\n      console.log(\"my faq\", response.data);\r\n      setMyFaq(response.data);\r\n    });\r\n  }, [faqs]);\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                FAQ\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  myFaq\r\n                    ? setQuestionOutputShow(true)\r\n                    : setQuestionInputShow(true);\r\n                }}\r\n              >\r\n                {myFaq ? \"See your question\" : \"Ask a question\"}\r\n              </Button>\r\n              {myFaq ? (\r\n                <FAQOutputQuestionDialog\r\n                  faq={myFaq}\r\n                  open={questionOutputShow}\r\n                  onClose={() => setQuestionOutputShow(false)}\r\n                />\r\n              ) : (\r\n                <FAQInputQuestionDialog\r\n                  courseId={courseId}\r\n                  open={questionInputShow}\r\n                  onClose={() => setQuestionInputShow(false)}\r\n                  onQuestionSubmit={onSubmit}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container direction=\"column\">\r\n            {faqs?.map((faq, index) => (\r\n              <Grid item container key={index}>\r\n                <Grid item container>\r\n                  <Divider />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <FAQBox faq={faq} onSubmit={onSubmit} />\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function FAQBox({\r\n  faq,\r\n  onSubmit,\r\n}: {\r\n  faq: FaqInfo | undefined;\r\n  onSubmit?: () => void;\r\n}) {\r\n  const [answerInputShow, setAnswerInputShow] = useState(false);\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n      <Grid item>\r\n        <IconButton\r\n          onClick={() => history.push(`/profile/${faq?.studentUsername}`)}\r\n        >\r\n          <Avatar src={faq?.studentImage} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item container direction=\"column\">\r\n        <Grid>\r\n          <Link variant=\"h5\" href={`/profile/${faq?.studentUsername}`}>\r\n            {faq?.studentName}\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\">\r\n            {new Date(faq?.questionDate + \"\").toLocaleString()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextEditor value={faq?.question} readOnly />\r\n        </Grid>\r\n        {console.log(faq?.teacherUsername)}\r\n        {console.log(AuthService.getCurrentUsername())}\r\n        {!faq?.answer &&\r\n        faq?.teacherUsername === AuthService.getCurrentUsername() ? (\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setAnswerInputShow(true)}\r\n            >\r\n              Give an answer\r\n            </Button>\r\n            <FAQInputAnswerDialog\r\n              open={answerInputShow}\r\n              faq={faq}\r\n              onAnswerSubmit={onSubmit}\r\n              onClose={() => setAnswerInputShow(false)}\r\n            />\r\n          </Grid>\r\n        ) : (\r\n          !faq?.answer && <Typography variant=\"body1\">No answer yet</Typography>\r\n        )}\r\n        {faq?.answer && (\r\n          <Grid item style={{ marginTop: 20 }}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <IconButton\r\n                  onClick={() =>\r\n                    history.push(`/profile/${faq?.teacherUsername}`)\r\n                  }\r\n                >\r\n                  <Avatar src={faq?.teacherImage} />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item container direction=\"column\">\r\n                <Grid>\r\n                  <Link variant=\"h5\" href={`/profile/${faq?.teacherUsername}`}>\r\n                    {faq?.teacherName}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {new Date(faq?.answerDate + \"\").toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextEditor value={faq?.answer} readOnly />\r\n                  {/* <Typography variant=\"body1\">{faq?.answer}</Typography> */}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction FAQInputQuestionDialog({ open, courseId, onClose, onQuestionSubmit }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  function onSubmitQuestion() {\r\n    if (!question) {\r\n      enqueueSnackbar(\"Please write a question\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    CourseService.submitQuestion(courseId, question).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your question is submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        onQuestionSubmit();\r\n        onClose();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Ask a question</DialogTitle>\r\n      <DialogContent>\r\n        <TextEditor onChange={(value) => setQuestion(value)} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={onSubmitQuestion}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction FAQInputAnswerDialog({ faq, open, onClose, onAnswerSubmit }) {\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  function onSubmitAnswer() {\r\n    if (!answer) {\r\n      enqueueSnackbar(\"Please write an answer\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    CourseService.submitAnswer(faq?.id, answer).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your answer is submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        onAnswerSubmit();\r\n        onClose();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Reply this question</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <TextEditor value={faq?.question} readOnly />\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item>\r\n            <TextEditor onChange={(value) => setAnswer(value)} />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={onSubmitAnswer}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\nfunction FAQOutputQuestionDialog({ open, faq, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogContent>\r\n        <FAQBox faq={faq} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container justifyContent=\"center\">\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx",["609"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Star } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { TeacherMiniInfo } from \"./../../../classes/Person\";\r\n\r\nfunction InstructorShortDetailsBox({\r\n  details,\r\n}: {\r\n  details: TeacherMiniInfo | undefined;\r\n}) {\r\n  const history = useHistory();\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{details?.teacherName}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CardActionArea\r\n              onClick={(event) => history.push(`/profile/${details?.username}`)}\r\n            >\r\n              <Grid container direction=\"row\" wrap=\"nowrap\">\r\n                <Grid item lg={4} md={5} sm={7} xs={12}>\r\n                  <img src={details?.photoContent} />\r\n                </Grid>\r\n                <Grid item lg={8} md={7} sm={5} xs={12}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"space-around\"\r\n                  >\r\n                    <List dense={true}>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          ({details?.rating}) {details?.ratingCount} Rating\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.reviewCount} Reviews\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.studentCount} Students\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.courseCount} Courses\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardActionArea>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"h6\">About</Typography>\r\n            <Typography>{details?.about}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InstructorShortDetailsBox;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx",["610","611","612"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport CourseBox from \"components/course/CourseBox\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst CourseBoxContainer = ({ courses }) => {\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        spacing={2}\r\n      >\r\n        {courses.map((course) => (\r\n          <Grid item key={course.id}>\r\n            <CourseBox courseData={course} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nconst CoursePagination = ({ courses, title }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n\r\n  if (courses == undefined) return <></>;\r\n  const indexOfLastCourse = currentPage * postsPerPage;\r\n  const indexOfFirstCourse = indexOfLastCourse - postsPerPage;\r\n  const currentCourses = courses.slice(indexOfFirstCourse, indexOfLastCourse);\r\n\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <CourseBoxContainer courses={currentCourses} />\r\n      <Pagination\r\n        count={Math.ceil(courses.length / postsPerPage)}\r\n        page={currentPage}\r\n        onChange={paginate}\r\n        color=\"secondary\"\r\n        siblingCount={3}\r\n        size=\"large\"\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CoursePagination;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx",["613","614","615"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { TrainRounded } from \"@material-ui/icons\";\r\nimport { Category, categoryList } from \"classes/Category\";\r\nimport React, { useState } from \"react\";\r\nimport { CategorySelector } from \"tools/customDesign/CategorySelector\";\r\nimport { timeout } from \"tools/Tools\";\r\nimport {\r\n  IFilteredValue,\r\n  IFilterType as IFilterType,\r\n  IListFilter,\r\n  ISliderFilter,\r\n} from \"../SearchPage\";\r\nimport { FilterCheckBox } from \"./FilterCheckbox\";\r\nimport { FilterSlider } from \"./FilterSlider\";\r\n\r\nexport function MakeList({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  const [open, setOpen] = useState(true);\r\n  return (\r\n    <>\r\n      <ListItem key={filter.title} button onClick={() => setOpen(!open)}>\r\n        <ListItemText primary={filter.title} />\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <GenerateFilterValue\r\n          filteredData={filteredData}\r\n          filter={filter}\r\n          onFilterValueChange={onFilterValueChange}\r\n        />\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function GenerateFilterValue({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  if (filter.type === \"CATEGORY\") {\r\n    return (\r\n      <CategorySelector\r\n        categories={categoryList}\r\n        selectedCategories={filteredData.map(\r\n          (filterValue) =>\r\n            new Category(filterValue.id as number, filterValue.value as string)\r\n        )}\r\n        onCategorySelectionChange={(category, type) => {\r\n          onFilterValueChange(\r\n            {\r\n              type: filter.type,\r\n              title: filter.title,\r\n              value: category.name,\r\n              id: category.id,\r\n            },\r\n            type\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  } else if (filter.type === \"LIST\") {\r\n    return (\r\n      <List>\r\n        {(filter as IListFilter).items.map((item, index) => (\r\n          <ListItem\r\n            key={item.title}\r\n            // @ts-ignore\r\n            value={item}\r\n          >\r\n            <FilterCheckBox\r\n              checked={filteredData.some(\r\n                (data) => data.title === filter.title && data.id === item.id\r\n              )}\r\n              label={item.title}\r\n              onChange={(state) =>\r\n                onFilterValueChange(\r\n                  {\r\n                    type: filter.type,\r\n                    title: filter.title,\r\n                    value: item.title,\r\n                    id: item.id,\r\n                  },\r\n                  state ? \"ADD\" : \"REMOVE\"\r\n                )\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  } else if (filter.type === \"SLIDER\") {\r\n    return (\r\n      <Grid\r\n        style={{ height: \"100%\" }}\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <FilterSlider\r\n          //@ts-ignore\r\n          sliderData={{\r\n            ...filter,\r\n            // @ts-ignore\r\n            value: filteredData.some((item) => item.title === filter.title)\r\n              ? filteredData.find((item) => item.title === filter.title)?.value\r\n              : [(filter as ISliderFilter).min, (filter as ISliderFilter).max],\r\n          }}\r\n          onChange={(value, isClear) =>\r\n            onFilterValueChange(\r\n              {\r\n                type: filter.type,\r\n                title: filter.title,\r\n                value: value,\r\n                valueType: (filter as ISliderFilter).valueType,\r\n              },\r\n              isClear ? \"REMOVE\" : \"ADD\"\r\n            )\r\n          }\r\n          // handleSliderCommitFunc={handleSliderCommit}\r\n          // changeFilteredArrayFunc={handleFilterSliderChange}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx",["616","617","618"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Lecture, Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LectureView } from \"./LectureView\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst defaultLecture = {\r\n  id: 0,\r\n  name: \"Lecture name is here...\",\r\n  type: \"\",\r\n  file: {\r\n    title: \"Title\",\r\n    body: \"\",\r\n  },\r\n};\r\n\r\nexport function WeekView({\r\n  week,\r\n  onWeekChange,\r\n  onWeekRemove,\r\n  weekNo,\r\n}: {\r\n  week: Week;\r\n  onWeekChange: (Week) => void;\r\n  onWeekRemove: () => void;\r\n  weekNo: number;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [lectures, setLectures] = useState(week.lectures);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(week.title);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(week.title);\r\n    // handleOnLectureAdd;\r\n  }, []);\r\n\r\n  function handleOnLectureChange(index, lecture) {\r\n    week.lectures.splice(index, 1, lecture);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n  function handleOnLectureAdd() {\r\n    let lectures = [\r\n      ...week.lectures,\r\n      new Lecture().setLectureNo(week.lectures.length + 1),\r\n    ];\r\n    onWeekChange({ ...week, lectures: lectures });\r\n    setLectures(lectures);\r\n  }\r\n  function handleOnLectureRemove(index) {\r\n    if (lectures.length == 1) {\r\n      enqueueSnackbar(\"There must be at least one lecture in a week\", {\r\n        variant: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n    week.lectures.splice(index, 1);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n\r\n  return (\r\n    <Accordion style={{ width: \"100%\" }}>\r\n      <AccordionSummary expandIcon={<ExpandMore />}>\r\n        {/* <IconButton>\r\n          <ImportExport />\r\n        </IconButton> */}\r\n        {!editMode && (\r\n          <Grid container alignItems=\"center\" direction=\"row\" wrap=\"nowrap\">\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  setEditMode(true);\r\n                }}\r\n              >\r\n                <Edit />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  onWeekRemove();\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Week {weekNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> {fieldValue}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container wrap=\"nowrap\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={fieldValue}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Week name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onWeekChange({ ...week, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(week.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n          > */}\r\n\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n            style={{ width: \"100%\" }}\r\n          > */}\r\n          {lectures.map((item, index) => (\r\n            <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n              <LectureView\r\n                lecture={item}\r\n                lectureNo={index + 1}\r\n                onLectureChange={(lecture) =>\r\n                  handleOnLectureChange(index, lecture)\r\n                }\r\n                onLectureRemove={() => handleOnLectureRemove(index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          {/* </ReactSortable> */}\r\n          <Grid\r\n            item\r\n            container\r\n            justifyContent=\"center\"\r\n            style={{ marginTop: 10 }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddCircle />}\r\n              onClick={handleOnLectureAdd}\r\n            >\r\n              ADD LECTURE\r\n            </Button>\r\n          </Grid>\r\n          {/* </ReactSortable> */}\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx",["619","620","621","622"],"import axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\n\r\nexport class Files {\r\n  id: number;\r\n  type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\";\r\n  title: string;\r\n  content: any;\r\n  uploadTime: Date;\r\n  lastUpdateTime: Date;\r\n\r\n  constructor(\r\n    type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\",\r\n    title: string = \"\"\r\n  ) {\r\n    this.type = type;\r\n    this.title = title;\r\n  }\r\n  setFile(file: FileObject): Files {\r\n    console.log(\"In File: \", file);\r\n    this.content = file;\r\n    return this;\r\n  }\r\n  setTitle(title: string): Files {\r\n    this.title = title;\r\n    return this;\r\n  }\r\n  setContent(content: string): Files {\r\n    this.content = content;\r\n    return this;\r\n  }\r\n  setId(id: number): Files {\r\n    this.id = id;\r\n    return this;\r\n  }\r\n  async upload() {\r\n    if (this.type == \"VIDEO\" || this.type == \"PICTURE\" || this.type == \"PDF\") {\r\n      if (this.content.file) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.content.file);\r\n        formData.append(\"type\", this.type);\r\n        formData.append(\"secure\", this.type != \"PICTURE\" ? \"true\" : \"false\");\r\n        await axios\r\n          .put(GLOBAL.HOST + `/resources/upload`, formData, authHeaders())\r\n          .then((response) => {\r\n            this.content = response.data.uri;\r\n            console.log(1);\r\n            console.log(\"File url: \", response.data);\r\n          });\r\n      }\r\n    }\r\n    return await Promise.resolve();\r\n  }\r\n}\r\n\r\nexport {};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx",["623","624","625","626"],"import {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  CardActionArea,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Popover,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\nimport { Files } from \"classes/Files\";\r\nimport classNames from \"classnames\";\r\nimport AuthService, { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport { TopNav } from \"./NavBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#2D394B\",\r\n    flexGrow: 1,\r\n    padding: 5,\r\n    \"& > *\": {\r\n      color: \"white\",\r\n    },\r\n    \"& input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& fieldset\": {\r\n      border: \"2px solid white\",\r\n    },\r\n    \"& fieldset:focus\": {\r\n      border: \"2px solid gray\",\r\n    },\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  title: {\r\n    display: \"block-inline\",\r\n    textAlign: \"center\",\r\n    marginLeft: theme.spacing(1),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexGrow: 1,\r\n      padding: 0,\r\n    },\r\n    color: \"inherit\",\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n  },\r\n  inputRoot: {\r\n    flexGrow: 1,\r\n    color: \"inherit\",\r\n    borderRadius: \"35px\",\r\n    padding: theme.spacing(0, 2, 0, 3),\r\n    margin: theme.spacing(0, 3),\r\n  },\r\n}));\r\n\r\nexport function Header() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [photo, setPhoto] = useState<Files>();\r\n  useEffect(() => {\r\n    setPhoto(AuthService.getPhoto());\r\n    // PersonService.getProfilePhoto().then((response) => {\r\n    //   console.log(\"Profile photo fetched\", response.data);\r\n    //   setPhoto(response.data);\r\n    // });\r\n  }, []);\r\n\r\n  function profileDetailsLoad() {\r\n    if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n      axios\r\n        .get(GLOBAL.HOST + \"/get-teacher-self\", authHeaders())\r\n        .then((response) => {\r\n          console.log(\"Person data from header\", response);\r\n          history.push({\r\n            pathname: \"/profile-details\",\r\n            state: {\r\n              person: response.data,\r\n              registered: true,\r\n            },\r\n          });\r\n        });\r\n    } else if (AuthService.getCurrentAccountType() == \"Student\") {\r\n      axios\r\n        .get(GLOBAL.HOST + \"/get-student-self\", authHeaders())\r\n        .then((response) => {\r\n          console.log(\"Person data from header\", response);\r\n          history.push({\r\n            pathname: \"/profile-details\",\r\n            state: {\r\n              person: response.data,\r\n              registered: true,\r\n            },\r\n          });\r\n        });\r\n    }\r\n    // PersonService.getPersonSelf().then((response) => {\r\n    //   console.log(\"Person data from header\", response);\r\n    //   history.push({\r\n    //     pathname: \"/profile-details\",\r\n    //     state: {\r\n    //       person: response.data,\r\n    //       registered: true,\r\n    //     },\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  const popUpNavProperty = {\r\n    admin: [\r\n      // { label: \"My Course\", link: \"/my-course\" },\r\n      // { label: \"Purchase History\", link: \"/dashboard/purchase-history\" },\r\n      // { label: \"My Review\", link: \"/dashboard/review\" },\r\n      // { label: \"FAQ\", link: \"/dashboard/faq\" },\r\n      // { label: \"Account Setting\", link: \"/profile-details\" },\r\n      // { label: \"Sign out\", link: \"/auth/signin\" },\r\n      // { label: \"Overview\", link: \"/dashboard/overview\" },\r\n      // { label: \"Create a course\", link: \"/create-course\" },\r\n      // { label: \"Student's Review\", link: \"/dashboard/review\" },\r\n      {\r\n        label: \"Account Setting\",\r\n        func: profileDetailsLoad,\r\n      },\r\n      {\r\n        label: \"Sign out\",\r\n        link: \"/auth/signin\",\r\n        func: () => {\r\n          AuthService.logout();\r\n          history.push(\"/auth/signin\");\r\n        },\r\n      },\r\n    ],\r\n    teacher: [\r\n      {\r\n        label: \"Overview\",\r\n        func: () => {\r\n          history.push(\"/dashboard/overview\");\r\n        },\r\n      },\r\n      {\r\n        label: \"Create a course\",\r\n        func: () => {\r\n          history.push(\"/create-course\");\r\n        },\r\n      },\r\n      {\r\n        label: \"My Course\",\r\n        func: () => {\r\n          history.push(\"/my-course\");\r\n        },\r\n      },\r\n      {\r\n        label: \"Student's Review\",\r\n        func: () => {\r\n          history.push(\"/dashboard/review\");\r\n        },\r\n      },\r\n      {\r\n        label: \"FAQ\",\r\n        func: () => {\r\n          history.push(\"/dashboard/faq\");\r\n        },\r\n      },\r\n      {\r\n        label: \"Account Setting\",\r\n        func: profileDetailsLoad,\r\n      },\r\n      {\r\n        label: \"Sign out\",\r\n        func: () => {\r\n          AuthService.logout();\r\n          history.push(\"/auth/signin\");\r\n        },\r\n      },\r\n    ],\r\n    student: [\r\n      {\r\n        label: \"My Purchased Course\",\r\n        func: () => {\r\n          history.push(\"/my-course\");\r\n        },\r\n      },\r\n      {\r\n        label: \"Purchase History\",\r\n        func: () => {\r\n          history.push(\"/dashboard/purchase-history\");\r\n        },\r\n      },\r\n      {\r\n        label: \"My Review\",\r\n        func: () => {\r\n          history.push(\"/dashboard/review\");\r\n        },\r\n      },\r\n      {\r\n        label: \"FAQ\",\r\n        func: () => {\r\n          history.push(\"/dashboard/faq\");\r\n        },\r\n      },\r\n      {\r\n        label: \"Account Setting\",\r\n        func: profileDetailsLoad,\r\n      },\r\n      {\r\n        label: \"Sign out\",\r\n        func: () => {\r\n          AuthService.logout();\r\n          history.push(\"/auth/signin\");\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [popUpNav, setPopUpNav] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Admin\":\r\n        setPopUpNav(popUpNavProperty.admin);\r\n        break;\r\n      case \"Student\":\r\n        setPopUpNav(popUpNavProperty.student);\r\n        break;\r\n      case \"Teacher\":\r\n        setPopUpNav(popUpNavProperty.teacher);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  function Logo() {\r\n    const classes = useStyles();\r\n    return (\r\n      <>\r\n        <img\r\n          className={classes.logo}\r\n          src={require(\"assets/img/CourseOverflowIcon.png\").default}\r\n        />\r\n        <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Course Bucket\r\n          </Typography>\r\n        </Responsive>\r\n        <Responsive displayIn={[\"Mobile\"]}>\r\n          <Grid className={classes.title} item>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Course\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Bucket\r\n            </Typography>\r\n          </Grid>\r\n        </Responsive>\r\n      </>\r\n    );\r\n  }\r\n  function SearchBox(props) {\r\n    const classes = useStyles();\r\n    return (\r\n      <div className={classNames(classes.inputRoot, props.className)}>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item className={classes.input}>\r\n            <TextField\r\n              placeholder=\"Search course...\"\r\n              fullWidth\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                type: \"search\",\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function IconSet() {\r\n    const [anchorRef, setAnchorRef] = useState<HTMLButtonElement | null>(null);\r\n\r\n    return (\r\n      <>\r\n        {AuthService.isLogin() ? (\r\n          <>\r\n            <IconButton>\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon fontSize=\"large\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <Grid style={{ display: \"flex\" }}>\r\n              <IconButton\r\n                onClick={(event: React.MouseEvent<any>) =>\r\n                  setAnchorRef(event.currentTarget)\r\n                }\r\n              >\r\n                <Avatar src={photo?.content} />\r\n              </IconButton>\r\n              <Popover\r\n                open={Boolean(anchorRef)}\r\n                anchorEl={anchorRef}\r\n                onClose={() => setAnchorRef(null)}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column\">\r\n                  <Grid item onClick={profileDetailsLoad}>\r\n                    <CardActionArea style={{ padding: 16 }}>\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        wrap=\"nowrap\"\r\n                        spacing={1}\r\n                      >\r\n                        <Grid item>\r\n                          <Avatar src={photo?.content} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography>Signed in as</Typography>\r\n                          <Typography variant=\"h6\">\r\n                            {AuthService.getCurrentUser().username}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {AuthService.getCurrentUser().email}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardActionArea>\r\n                  </Grid>\r\n                  <Divider />\r\n                  <Grid item>\r\n                    <List>\r\n                      {popUpNav.map((item) => (\r\n                        <ListItem\r\n                          key={item.label}\r\n                          button\r\n                          onClick={(event) => {\r\n                            item.func();\r\n                          }}\r\n                        >\r\n                          {item.label}\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n              </Popover>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(event) => {\r\n                history.push(\"/auth/signin\");\r\n              }}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </Responsive>\r\n        )}\r\n        {/* <SideNav>\r\n          <IconButton>\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </SideNav> */}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Toolbar className={classes.root}>\r\n          <Grid container direction=\"column\" style={{ flexGrow: 1 }}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-end\"\r\n            >\r\n              <Logo />\r\n              <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n                <SearchBox />\r\n              </Responsive>\r\n              <IconSet />\r\n            </Grid>\r\n            <Responsive displayIn={\"Mobile\"}>\r\n              <Grid container direction=\"row\">\r\n                <SearchBox />\r\n              </Grid>\r\n            </Responsive>\r\n          </Grid>\r\n        </Toolbar>\r\n        <TopNav />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx",[],["627","628"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx",["629","630","631"],"import { Grid, InputAdornment, Slider, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { IFilteredValue, ISliderFilter } from \"../SearchPage\";\r\n\r\nexport function FilterSlider({\r\n  sliderData,\r\n  onChange,\r\n}: {\r\n  sliderData: ISliderFilter;\r\n  onChange: (value: number[], isClear: boolean) => void;\r\n}) {\r\n  const [value, setValue] = React.useState(sliderData.value);\r\n  useEffect(() => {\r\n    setValue(sliderData.value);\r\n  }, [sliderData.value]);\r\n\r\n  async function handleSliderChange(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    // changeFilteredArrayFunc({ filterType: filterType, min: newValue[0], max: newValue[1] });\r\n  }\r\n  function handleSliderCommit(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    onChange(value, value[0] == sliderData.min && value[1] == sliderData.max);\r\n    // let newObject = object;\r\n    // newObject.value = newValue;\r\n    // onObjectChange(newObject);\r\n  }\r\n\r\n  function handleInputChangeMin(minValue) {\r\n    setValue([Math.min(minValue, value[1]), Math.max(minValue, value[1])]);\r\n  }\r\n  function handleInputChangeMax(maxValue) {\r\n    setValue([Math.min(value[0], maxValue), Math.max(value[0], maxValue)]);\r\n  }\r\n  function handleOnBlurMin(minValue) {\r\n    var newVal = Number(minValue);\r\n    minValue = minValue === \"\" ? 0 : newVal;\r\n    var maxValue = value[1];\r\n\r\n    if (newVal < sliderData.min) minValue = sliderData.min;\r\n    if (newVal > sliderData.max) minValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  }\r\n  const handleOnBlurMax = (maxValue) => {\r\n    var newVal = Number(maxValue);\r\n    var minValue = value[0];\r\n    maxValue = maxValue === \"\" ? 0 : newVal;\r\n\r\n    if (newVal < sliderData.min) maxValue = sliderData.min;\r\n    if (newVal > sliderData.max) maxValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  };\r\n  function generateMarks() {\r\n    var ara: Array<{ value: number; label: string }> = [];\r\n    for (\r\n      var i = sliderData.min;\r\n      i <= sliderData.max;\r\n      i = i + (sliderData.max - sliderData.min) / 5\r\n    ) {\r\n      ara.push({ value: i, label: \"\" + i + sliderData.valueType });\r\n    }\r\n    return ara;\r\n  }\r\n\r\n  return (\r\n    <Grid container xs spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          min={sliderData.min}\r\n          max={sliderData.max}\r\n          step={sliderData.step}\r\n          value={value}\r\n          onChange={(event, newValue) => handleSliderChange(newValue)}\r\n          onChangeCommitted={(event, newValue) => handleSliderCommit(newValue)}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          marks={generateMarks()}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Min value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[0]}\r\n          onChange={(event) => handleInputChangeMin(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMin(event.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Max value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[1]}\r\n          onChange={(event) => handleInputChangeMax(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMax(event.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx",["632","633","634","635","636","637","638","639","640"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n  PictureAsPdf,\r\n  TextFields,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { Lecture } from \"classes/Course\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ArticleInput } from \"./ArticleInput\";\r\nimport { ArticleOutput } from \"./ArticleOutput\";\r\nimport { LinkInput } from \"./LinkInput\";\r\nimport { LinkOutput } from \"./LinkOutput\";\r\nimport { PDFInput } from \"./PDFInput\";\r\nimport { PDFOutput } from \"./PDFOutput\";\r\nimport { VideoInput } from \"./VideoInput\";\r\nimport { VideoOutput } from \"./VideoOutput\";\r\n\r\nexport function LectureView({\r\n  lecture,\r\n  lectureNo,\r\n  onLectureChange,\r\n  onLectureRemove,\r\n}: {\r\n  lecture: Lecture;\r\n  lectureNo: number;\r\n  onLectureChange: (Lecture) => void;\r\n  onLectureRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(lecture.title);\r\n  const [body, setBody] = useState(\"LECTURE_TYPE\");\r\n  const [preview, setPreview] = useState(false);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    setBody(\r\n      lecture?.file?.type ? lecture?.file?.type + \"_OUTPUT\" : \"LECTURE_TYPE\"\r\n    );\r\n  }, [lecture.title]);\r\n\r\n  // function handleBodyChange(body) {\r\n  //   setState({ ...state, body: body });\r\n  // }\r\n  // function handleContentClick(panel) {\r\n  //   setState({\r\n  //     ...state,\r\n  //     expanded: state.contentClicked ? '' : panel\r\n  //   })\r\n  // }\r\n  function handleOnSave(file) {\r\n    console.log(file);\r\n    let error = false;\r\n    if (file.title == \"\" || file.title == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Title is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (file.content == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Content is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"VIDEO file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"PDF file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link details is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (error) {\r\n      return;\r\n    }\r\n    onLectureChange({ ...lecture, file: file });\r\n    setBody(file.type + \"_OUTPUT\");\r\n  }\r\n  function handleOnCancel() {\r\n    setBody(\r\n      lecture.file == undefined ? \"LECTURE_TYPE\" : lecture.file.type + \"_OUTPUT\"\r\n    );\r\n  }\r\n  function handleOnUpdate() {\r\n    setBody(lecture.file.type + \"_INPUT\");\r\n  }\r\n  function handlePreviewChange(event) {\r\n    setPreview(!preview);\r\n    onLectureChange({ ...lecture, isPreview: !preview });\r\n  }\r\n\r\n  function LectureType() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton onClick={(event) => setBody(\"ARTICLE_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <TextFields />\r\n            <Typography>Article</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"VIDEO_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <VideoCall />\r\n            <Typography>Video</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"PDF_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <PictureAsPdf />\r\n            <Typography>PDF</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"LINK_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <LinkIcon />\r\n            <Typography>Link</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function LectureRow() {\r\n    return (\r\n      <>\r\n        {!editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item>\r\n              <Tooltip\r\n                title={\r\n                  preview\r\n                    ? \"This lecture is set as preview\"\r\n                    : \"Do you want to set this lecture as preview?\"\r\n                }\r\n                TransitionComponent={Zoom}\r\n                arrow\r\n              >\r\n                <span onClick={(event) => event.stopPropagation()}>\r\n                  <Checkbox checked={preview} onChange={handlePreviewChange} />\r\n                </span>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(true);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Edit />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  onLectureRemove();\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Lecture {lectureNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container>\r\n              <Typography> {lecture.title}</Typography>\r\n            </Grid>\r\n            {!expanded && lecture.file == undefined && (\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\r\n                    Content +\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            {expanded && lecture.file == undefined && (\r\n              <Grid item>\r\n                <IconButton\r\n                  onClick={(event) => {\r\n                    setBody(\"LECTURE_TYPE\");\r\n                  }}\r\n                >\r\n                  <Cancel />\r\n                </IconButton>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={lecture.title}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Lecture name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onLectureChange({ ...lecture, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(lecture.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      key={lecture.id}\r\n      expanded={expanded}\r\n      style={{ backgroundColor: \"pink\", width: \"100%\" }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={lecture.file != undefined && <ExpandMore />}\r\n        onClick={() => setExpanded(!expanded)}\r\n      >\r\n        <LectureRow />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {body === \"LECTURE_TYPE\" && <LectureType />}\r\n\r\n        {body === \"ARTICLE_INPUT\" && (\r\n          <ArticleInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"ARTICLE_OUTPUT\" && (\r\n          <ArticleOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"LINK_INPUT\" && (\r\n          <LinkInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"LINK_OUTPUT\" && (\r\n          <LinkOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"VIDEO_INPUT\" && (\r\n          <VideoInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_OUTPUT\" && (\r\n          <VideoOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n        {body === \"PDF_INPUT\" && (\r\n          <PDFInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"PDF_OUTPUT\" && (\r\n          <PDFOutput file={lecture.file} onUpdate={handleOnUpdate} />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js",["641","642","643","644","645","646","647","648"],"import { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FaPinterestSquare, FaTwitterSquare } from \"react-icons/fa\";\r\nimport {\r\n  ImFacebook2,\r\n  ImInstagram,\r\n  ImLinkedin,\r\n  ImYoutube,\r\n} from \"react-icons/im\";\r\nimport \"./SimpleReactFooter.sass\";\r\n\r\nclass SimpleReactFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.props.backgroundColor || \"bisque\" }}\r\n        className=\"footer-container\"\r\n      >\r\n        <Grid container>\r\n          <Grid className=\"grid-item\" item md={6} sm={12}>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"first-title\"\r\n            >\r\n              {this.props.title}\r\n            </div>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"description\"\r\n            >\r\n              {this.props.description}\r\n            </div>\r\n          </Grid>\r\n          <Grid container md={6}>\r\n            {this.props.columns.map((column) => (\r\n              <Grid className=\"grid-item\" item sm={3} xs={6}>\r\n                <div\r\n                  style={{ color: this.props.fontColor || \"black\" }}\r\n                  className=\"second-title\"\r\n                >\r\n                  {column.title}\r\n                </div>\r\n                {column.resources.map((resource) => (\r\n                  <div key={resource.id}>\r\n                    <a\r\n                      href={`${resource.link}`}\r\n                      target=\"_blank\"\r\n                      style={{ color: this.props.fontColor || \"black\" }}\r\n                      className=\"resources\"\r\n                    >\r\n                      {resource.name}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        {this.props.facebook !== undefined ||\r\n        this.props.linkedin !== undefined ||\r\n        this.props.instagram !== undefined ||\r\n        this.props.twitter !== undefined ||\r\n        this.props.pinterest !== undefined ||\r\n        this.props.youtube !== undefined ? (\r\n          <div className=\"social-media-col\">\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"stay-connected-title\"\r\n            >\r\n              Stay connected\r\n            </div>\r\n            <div className=\"social-media\">\r\n              {this.props.facebook !== undefined ? (\r\n                <a\r\n                  href={`https://www.facebook.com/${this.props.facebook}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImFacebook2\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.linkedin !== undefined ? (\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${this.props.linkedin}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImLinkedin\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.instagram !== undefined ? (\r\n                <a\r\n                  href={`https://www.instagram.com/${this.props.instagram}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImInstagram\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.twitter !== undefined ? (\r\n                <a\r\n                  href={`https://www.twitter.com/${this.props.twitter}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaTwitterSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.pinterest !== undefined ? (\r\n                <a\r\n                  href={`https://www.pinterest.com/${this.props.pinterest}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaPinterestSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.youtube !== undefined ? (\r\n                <a\r\n                  href={`https://www.youtube.com/channel/${this.props.youtube}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImYoutube\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div>\r\n          <div\r\n            style={{ color: this.props.copyrightColor || \"grey\" }}\r\n            className=\"copyright\"\r\n          >\r\n            Copyright &copy; {this.props.copyright}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleReactFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  linkedin: PropTypes.string,\r\n  instagram: PropTypes.string,\r\n  facebook: PropTypes.string,\r\n  youtube: PropTypes.string,\r\n  pinterest: PropTypes.string,\r\n  title: PropTypes.string,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      resources: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          link: PropTypes.string,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n  copyright: PropTypes.string,\r\n  iconColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  copyrightColor: PropTypes.string,\r\n};\r\n\r\nexport default SimpleReactFooter;\r\n",["649","650"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx",["651","652","653"],"import { Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { alpha, makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport { Category, CategoryTreeNode } from \"classes/Category\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\"; // web.cjs is required for IE 11 support\r\n\r\nfunction MinusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n  return (\r\n    <SvgIcon\r\n      className=\"close\"\r\n      fontSize=\"inherit\"\r\n      style={{ width: 14, height: 14 }}\r\n      {...props}\r\n    >\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n  const style = useSpring({\r\n    from: { opacity: 0, transform: \"translate3d(20px,0,0)\" },\r\n    to: {\r\n      opacity: props.in ? 1 : 0,\r\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={style}>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = withStyles((theme) => ({\r\n  iconContainer: {\r\n    \"& .close\": {\r\n      opacity: 0.3,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 7,\r\n    paddingLeft: 18,\r\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n  },\r\n}))(\r\n  (props: {\r\n    label: string;\r\n    checked: boolean;\r\n    onChange: (checked: boolean) => void;\r\n    nodeId: number;\r\n    children?: any;\r\n    key: number;\r\n  }) => {\r\n    const [checked, setChecked] = useState(false);\r\n    useEffect(() => {\r\n      setChecked(props.checked);\r\n    }, [props.checked]);\r\n\r\n    return (\r\n      <TreeItem\r\n        key={props.key}\r\n        children={props.children}\r\n        nodeId={props.nodeId + \"\"}\r\n        onLabelClick={(event) => {\r\n          // @ts-ignore\r\n          if (event.target.type === \"checkbox\") {\r\n            event.preventDefault();\r\n          }\r\n        }}\r\n        label={\r\n          <>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={checked}\r\n                  onChange={(event) => {\r\n                    props.onChange(!checked);\r\n                    setChecked(!checked);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"\"\r\n            />\r\n            <Typography display=\"inline\">{props.label}</Typography>\r\n          </>\r\n        }\r\n        // TransitionComponent={TransitionComponent}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\nlet i = 1;\r\n\r\nexport function CategorySelector({\r\n  categories,\r\n  selectedCategories,\r\n  onCategorySelectionChange,\r\n}: {\r\n  categories: Array<CategoryTreeNode>;\r\n  selectedCategories: Array<Category>;\r\n  onCategorySelectionChange: (\r\n    category: Category,\r\n    type: \"ADD\" | \"REMOVE\"\r\n  ) => void;\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function ExploreData({ data }: { data: Array<CategoryTreeNode> }): any {\r\n    function handleDataChange(item: Category, checked: boolean) {\r\n      onCategorySelectionChange(item, checked ? \"ADD\" : \"REMOVE\");\r\n    }\r\n    return data.map((item, index) =>\r\n      item.child.length > 0 ? (\r\n        <StyledTreeItem\r\n          key={item.category.id}\r\n          nodeId={item.category.id}\r\n          label={item.category.name}\r\n          checked={selectedCategories.some(\r\n            (selectedCategory) => selectedCategory.id == item.category.id\r\n          )}\r\n          onChange={(checked) => handleDataChange(item.category, checked)}\r\n        >\r\n          <ExploreData data={item.child} />\r\n        </StyledTreeItem>\r\n      ) : (\r\n        <StyledTreeItem\r\n          key={item.category.id}\r\n          nodeId={item.category.id}\r\n          label={item.category.name}\r\n          checked={selectedCategories.some(\r\n            (selectedCategory) => selectedCategory.id == item.category.id\r\n          )}\r\n          onChange={(checked) => handleDataChange(item.category, checked)}\r\n        />\r\n      )\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<MinusSquare />}\r\n        defaultExpandIcon={<PlusSquare />}\r\n        defaultEndIcon={<CloseSquare />}\r\n      >\r\n        <ExploreData data={categories} />\r\n      </TreeView>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx",["654"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport VideoPlayer from \"tools/customDesign/VideoPlayer\";\r\n\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function VideoOutput({ file, onUpdate }: LectureOutputProps) {\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      <VideoPlayer\r\n        url={\r\n          file?.content?.file\r\n            ? URL.createObjectURL(file?.content?.file)\r\n            : file.content\r\n        }\r\n      />\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.title} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx",["655","656","657","658","659","660","661"],"import { Button, Link } from \"@material-ui/core\";\r\nimport { CloudDownloadRounded } from \"@material-ui/icons\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function PDFOutput({ file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <OutputLayout onUpdate={onUpdate}>\r\n      {/* <PDFViewer url={URL.createObjectURL(file?.content?.file)} /> */}\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.title} />\r\n      <Link\r\n        href={\r\n          file?.content?.file\r\n            ? URL.createObjectURL(file?.content?.file)\r\n            : file?.content\r\n        }\r\n      >\r\n        <Button style={{ color: \"green\" }} startIcon={<CloudDownloadRounded />}>\r\n          Download\r\n        </Button>\r\n      </Link>\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx",["662","663"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\n\r\nexport function PDFInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTitle] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setTitle(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"PDF\", title).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <FileUploader\r\n        fileObjects={file?.content?.file ? [file.content] : []}\r\n        filesLimit={1}\r\n        type=\"pdf\"\r\n        onChange={(files) => setContent(files[0])}\r\n      />\r\n      <TextEditor value={file?.title} onChange={(value) => setTitle(value)} />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx",["664"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { Category } from \"classes/Category\";\r\nimport React from \"react\";\r\n\r\n// let CSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    backgroundColor: \"#ffc107\",\r\n    padding: 8,\r\n  },\r\n  menuItemWrapper: {\r\n    height: \"auto\",\r\n  },\r\n  menu: {\r\n    cursor: \"pointer\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"space-between\",\r\n      borderBottom: \"1px solid black\",\r\n    },\r\n  },\r\n  subMenuContainer: {\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fd7e14\",\r\n    zIndex: 100,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"relative\",\r\n      marginLeft: \"20px\",\r\n      // right: \"80%\",\r\n      // width: \"100%\",\r\n    },\r\n  },\r\n  subMenuItem: {\r\n    padding: theme.spacing(1, 3),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  signInBtn: {\r\n    justify: \"start\",\r\n    label: {\r\n      justify: \"start\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const menuItems = {\r\n  defaultExpanded: [],\r\n  data: [\r\n    {\r\n      title: \"Menu 1\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 2\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 1\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 2\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 3\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 3\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 4\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 5\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 6\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 7\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 8\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport function SubMenu({\r\n  subCategories,\r\n  open,\r\n}: {\r\n  subCategories: Category[];\r\n  open: boolean;\r\n}) {\r\n  const classes = useStyles();\r\n  if (!subCategories.length) return <></>;\r\n  else\r\n    return (\r\n      <div className={classes.subMenuContainer}>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {subCategories.map((item) => (\r\n              <ListItem className={classes.subMenuItem} button key={item.id}>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction Menu({ mainCategory }: { mainCategory: Category }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleMouseEnterLeave = (doOpen) => {\r\n    if (mainCategory.children.length) {\r\n      setOpen(doOpen);\r\n    }\r\n  };\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.menuItemWrapper}\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n    >\r\n      {mainCategory.name}\r\n      {mainCategory.children.length > 0 && !open ? (\r\n        <ExpandMore />\r\n      ) : (\r\n        <ExpandLess />\r\n      )}\r\n      <SubMenu subCategories={mainCategory.children} open={open} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function MenuBar({ mainCategories }: { mainCategories: Category[] }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-around\" direction=\"row\">\r\n      {mainCategories.map((mainCategory) => (\r\n        <Grid item className={classes.menu} key={mainCategory.id}>\r\n          <Menu mainCategory={mainCategory} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx",["665","666"],"import { TextField } from \"@material-ui/core\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\n\r\nexport function LinkInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [link, setLink] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setLink(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"LINK\", link).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <TextEditor\r\n        value={file?.content}\r\n        onChange={(value) => setContent(value)}\r\n      />\r\n      <TextField\r\n        label=\"Source Link\"\r\n        variant=\"outlined\"\r\n        defaultValue={link}\r\n        onBlur={(event) => setLink(event.target.value)}\r\n        InputProps={{\r\n          startAdornment: \"http://\",\r\n        }}\r\n      />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js",["667"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport CountryService from '../AdminPanel/api/CountryService.js';\r\n\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllCountries()\r\n\r\n  function getAllCountries() {\r\n    CountryService.getAllCountries()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCountries() {\r\n    useEffect(() => { getAllCountries() }, []);\r\n  }\r\n\r\n  function CallupdateCountry(country) {\r\n\r\n    CountryService.updateCountry(country)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n  }\r\n  function CalldeleteCountry(id) {\r\n\r\n    CountryService.deleteCountry(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  function CalladdCountry(country) {\r\n\r\n    CountryService.addCountry(country)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Country\"\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                //console.log(newData.id)\r\n                CalladdCountry(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                //setData([...dataUpdate]);\r\n                CallupdateCountry(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete])\r\n                CalldeleteCountry(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default CountryComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js",["668","669"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport DesignationService from '../AdminPanel/api/DesignationService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction DesignationComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Designation ', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllDesignations()\r\n\r\n\r\n  function getAllDesignations() {\r\n    DesignationService.getAllDesignation()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllDesignations() {\r\n    useEffect(() => { getAllDesignations() }, []);\r\n  }\r\n\r\n  function CallupdateDesignation(designation) {\r\n\r\n    DesignationService.updateDesignation(designation)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteDesignation(id) {\r\n\r\n    DesignationService.deleteDesignation(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdDesignation(designation) {\r\n\r\n    DesignationService.addDesignation(designation)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Designation\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdDesignation(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateDesignation(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteDesignation(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DesignationComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx",["670","671","672","673"],"import {\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport { Course } from \"classes/Course\";\r\nimport CategoryService from \"components/AdminPanel/api/CategoryService\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\n\r\nexport function LandingPage({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  const [categories, setCategories] = useState<Category[]>();\r\n  const [subCategories, setSubCategories] = useState<Category[]>();\r\n  const [mainCategoryId, setMainCategoryId] = useState(0);\r\n  const [subCategoryId, setSubCategoryId] = useState(0);\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    subTitle: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  // const [course, setCourse] = useState(course);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      title: course.title,\r\n      subTitle: course.subTitle,\r\n      description: course.description,\r\n    });\r\n    CategoryService.getCategories().then((response) => {\r\n      console.log(response.data);\r\n      setCategories(response.data[0].children);\r\n      console.log(\"Course\", course);\r\n      if (course.mainCategory) {\r\n        setMainCategoryId(course.mainCategory.id);\r\n        setSubCategories(\r\n          response.data[0].children.filter(\r\n            (item) => item.id == course.mainCategory.id\r\n          )[0].children\r\n        );\r\n      }\r\n      if (course.subCategory) setSubCategoryId(course.subCategory.id);\r\n    });\r\n    return () => {\r\n      // setCategories([]);\r\n      // setSubCategories([]);\r\n    };\r\n  }, [course]);\r\n  console.log(\"cover\", course.cover);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"space-between\" spacing={2}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignContent=\"space-between\"\r\n              spacing={2}\r\n            >\r\n              <Grid item container>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course title\"\r\n                  value={state.title}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    setState({ ...state, title: event.target.value })\r\n                  }\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ title: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course subtitle\"\r\n                  value={state.subTitle}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, subTitle: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ subTitle: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course description\"\r\n                  value={state.description}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, description: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ description: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <LanguageField\r\n                  objects={course.languages}\r\n                  onObjectsChange={(languages) =>\r\n                    onCourseAttrChange({ languages: languages })\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n                  Category\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                {/* <Typography>Category</Typography> */}\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Main Category</InputLabel>\r\n                  <Select\r\n                    value={mainCategoryId}\r\n                    onChange={(event) => {\r\n                      if (event.target.value != 0) {\r\n                        setMainCategoryId(event.target.value as number);\r\n                        setSubCategories(\r\n                          categories?.filter(\r\n                            (item) => item.id == event.target.value\r\n                          )[0].children\r\n                        );\r\n                        setSubCategoryId(0);\r\n                        onCourseAttrChange({\r\n                          mainCategory: categories?.filter(\r\n                            (cat) => cat.id === (event.target.value as number)\r\n                          )[0],\r\n                        });\r\n                      }\r\n                    }}\r\n                    label=\"Main Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {console.log(categories)}\r\n                    {categories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Sub Category</InputLabel>\r\n                  <Select\r\n                    value={subCategoryId}\r\n                    onChange={(event) => {\r\n                      setSubCategoryId(event.target.value as number);\r\n                      onCourseAttrChange({\r\n                        subCategory: subCategories?.filter(\r\n                          (cat) => cat.id === (event.target.value as number)\r\n                        )[0],\r\n                      });\r\n                    }}\r\n                    label=\"Sub Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {subCategories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container>\r\n              <ImageUploader\r\n                title=\"Course Cover\"\r\n                imageDestination={course.cover}\r\n                onSetClick={(file) => {\r\n                  onCourseAttrChange({ cover: file });\r\n                }}\r\n                onDeleteClick={() => {\r\n                  onCourseAttrChange({ cover: undefined });\r\n                }}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n{\r\n  /* <Grid container direction=\"column\" spacing={2}>\r\n                  <Grid item container sm>\r\n                    {categories.map((category, idx) => (\r\n                      <Grid item key={category.id}>\r\n                        <Chip\r\n                          size=\"medium\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: 5,\r\n                            marginRight: 5,\r\n                          }}\r\n                          label={category.name}\r\n                          onDelete={() => {\r\n                            let array = [...categories];\r\n                            array.splice(idx, 1);\r\n                            setCategories(array);\r\n                            onCourseAttrChange({ categories: array });\r\n                          }}\r\n                          color=\"secondary\"\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                  <Grid item container justifyContent=\"center\">\r\n                    {categories.length > 0 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setCategories([])}\r\n                      >\r\n                        Clear All\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <CategorySelector\r\n                  categories={categoryList}\r\n                  selectedCategories={categories}\r\n                  onCategorySelectionChange={handleCategoriesChange}\r\n                /> */\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx",["674","675","676","677","678"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx",["679"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport Popover from \"devextreme-react/popover\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport function CoursePopularityPieChart() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-course-popularity-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            title: item.courseName,\r\n            rating: item.rating,\r\n            ratingCount: item.ratingCount,\r\n            enrolledStudentCount: item.enrolledStudentCount,\r\n            reviewCount: item.reviewCount,\r\n            value:\r\n              item.rating * 40 +\r\n              item.ratingCount * 10 +\r\n              item.enrolledStudentCount * 30 +\r\n              item.reviewCount * 20,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    console.log(arg);\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.rating} (${data.ratingCount})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.reviewCount}</Typography>\r\n        <Typography variant=\"body2\">\r\n          Enrolled Student: {data.enrolledStudentCount}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Popularity\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js",["680"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\n\r\nclass CountryService {\r\n\r\n    getAllCountries() {\r\n        return axios.get(GLOBAL.HOST + '/get-countries')\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-country/${id}`, authHeaders())\r\n    }\r\n\r\n\r\n    updateCountry(country) {\r\n        return axios.put(GLOBAL.HOST + '/update-country', country, authHeaders())\r\n    }\r\n\r\n    addCountry(country) {\r\n        return axios.post(GLOBAL.HOST + '/add-country', country, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new CountryService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx",["681"],"import { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport {\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  rating: number;\r\n}\r\nexport function RatingLineChart() {\r\n  // const dataSource: Array<ISource> = [];\r\n  // function generateRandomData() {\r\n  //   let n = 30;\r\n  //   for (let i = 0; i < n; i++) {\r\n  //     let data;\r\n  //     let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n  //     data = new Date(date).toLocaleString(\"default\", {\r\n  //       day: \"numeric\",\r\n  //       month: \"long\",\r\n  //     });\r\n  //     console.log(data);\r\n  //     dataSource.push({\r\n  //       state: data,\r\n  //       rating: Math.random() * 5,\r\n  //     });\r\n  //   }\r\n  // }\r\n  // generateRandomData();\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-cumulative-rating-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            date: new Date(item.date).toLocaleString(\"default\", {\r\n              day: \"numeric\",\r\n              month: \"long\",\r\n            }),\r\n            rating: item.rating,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n  console.log(dataSource);\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Rating\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"spline\" />\r\n          <Series valueField=\"rating\" name=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Rating\" />\r\n          </ValueAxis>\r\n          <Legend visible={false} />\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js",["682"],"import axios from \"axios\"\r\nimport { authHeaders } from \"components/auth/api/AuthService\"\r\nimport { GLOBAL } from 'Configure.js'\r\n\r\n\r\nclass CategoryService {\r\n\r\n    getCategories() {\r\n        return axios.get(GLOBAL.HOST + '/get-categories')\r\n    }\r\n\r\n    deleteCategory(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-category/${id}`)\r\n    }\r\n\r\n\r\n    updateCategory(category) {\r\n        return axios.put(GLOBAL.HOST + '/update-category', category)\r\n    }\r\n\r\n    addCategory(category) {\r\n        return axios.post(GLOBAL.HOST + '/add-category', category);\r\n    }\r\n\r\n}\r\n\r\nexport default new CategoryService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js",["683"],"import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst images = [\r\n  require('assets/banner/Banner-1.jpg'),\r\n  require('assets/banner/Banner-2.jpg'),\r\n  require('assets/banner/Banner-3.jpg'),\r\n  require('assets/banner/Banner-4.jpg'),\r\n]\r\n\r\n\r\nexport default function ImageSlider(props) {\r\n\r\n  return (\r\n    <Carousel\r\n      animation=\"slide\"\r\n      fullHeightHover={true}\r\n      stopAutoPlayOnHover={false}\r\n      timeout={500}\r\n      navButtonsProps={{\r\n        style: {\r\n          width: 20,\r\n          height: 120,\r\n          backgroundColor: 'cornflowerblue',\r\n          borderRadius: 5\r\n        }\r\n      }}\r\n      NextIcon={<ArrowForwardIosIcon />}\r\n      PrevIcon={<ArrowBackIosIcon style={{ marginLeft: 12 }} />}\r\n    >\r\n      {\r\n        images.map((src, i) => <Image key={i} src={src.default} />)\r\n      }\r\n    </Carousel >\r\n  )\r\n}\r\n\r\nfunction Image(props) {\r\n  return (\r\n    // <Grid container style={{ padding: \"0px 40px\" }}>\r\n    <img width=\"100%\" {...props} />\r\n    // </Grid>\r\n  )\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx",["684","685","686","687"],"import {\r\n  AppBar,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport User from \"./User\";\r\n\r\nconst drawerWidth = 600;\r\nconst icon = <InboxIcon />;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport interface IDrawerLayoutObject {\r\n  label: string;\r\n  urlShort?: string;\r\n  icon: JSX.Element;\r\n  content: JSX.Element;\r\n}\r\n\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value != index} {...other}>\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n}\r\nconst DrawerLayout = ({\r\n  objects,\r\n  defaultTabIndex = 2,\r\n}: {\r\n  objects: Array<IDrawerLayoutObject>;\r\n  defaultTabIndex?: number;\r\n}) => {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(defaultTabIndex);\r\n\r\n  useEffect(() => {\r\n    setTabIndex(defaultTabIndex);\r\n  }, [defaultTabIndex]);\r\n\r\n  function timeout(delay) {\r\n    return new Promise((res) => setTimeout(res, delay));\r\n  }\r\n  function handleTabIndexChange(index) {\r\n    // await timeout(100);\r\n    setTabIndex(index);\r\n  }\r\n\r\n  function DrawerList({ objects }) {\r\n    return (\r\n      <div>\r\n        <List>\r\n          {objects.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              key={item.label}\r\n              onClick={() => handleTabIndexChange(index)}\r\n            >\r\n              {/* <ListItemIcon>{<InboxIcon />}</ListItemIcon> */}\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Responsive displayIn={[\"Tablet\", \"Laptop\"]}>\r\n          <Grid container direction=\"row\">\r\n            <Grid style={{ width: drawerWidth }} item sm>\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Drawer\r\n                    classes={{\r\n                      paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ ...style, marginTop: 24, marginBottom: 24 }}\r\n                    variant=\"permanent\"\r\n                    open\r\n                  >\r\n                    <Tabs\r\n                      orientation=\"vertical\"\r\n                      value={tabIndex}\r\n                      onChange={(event, newValue) => setTabIndex(newValue)}\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                    >\r\n                      {objects.map((item, idx) => (\r\n                        <Tab label={item.label} icon={item.icon} key={idx} />\r\n                      ))}\r\n                    </Tabs>\r\n                  </Drawer>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n            <Grid item className={classes.content}>\r\n              {objects.map((item, idx) => (\r\n                <TabPanel value={tabIndex} index={idx} key={idx}>\r\n                  {item.content}\r\n                </TabPanel>\r\n              ))}\r\n              {/* {objects\r\n                .map((item) => ({ content: item.content }))\r\n                .map((item, index) => (\r\n                  <div hidden={tabIndex !== index}>{item.content}</div>\r\n                ))} */}\r\n            </Grid>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive displayIn=\"Mobile\">\r\n          <Sticky>\r\n            {({ style }) => (\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabIndex}\r\n                  onChange={(event, newValue) => setTabIndex(newValue)}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {objects.map((item, idx) => (\r\n                    <Tab label={item.label} key={idx} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            )}\r\n          </Sticky>\r\n\r\n          {objects.map((item, idx) => (\r\n            <TabPanel\r\n              value={tabIndex}\r\n              index={idx}\r\n              style={{\r\n                padding: 15,\r\n              }}\r\n              key={idx}\r\n            >\r\n              {item.content}\r\n            </TabPanel>\r\n          ))}\r\n        </Responsive>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default DrawerLayout;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx",["688","689","690","691"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx",["692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709"],"import {\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function CoursePrice({ course, onCourseAttrChange, onSave, onCancel }) {\r\n  const [offerShow, setOfferShow] = useState(false);\r\n  const [offerValue, setOfferValue] = useState(course.off ? course.off : 0);\r\n  const [mainPrice, setMainPrice] = useState(\r\n    course.mainPrice ? course.mainPrice : 0\r\n  );\r\n  useEffect(() => {\r\n    if (course.off) setOfferShow(true);\r\n  }, [course.off]);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container direction=\"column\">\r\n              <TextField\r\n                label=\"Course price\"\r\n                variant=\"outlined\"\r\n                value={mainPrice}\r\n                margin=\"normal\"\r\n                type=\"number\"\r\n                inputProps={{ min: 0 }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">৳</InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(event) => {\r\n                  if (\r\n                    (parseFloat(event.target.value) >= 0 &&\r\n                      event.target.value != \"-\") ||\r\n                    event.target.value == \"\"\r\n                  ) {\r\n                    setMainPrice(event.target.value);\r\n                  }\r\n                }}\r\n                onBlur={(event) =>\r\n                  onCourseAttrChange({ mainPrice: Number(event.target.value) })\r\n                }\r\n                helperText=\"If you want to give this course as free, set price to 0\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={offerShow}\r\n                    onChange={(event) => {\r\n                      if (!offerShow) onCourseAttrChange({ off: 0 });\r\n                      setOfferShow(!offerShow);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Do you want to give offer?\"\r\n              />\r\n              {offerShow && (\r\n                <>\r\n                  <TextField\r\n                    label=\"Set an offer in percentage\"\r\n                    variant=\"outlined\"\r\n                    value={offerValue}\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                      min: 0,\r\n                      max: 100,\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: \"%\",\r\n                    }}\r\n                    onChange={(event) => {\r\n                      if (\r\n                        (parseFloat(event.target.value) >= 0 &&\r\n                          parseFloat(event.target.value) <= 100 &&\r\n                          event.target.value != \"-\") ||\r\n                        event.target.value == \"\"\r\n                      ) {\r\n                        setOfferValue(event.target.value);\r\n                      }\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    label=\"Price will show to student\"\r\n                    contentEditable={false}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    type={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"text\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? \"number\"\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? \"number\"\r\n                        : \"text\"\r\n                    }\r\n                    value={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"FREE\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? mainPrice - (mainPrice * offerValue) / 100\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? mainPrice\r\n                        : \"FREE\"\r\n                    }\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">৳</InputAdornment>\r\n                      ),\r\n                      readOnly: true,\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container direction=\"row\" justifyContent=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onSave}>\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx",["710","711","712","713","714","715","716","717","718","719","720"],"import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Person } from \"../../classes/Person\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   height: \"100vh\",\r\n  // },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1, 0),\r\n    // minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport function SignUp({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  let person: Person;\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n  const [usernameFound, setUsernameFound] = useState(false);\r\n  const [emailFound, setEmailFound] = useState(false);\r\n\r\n  function isValidPassword() {\r\n    return password == againPassword && password != \"\";\r\n  }\r\n\r\n  function checkUsername(username: string) {\r\n    AuthService.existByUsername(username).then((response) => {\r\n      setUsernameFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function checkEmail(email: string) {\r\n    AuthService.existByEmail(email).then((response) => {\r\n      setEmailFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function handleSubmitClicked() {\r\n    checkUsername(username);\r\n    checkEmail(email);\r\n    if (isValidPassword() && !usernameFound && !emailFound) {\r\n      let person: Person = new Person(email, username, password);\r\n      person.accountType = status;\r\n      history.push({\r\n        pathname:\r\n          history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n          \"/profile-details\",\r\n        state: { person: person, registered: false },\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmitClicked}>\r\n              <Grid container spacing={2}>\r\n                <Grid item container>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                    required\r\n                  >\r\n                    <InputLabel>Your Status</InputLabel>\r\n                    <Select\r\n                      label=\"Your Status\"\r\n                      variant=\"outlined\"\r\n                      value={status}\r\n                      onChange={(event) =>\r\n                        setStatus(event.target.value as string)\r\n                      }\r\n                    >\r\n                      <MenuItem key=\"Student\" value={\"Student\"}>\r\n                        Student\r\n                      </MenuItem>\r\n                      <MenuItem key=\"Teacher\" value={\"Teacher\"}>\r\n                        Teacher\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    error={usernameFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    onBlur={(event) => {\r\n                      checkUsername(event.target.value);\r\n                    }}\r\n                    onFocus={(event) => setUsernameFound(false)}\r\n                    onChange={(event) => {\r\n                      checkUsername(event.target.value);\r\n                      setUsername(event.target.value);\r\n                    }}\r\n                    helperText={usernameFound ? \"Username already exist\" : \"\"}\r\n                    pattern=\"letters-digits\"\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={emailFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onBlur={(event) => {\r\n                      checkEmail(event.target.value);\r\n                    }}\r\n                    onFocus={(event) => setEmailFound(false)}\r\n                    onChange={(event) => {\r\n                      checkEmail(event.target.value);\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                    helperText={emailFound ? \"E-mail already exist\" : \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={againPassword != \"\" && password !== againPassword}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"again-password\"\r\n                    label=\"Password (Again)\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setAgainPassword(event.target.value)}\r\n                    helperText={\r\n                      password !== againPassword ? \"Password mismatch\" : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                type=\"submit\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justifyContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                      \"/signin\"\r\n                    }\r\n                  >\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx",["721","722","723"],"import { Grid } from \"@material-ui/core\";\r\nimport { Course, Property } from \"classes/Course\";\r\nimport React from \"react\";\r\nimport { AddAbleTextField } from \"./AddAbleTextField\";\r\n\r\nexport function TargetStudent({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  if (course.outcomes == undefined) {\r\n    course = { ...course, outcomes: [\"\"] };\r\n  }\r\n  if (course.prerequisites == undefined) {\r\n    course = { ...course, prerequisites: [\"\"] };\r\n  }\r\n  if (course.properties == undefined) {\r\n    course = { ...course, properties: [new Property()] };\r\n  }\r\n  console.log(course);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"What will students learn in your course?\"\r\n          objects={course.outcomes}\r\n          onObjectsChange={(outcomes) =>\r\n            onCourseAttrChange({ outcomes: outcomes })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Are there any course requirements or prerequisites?\"\r\n          objects={course.prerequisites}\r\n          onObjectsChange={(prerequisite) =>\r\n            onCourseAttrChange({ prerequisites: prerequisite })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Write down the properties in brief with attractive icons\"\r\n          showIconPicker\r\n          objects={course.properties}\r\n          onObjectsChange={(properties) =>\r\n            onCourseAttrChange({ properties: properties })\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx",["724","725","726"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignIn({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    console.log(username);\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (password == \"\") {\r\n      setMessage(\"password is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    AuthService.signIn(username, password).then((response) => {\r\n      if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpen(true);\r\n        console.log(\"don't match\");\r\n      } else if (response.data.token) {\r\n        console.log(username);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(AuthService.getCurrentUser());\r\n        history.push({ pathname: \"/home\" });\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Snackbar\r\n            open={open}\r\n            onClose={handleSnackbarClose}\r\n            autoHideDuration={2000}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={handleSubmitClick}\r\n            >\r\n              <ControlledTextfield\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n                onBlur={(event) => {\r\n                  setUsername(event.target.value);\r\n                }}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                pattern=\"letters-digits-no-space\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onBlur={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/forgot-password\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx",["727","728","729","730","731","732"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function ForgotPassword({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [dob, setDob] = useState<Date | null>(null);\r\n  const [accept, setAccept] = useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n\r\n  function handleRequestClick(event) {\r\n    event.preventDefault();\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    if (dob == null) {\r\n      setMessage(\"Please set a date of birth\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    AuthService.requestChangePassword(username, dob as Date).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.data.stringValue) {\r\n          setMessage(response.data.stringValue);\r\n          setOpenSnackbar(true);\r\n        } else if (response.data.boolValue == true) {\r\n          setSuccessMessage(\r\n            \"Your request accepted. \\nPlease set a new password\"\r\n          );\r\n          setOpenSuccess(true);\r\n          setAccept(true);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    if (password != againPassword) {\r\n      setMessage(\"Password doesn't match !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    AuthService.changePassword(username, password).then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.token));\r\n        history.push({ pathname: \"/home\" });\r\n      } else if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpenSnackbar(true);\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n    setOpenSuccess(false);\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Snackbar\r\n              open={openSnackbar}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n                {message}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={openSuccess}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n                {successMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Password Recovery\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={accept ? handleSubmitClick : handleRequestClick}\r\n            >\r\n              <Grid container>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    disabled={accept}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    pattern=\"letters-digits-no-space\"\r\n                  />\r\n                </Grid>\r\n                {!accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <KeyboardDatePicker\r\n                        // disableToolbar\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        variant=\"dialog\"\r\n                        format=\"dd/MMM/yyyy\"\r\n                        label=\"Date of Birth\"\r\n                        inputVariant=\"outlined\"\r\n                        value={dob}\r\n                        onChange={(date) => {\r\n                          setDob(date as Date);\r\n                        }}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Request to change password\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                {accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password (Again)\"\r\n                        autoComplete=\"email\"\r\n                        error={password != againPassword}\r\n                        onChange={(event) =>\r\n                          setAgainPassword(event.target.value)\r\n                        }\r\n                        helperText={\r\n                          password != againPassword\r\n                            ? \"Password mismatch!!!\"\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Submit and Sign In\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid container direction=\"column\" alignContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signin\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Already have an account? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx",["733"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddCircle, DeleteForever } from \"@material-ui/icons\";\r\nimport { Property } from \"classes/Course\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { IconPicker } from \"react-fa-icon-picker\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nfunction onEnterPressFocusNext(e) {\r\n  if (e.key === \"Enter\") {\r\n    const inputs = Array.from(\r\n      // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n      e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n        \"input\"\r\n      ) ?? []\r\n    ).filter(\r\n      (e) =>\r\n        //@ts-ignore\r\n        !e.disabled\r\n    );\r\n    const current = Array.from(e.currentTarget.querySelectorAll(\"input\") ?? []);\r\n    //@ts-ignore\r\n    const index = inputs.indexOf(current[0]);\r\n    //@ts-ignore\r\n    inputs[index + 1]?.focus();\r\n    e.preventDefault();\r\n  }\r\n}\r\n\r\nexport function AddAbleTextField({\r\n  onObjectsChange = (data) => console.log(data),\r\n  header = \"\",\r\n  showIconPicker = false,\r\n  objects,\r\n  // objects = [{ id: 0, value: \"\", icon: showIconPicker ? \"FaIcons\" : \"\" }],\r\n}) {\r\n  const onKeyPress: React.KeyboardEventHandler<HTMLInputElement> = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        const inputs = Array.from(\r\n          // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n          e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n            \"input\"\r\n          ) ?? []\r\n        ).filter((e) => !e.disabled);\r\n        const current = Array.from(\r\n          e.currentTarget.querySelectorAll(\"input\") ?? []\r\n        );\r\n        const index = inputs.indexOf(current[0]);\r\n        inputs[index + 1]?.focus();\r\n        e.preventDefault();\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const [data, setData] = useState(\r\n    showIconPicker\r\n      ? objects\r\n      : objects.map((value, idx) => ({ id: idx, text: value }))\r\n  );\r\n\r\n  function onDataChange(newData) {\r\n    setData(newData);\r\n    onObjectsChange(\r\n      showIconPicker\r\n        ? newData.map((item, idx) => ({\r\n            id: item.id,\r\n            icon: item.icon,\r\n            text: item.text,\r\n            position: idx,\r\n          }))\r\n        : newData.map((item) => item.text)\r\n    );\r\n  }\r\n  function onTextFieldChange(index, text) {\r\n    let newArray = [...data];\r\n    newArray[index] = { ...data[index], text: text };\r\n    onDataChange(newArray);\r\n  }\r\n  function addTextField() {\r\n    let newArray = [...data];\r\n    newArray.push(showIconPicker ? new Property() : { id: 100, text: \"\" });\r\n    onDataChange(newArray);\r\n  }\r\n  function onDelete(index) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 1);\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  // function upArrowClick(index) {\r\n  //   if (index === 0) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index - 1];\r\n  //   array[index - 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  // function downArrowClick(index) {\r\n  //   if (index === data.length - 1) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index + 1];\r\n  //   array[index + 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  function onIconValueChange(index, iconName) {\r\n    let newArray = [...data];\r\n    newArray[index].icon.content = iconName;\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\", overflow: \"visible\" }}>\r\n      <CardContent>\r\n        <Grid container>\r\n          {header !== \"\" && (\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {header}\r\n            </Typography>\r\n          )}\r\n          <ReactSortable\r\n            list={data}\r\n            setList={onDataChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            {data.map((item, index) => (\r\n              <TextField\r\n                key={index}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) =>\r\n                  onTextFieldChange(index, event.target.value)\r\n                }\r\n                value={item.text}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: showIconPicker && (\r\n                    <IconButton>\r\n                      <IconPicker\r\n                        containerStyles={{\r\n                          right: \"160%\",\r\n                          top: \"-33.33%\",\r\n                          width: \"201px\",\r\n                        }}\r\n                        value={item.icon.content}\r\n                        onChange={(icon) => onIconValueChange(index, icon)}\r\n                      />\r\n                    </IconButton>\r\n                  ),\r\n                  endAdornment: (\r\n                    <>\r\n                      <IconButton onClick={(event) => onDelete(index)}>\r\n                        <DeleteForever />\r\n                      </IconButton>\r\n                    </>\r\n                  ),\r\n                }}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            ))}\r\n          </ReactSortable>\r\n          <Grid item container justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(event) => addTextField()}\r\n              startIcon={<AddCircle />}\r\n            >\r\n              Add More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx",["734","735"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx",["736"],"import axios from \"axios\";\r\nimport { Person } from \"classes/Person\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass PersonController {\r\n  getPerson(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/get-person`, authHeaders());\r\n  }\r\n  getPersonSelf() {\r\n    return axios.get(GLOBAL.HOST + \"/get-person-self\", authHeaders());\r\n  }\r\n  getDesignation() {\r\n    return axios.get(GLOBAL.HOST + \"/get-designation-self\", authHeaders());\r\n  }\r\n  getEduStatus() {\r\n    return axios.get(GLOBAL.HOST + \"/get-edustatus-self\", authHeaders());\r\n  }\r\n  updateStudent(person: Person, statusId: number) {\r\n    return axios.put(\r\n      GLOBAL.HOST + `/update-student/${statusId}`,\r\n      person,\r\n      authHeaders()\r\n    );\r\n  }\r\n  updateTeacher(person: Person, statusId: number) {\r\n    return axios.put(\r\n      GLOBAL.HOST + `/update-teacher/${statusId}`,\r\n      person,\r\n      authHeaders()\r\n    );\r\n  }\r\n  changePassword(oldPassword: string, newPassword: string) {\r\n    let formData = new FormData();\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    formData.append(\"newPassword\", newPassword);\r\n    return axios.put(GLOBAL.HOST + \"/change-password\", formData, authHeaders());\r\n  }\r\n  getPersonToShow(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-person-by-username/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getCreditCardDetails() {\r\n    return axios.get(GLOBAL.HOST + `/get-credit-card`, authHeaders());\r\n  }\r\n  // getProfilePhoto() {\r\n  //   return axios.get(GLOBAL.HOST + \"/get-profile-photo\", authHeaders());\r\n  // }\r\n}\r\nexport default new PersonController();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx",["737","738","739","740","741","742","743"],"import {\r\n  FilledTextFieldProps,\r\n  OutlinedTextFieldProps,\r\n  StandardTextFieldProps,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nlet rules = {\r\n  lettersDigits: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$]/),\r\n    helperText: \"Only digits and letters are allowed\",\r\n  },\r\n  lettersDigitsNoSpace: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$ ]/),\r\n    helperText: \"Only digits and letters are allowed. No space allowed.\",\r\n  },\r\n  letters: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$0-9]/),\r\n    helperText: \"Only letters are allowed\",\r\n  },\r\n  lettersDigitsSomeSChars: {\r\n    pattern: new RegExp(/[*|\\\":<>[\\]{}`\\\\()';@&$]/),\r\n    helperText: \"Special characters are not allowed\",\r\n  },\r\n  name: {\r\n    pattern: new RegExp(/[~!#%^_+=?/*|\\\":<>[\\]{}`\\\\();@&$0-9]/),\r\n    helperText: 'Only letters and \".,\\'-\" are allowed',\r\n  },\r\n  // number: {\r\n  //   pattern: new RegExp(/^[0-9]*$/),\r\n  //   helperText: \"Without space, only digits are allowed.\",\r\n  // ,\r\n};\r\ninterface IControlledStandardTextField extends StandardTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\ninterface IControlledFilledTTextField extends FilledTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\ninterface IControlledOutlinedTextField extends OutlinedTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\nexport type IControlledTextField =\r\n  | IControlledStandardTextField\r\n  | IControlledFilledTTextField\r\n  | IControlledOutlinedTextField;\r\nexport function ControlledTextfield(props: IControlledTextField) {\r\n  const {\r\n    pattern,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    helperText,\r\n    defaultValue,\r\n    ...rest\r\n  } = props;\r\n  const [value, setValue] = useState(\r\n    defaultValue == undefined ? \"\" : defaultValue\r\n  );\r\n  const [showError, setShowError] = useState(false);\r\n  const [showHelperText, setShowHelperText] = useState(false);\r\n  const [statePattern, setPattern] = useState<RegExp | null>(null);\r\n  const [stateHelperText, setHelperText] = useState<string | undefined>();\r\n\r\n  useEffect(() => {\r\n    switch (pattern) {\r\n      case \"letters-digits\":\r\n        setPattern(rules.lettersDigits.pattern);\r\n        setHelperText(rules.lettersDigits.helperText);\r\n        break;\r\n      case \"letters-digits-no-space\":\r\n        setPattern(rules.lettersDigitsNoSpace.pattern);\r\n        setHelperText(rules.lettersDigitsNoSpace.helperText);\r\n        break;\r\n      case \"letters\":\r\n        setPattern(rules.letters.pattern);\r\n        setHelperText(rules.letters.helperText);\r\n        break;\r\n      case \"letters-digits-some-special-char\":\r\n        setPattern(rules.lettersDigitsSomeSChars.pattern);\r\n        setHelperText(rules.lettersDigitsSomeSChars.helperText);\r\n        break;\r\n      case \"name\":\r\n        setPattern(rules.name.pattern);\r\n        setHelperText(rules.name.helperText);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  function handleOnChange(event) {\r\n    if (statePattern && statePattern.test(event.target.value)) {\r\n      setShowError(true);\r\n    } else {\r\n      setValue(event.target.value);\r\n      setShowError(false);\r\n    }\r\n    if (onChange) onChange(event);\r\n  }\r\n  // useEffect(() => {\r\n  //   if (pattern) {\r\n  //     setPattern(pattern);\r\n  //     setHelperText(helperText);\r\n  //   } else {\r\n  //     if (type == \"text\") {\r\n  //       console.log(rules.text.pattern);\r\n  //       setPattern(rules.text.pattern);\r\n  //       setHelperText(rules.text.helperText);\r\n  //     } else if (type == \"number\") {\r\n  //       setPattern(rules.number.pattern);\r\n  //       setHelperText(rules.number.helperText);\r\n  //     }\r\n  //   }\r\n  //   if (helperText) {\r\n  //     setHelperText(helperText);\r\n  //   }\r\n  //   setErrorMessage(errorMessage);\r\n  // }, []);\r\n\r\n  // function handleOnChange(event) {\r\n  //   if (statePattern) {\r\n  //     if (!statePattern.test(event.target.value)) {\r\n  //       setShowError(true);\r\n  //       if (!errorMessage) {\r\n  //         if (\r\n  //           value.length + 1 != event.target.value.length &&\r\n  //           value.length - 1 != event.target.value.length\r\n  //         ) {\r\n  //           setErrorMessage(\"Text doesn't match the criteria\");\r\n  //         } else {\r\n  //           setErrorMessage(\r\n  //             \"'\" +\r\n  //               event.target.value.charAt(event.target.value.length - 1) +\r\n  //               \"' is not allowed.\"\r\n  //           );\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       setShowError(false);\r\n  //       setValue(event.target.value);\r\n  //       if (onChange) onChange(event);\r\n  //     }\r\n  //   } else {\r\n  //     setValue(event.target.value);\r\n  //     if (onChange) onChange(event);\r\n  //   }\r\n  // }\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      value={value}\r\n      error={props.error ? true : showError}\r\n      onChange={handleOnChange}\r\n      helperText={\r\n        helperText ? helperText : showHelperText ? stateHelperText : \"\"\r\n      }\r\n      onFocus={(event) => {\r\n        setShowHelperText(true);\r\n        if (onFocus) onFocus(event);\r\n      }}\r\n      onBlur={(event) => {\r\n        setShowError(false);\r\n        setShowHelperText(false);\r\n        handleOnChange(event);\r\n        if (onBlur) onBlur(event);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js",["744","745","746"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CourseApprovalService from '../AdminPanel/api/CourseApprovalService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction CourseApproval(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    { title: 'Title', field: 'title', editable: false },\r\n    { title: 'Teacher Username', field: 'teacherId', editable: false },\r\n    { title: 'Publish Date', field: 'publishDate', editable: false }\r\n  ])\r\n\r\n  const [data1, setData1] = useState([])\r\n  const [data2, setData2] = useState([])\r\n\r\n  function getUnapprovedCourses() {\r\n    CourseApprovalService.getUnapprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData1(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n  function getApprovedCourses() {\r\n    CourseApprovalService.getApprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData2(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getApprovedCourses()\r\n    getUnapprovedCourses()\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container xs spacing={3}>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Unapproved Courses\"\r\n          data={data1}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Approved Courses\"\r\n          data={data2}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CourseApproval","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js",["747"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction TeacherInfoComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Username', field: 'username', editable: false },\r\n    { title: 'Course Created', field: 'courseCreated', editable: false },\r\n    { title: 'Course purchased', field: 'coursePurchased', editable: false },\r\n    { title: 'Total Income', field: 'totalIncome', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n\r\n  function getTeacherInfo() {\r\n    InfoService.getTeacherInfo()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => { getTeacherInfo() }, []);\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Teacher Information\"\r\n          data={data}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default TeacherInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js",["748"],"\r\nimport { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction StudentInfoComponent(props) {\r\n    const { useState } = React;\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Username', field: 'username', editable: false },\r\n        { title: 'Course Owned', field: 'courseOwned', editable: false },\r\n        { title: 'Money Spent', field: 'moneySpent', editable: false }\r\n    ])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    function getStudentInfo() {\r\n        InfoService.getStudentInfo()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                //callData(response.data)          \r\n                setData(response.data);\r\n                //setData(response.data)\r\n            }\r\n            )\r\n    }\r\n\r\n    useEffect(() => { getStudentInfo() }, []);\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n            <Grid item container>\r\n                <MaterialTable\r\n                    style={{ width: \"100%\" }}\r\n                    columns={columns}\r\n                    title=\"Student Information\"\r\n                    data={data}\r\n                    options={{\r\n                        actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default StudentInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx",["749","750"],"import { Grid } from \"@material-ui/core\";\r\nimport {\r\n  AttachFile,\r\n  InsertPhoto,\r\n  PictureAsPdf,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  DropzoneAreaBase,\r\n  DropzoneAreaBaseProps,\r\n  FileObject,\r\n} from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface IFileUploader extends DropzoneAreaBaseProps {\r\n  type?: \"video\" | \"pdf\" | \"picture\";\r\n  onChange?: (files: FileObject[]) => void;\r\n}\r\n\r\nexport function FileUploader(props: IFileUploader) {\r\n  const {\r\n    fileObjects,\r\n    filesLimit,\r\n    onChange,\r\n    acceptedFiles,\r\n    Icon,\r\n    type,\r\n    ...rest\r\n  } = props;\r\n  const [state, setState] = useState({\r\n    icon: Icon,\r\n    acceptedFiles: acceptedFiles,\r\n    fileObjects: fileObjects,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    switch (type?.toLowerCase()) {\r\n      case \"video\":\r\n        console.log(\"in use effect\");\r\n        setState({\r\n          ...state,\r\n          icon: <VideoCall />,\r\n          acceptedFiles: [\".mp4\", \".3gp\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      case \"pdf\":\r\n        setState({\r\n          ...state,\r\n          icon: <PictureAsPdf />,\r\n          acceptedFiles: [\".pdf\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      case \"picture\":\r\n        setState({\r\n          ...state,\r\n          icon: <InsertPhoto />,\r\n          acceptedFiles: [\".jpg\", \".png\", \".bmp\", \".gif\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      default:\r\n        setState({\r\n          ...state,\r\n          icon: <AttachFile />,\r\n          acceptedFiles: [],\r\n          fileObjects: fileObjects,\r\n        });\r\n    }\r\n    return () => abortController.abort();\r\n  }, [type]);\r\n\r\n  function handleChange(files: FileObject[]) {\r\n    if (filesLimit)\r\n      files = files.slice(files.length - filesLimit, files.length);\r\n    setState({ ...state, fileObjects: files });\r\n    if (onChange) onChange(files);\r\n  }\r\n  return (\r\n    <Grid item container>\r\n      <DropzoneAreaBase\r\n        {...rest}\r\n        //@ts-ignore\r\n        Icon={state.Icon}\r\n        classes={{ icon: state.fileObjects ? \"display-none\" : \"\" }}\r\n        filesLimit={filesLimit}\r\n        acceptedFiles={state.acceptedFiles}\r\n        fileObjects={state.fileObjects}\r\n        dropzoneText=\"Drop a file here or click here\"\r\n        maxFileSize={100000000}\r\n        showPreviewsInDropzone\r\n        // styles={{ position: \"relative\" }}\r\n        onAdd={(newFileObjects) => {\r\n          console.log(\"onAdd\", newFileObjects);\r\n          handleChange(fileObjects.concat(newFileObjects));\r\n        }}\r\n        previewGridProps={{\r\n          container: {\r\n            justifyContent: \"flex-start\",\r\n            spacing: 0,\r\n          },\r\n          item: {},\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          console.log(\"onDelete\", deleteFileObj);\r\n          handleChange(fileObjects.filter((item) => item != deleteFileObj));\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js",["751","752","753"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx",["754"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport { Files } from \"classes/Files\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport { ErrorMessage } from \"tools/Tools\";\r\n\r\nexport function ImageUploader({\r\n  imageDestination,\r\n  title,\r\n  onSetClick,\r\n  onDeleteClick,\r\n}) {\r\n  const [upload, setUpload] = useState(false);\r\n  const [files, setFiles] = useState<FileObject[]>([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  console.log(imageDestination);\r\n  useEffect(() => {\r\n    if (!imageDestination) {\r\n      setUpload(true);\r\n    } else {\r\n      setUpload(false);\r\n    }\r\n  }, [imageDestination]);\r\n  return (\r\n    <>\r\n      <ErrorMessage\r\n        open={showErrorMessage}\r\n        message={errorMessage}\r\n        onClose={setShowErrorMessage}\r\n      />\r\n      {upload && (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <FileUploader\r\n              fileObjects={files}\r\n              type=\"picture\"\r\n              filesLimit={1}\r\n              onChange={(files) => setFiles(files)}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={(event) => {\r\n                  if (files[0]) {\r\n                    let file = new Files(\"PICTURE\", title)\r\n                      .setFile(files[0])\r\n                      .setId(imageDestination?.id);\r\n                    onSetClick(file);\r\n                    setUpload(false);\r\n                  } else {\r\n                    setErrorMessage(\"Please upload a photo!!\");\r\n                    setShowErrorMessage(true);\r\n                  }\r\n                }}\r\n              >\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n            {imageDestination && (\r\n              <Grid item>\r\n                <Button color=\"secondary\" onClick={(event) => setUpload(false)}>\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {!upload && (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item container justifyContent=\"center\">\r\n            {console.log(imageDestination)}\r\n            <img\r\n              src={\r\n                imageDestination?.content?.file\r\n                  ? URL.createObjectURL(imageDestination?.content?.file)\r\n                  : imageDestination?.content\r\n              }\r\n              style={{\r\n                width: \"90%\",\r\n                boxShadow: \"rgb(0 0 0 / 12%) 0 1px 6px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Button color=\"primary\" onClick={(event) => setUpload(true)}>\r\n                Change\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={(event) => {\r\n                  onDeleteClick(event);\r\n                  setFiles([]);\r\n                  setUpload(true);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx",["755"],"import { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextEditor({\r\n  value,\r\n  onChange,\r\n  readOnly = false,\r\n}: {\r\n  value?: string;\r\n  onChange?: (value: string) => void;\r\n  readOnly?: boolean;\r\n}) {\r\n  const [content, setContent] = useState(value ? value : \"\");\r\n  const [key, setKey] = useState(100);\r\n  function handleBodyChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n  return (\r\n    <MUIRichTextEditor\r\n      toolbar={!readOnly}\r\n      key={key}\r\n      label=\"Start typing here...\"\r\n      defaultValue={value}\r\n      onChange={handleBodyChange}\r\n      readOnly={readOnly}\r\n      onBlur={() => {\r\n        console.log(content);\r\n        if (onChange) onChange(content);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx",["756"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass TeacherService {\r\n  getPerson(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/get-person`, authHeaders());\r\n  }\r\n  getCreateCourseByUsername(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-created-courses/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getMiniInfo(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-teacher-mini/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getCreateCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-created-courses`, authHeaders());\r\n  }\r\n  getEnrolledStudentList() {\r\n    return axios.get(GLOBAL.HOST + `/get-student-list-teacher`, authHeaders());\r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-teacher`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n    return axios.get(GLOBAL.HOST + `/get-review-teacher`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-teacher`,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new TeacherService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx",["757"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass StudentService {\r\n  getPurchaseCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-purchased-courses`, authHeaders());\r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-student`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n    return axios.get(GLOBAL.HOST + `/get-review-teacher`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-student`,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new StudentService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx",["758","759"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Looks, RateReview } from \"@material-ui/icons\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport React from \"react\";\r\nimport { FaChalkboardTeacher, FaDollarSign, FaQq } from \"react-icons/fa\";\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport IncomePerCourseChart from \"../teacher/IncomePerCourseChart\";\r\nimport { OverviewBarChart } from \"../teacher/Overview\";\r\nimport { CoursePopularityPieChart } from \"../teacher/PopularityPieChart\";\r\nimport { RatingLineChart } from \"../teacher/RatingLIneChart\";\r\nimport { EnrolledStudentListView } from \"./EnrolledStudentListView\";\r\nimport { FaqView } from \"./FAQview\";\r\nimport { PurchaseHistoryListView } from \"./PurchaseHistoryLIstView\";\r\nimport { ReviewListView } from \"./ReviewListView\";\r\n\r\nexport function ContentHeader({\r\n  courseId,\r\n  courseTitle,\r\n  courseSubtitle,\r\n  courseImage,\r\n  children,\r\n}) {\r\n  const history = useHistory();\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardActionArea onClick={() => history.push(`/course/${courseId}`)}>\r\n        <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <img src={courseImage} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            spacing={1}\r\n            style={{ paddingRight: 20 }}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{courseTitle}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">{courseSubtitle}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n      </CardActionArea>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface PurchaseHistory {\r\n  image: JSX.Element;\r\n  courseName: string;\r\n  studentImage: JSX.Element;\r\n  studentName: string;\r\n  time: Date;\r\n  amount: number;\r\n}\r\n\r\nfunction Dashboard() {\r\n  const objects: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Overview\",\r\n      urlShort: \"overview\",\r\n      icon: <Looks />,\r\n      content: (\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <OverviewBarChart />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RatingLineChart />\r\n          </Grid>\r\n          <Grid item md={6} xs={12}>\r\n            <CoursePopularityPieChart />\r\n          </Grid>\r\n          <Grid item md={6} xs={12}>\r\n            <IncomePerCourseChart />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Purchase History\",\r\n      urlShort: \"purchase-history\",\r\n      icon: <FaDollarSign />,\r\n      content: <PurchaseHistoryListView />,\r\n    },\r\n    {\r\n      label: \"Reviews\",\r\n      urlShort: \"review\",\r\n      icon: <RateReview />,\r\n      content: <ReviewListView />,\r\n    },\r\n    {\r\n      label: \"FAQ\",\r\n      urlShort: \"faq\",\r\n      icon: <FaQq />,\r\n      content: <FaqView />,\r\n    },\r\n    {\r\n      label: \"Student List\",\r\n      urlShort: \"enrolled-student\",\r\n      icon: <FaChalkboardTeacher />,\r\n      content: <EnrolledStudentListView />,\r\n    },\r\n  ];\r\n  const route = useRouteMatch();\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route\r\n            exact\r\n            path={`${route.path}/${item.urlShort}`}\r\n            key={item.urlShort}\r\n          >\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx",["760"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { StudentList } from \"classes/Person\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function EnrolledStudentListView() {\r\n  const history = useHistory();\r\n  const [studentsWithCourses, setStudentsWithCourses] = useState<StudentList[]>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    TeacherService.getEnrolledStudentList().then((response) => {\r\n      console.log(\"Enrolled Student List\", response.data);\r\n      setStudentsWithCourses(response.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {studentsWithCourses?.map((studentsWithCourse) => (\r\n        <ContentHeader\r\n          key={studentsWithCourse.courseId}\r\n          courseId={studentsWithCourse.courseId}\r\n          courseTitle={studentsWithCourse.courseName}\r\n          courseSubtitle={studentsWithCourse.courseSubtitle}\r\n          courseImage={studentsWithCourse.courseImage}\r\n        >\r\n          <CustomPagination type=\"calculate-by-width\">\r\n            {studentsWithCourse?.studentInfoList?.map((student) => (\r\n              <Card key={student.studentUsername}>\r\n                <CardActionArea\r\n                  onClick={(event) =>\r\n                    history.push(`/profile/${student.studentUsername}`)\r\n                  }\r\n                >\r\n                  <CardMedia>\r\n                    <img src={student.studentImage} />\r\n                  </CardMedia>\r\n                  <CardContent>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"h6\">\r\n                          {student.studentName}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\">\r\n                          {new Date(student.enrolledDate).toLocaleDateString()}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx",["761"],"import { Grid } from \"@material-ui/core\";\r\nimport { FaqList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { FAQBox } from \"components/course/courseView/FAQ\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function FaqView() {\r\n  const [faqWithCourses, setFaqWithCourses] = useState<FaqList[]>([]);\r\n  useEffect(() => {\r\n    handleLoadData();\r\n  }, []);\r\n  function handleLoadData() {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getFAQList().then((response) => {\r\n          console.log(\"faq list\", response.data);\r\n          setFaqWithCourses(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getFAQList().then((response) => {\r\n          console.log(\"faq list\", response.data);\r\n          setFaqWithCourses(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {faqWithCourses?.map((faqWithCourse) => (\r\n        <ContentHeader\r\n          key={faqWithCourse.courseId}\r\n          courseId={faqWithCourse.courseId}\r\n          courseTitle={faqWithCourse.courseTitle}\r\n          courseSubtitle={faqWithCourse.courseSubtitle}\r\n          courseImage={faqWithCourse.courseImage}\r\n        >\r\n          <CustomPagination objectsPerPage={3} divider>\r\n            {faqWithCourse?.faqInfos?.map((faq) => (\r\n              <FAQBox faq={faq} onSubmit={handleLoadData} key={faq.id} />\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx",["762"],"import { ReviewList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { ReviewBox } from \"components/course/courseView/Review\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function ReviewListView() {\r\n  const history = useHistory();\r\n  const [reviewsWithCourses, setReviewsWithCourses] = useState<ReviewList[]>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getReviewList().then((response) => {\r\n          console.log(\"Review List\", response.data);\r\n          setReviewsWithCourses(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getReviewList().then((response) => {\r\n          console.log(\"Review List\", response.data);\r\n          setReviewsWithCourses(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }, []);\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {reviewsWithCourses?.map((reviewsWithCourse) => (\r\n        <ContentHeader\r\n          key={reviewsWithCourse.courseId}\r\n          courseId={reviewsWithCourse.courseId}\r\n          courseTitle={reviewsWithCourse.courseTitle}\r\n          courseSubtitle={reviewsWithCourse.courseSubtitle}\r\n          courseImage={reviewsWithCourse.courseImage}\r\n        >\r\n          <CustomPagination objectsPerPage={3} divider>\r\n            {reviewsWithCourse?.reviewInfos?.map((review) => (\r\n              <ReviewBox review={review} key={review.id} />\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx",["763","764","765","766"],"import { PurchaseHistory, PurchaseHistoryList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { ReviewBox } from \"components/course/courseView/Review\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nfunction PurchaseHistoryTable({ data }) {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Course Image\", field: \"image\" },\r\n    { title: \"Course Name\", field: \"courseName\" },\r\n    { title: \"Student Image\", field: \"studentImage\" },\r\n    { title: \"Student Name\", field: \"studentName\" },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n    // { title: \"Course Image\", field: \"image\", editable: \"never\" },\r\n    // { title: \"Course Name\", field: \"courseName\", editable: \"never\" },\r\n    // { title: \"Student Image\", field: \"studentImage\", editable: \"never\" },\r\n    // { title: \"Student Name\", field: \"studentName\", editable: \"never\" },\r\n    // { title: \"Purchase time\", field: \"time\", editable: \"never\" },\r\n    // { title: \"Purchase Amount\", field: \"amount\", editable: \"never\" },\r\n  ]);\r\n  return (\r\n    <MaterialTable\r\n      // @ts-ignore\r\n      columns={columns}\r\n      title=\"\"\r\n      data={data}\r\n      options={{ search: false, toolbar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function PurchaseHistoryListView() {\r\n  const history = useHistory();\r\n  const [purchaseHistories, setPurchaseHistories] = useState<\r\n    PurchaseHistoryList[]\r\n  >([]);\r\n  useEffect(() => {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getPurchaseHistory().then((response) => {\r\n          console.log(\"Purchase History List\", response.data);\r\n          setPurchaseHistories(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getPurchaseHistory().then((response) => {\r\n          console.log(\"Purchase History List\", response.data);\r\n          setPurchaseHistories(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {purchaseHistories?.map((purchaseHistory) => (\r\n        <ContentHeader\r\n          // key={purchaseHistory.courseId}\r\n          courseId={10}\r\n          courseTitle={purchaseHistory.coursetitle}\r\n          courseSubtitle={purchaseHistory.coursesubtitle}\r\n          courseImage={purchaseHistory.courseImage}\r\n        >\r\n          <PurchaseHistoryTable data={purchaseHistory.purchaseHistoryInfos} />\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx",["767","768","769","770"],"import { Grid, CardContent, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport input from \"postcss/lib/input\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\nimport { UserRegistrationChart } from \"./charts/UserRegistrationChart\";\r\n\r\ninterface ShowCard {\r\n  totalVisitor: number;\r\n  newCourse: number;\r\n  totalCourse: number;\r\n  newUser: number;\r\n  totalUser: number;\r\n  todayIncome: number;\r\n  totalIncome: number;\r\n}\r\n\r\nexport function Cards() {\r\n  const [data, setData] = useState<ShowCard>();\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-show-card-admin\", authHeaders())\r\n      .then((response) => {\r\n        setData(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Visitors\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalVisitor}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Today Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"771","replacedBy":"772"},{"ruleId":"773","replacedBy":"774"},{"ruleId":"775","severity":1,"message":"776","line":9,"column":10,"nodeType":"777","messageId":"778","endLine":9,"endColumn":14},{"ruleId":"775","severity":1,"message":"779","line":10,"column":10,"nodeType":"777","messageId":"778","endLine":10,"endColumn":23},{"ruleId":"771","replacedBy":"772"},{"ruleId":"773","replacedBy":"774"},{"ruleId":"780","severity":1,"message":"781","line":65,"column":5,"nodeType":"782","messageId":"783","endLine":65,"endColumn":20},{"ruleId":"775","severity":1,"message":"784","line":2,"column":3,"nodeType":"777","messageId":"778","endLine":2,"endColumn":7},{"ruleId":"775","severity":1,"message":"785","line":3,"column":3,"nodeType":"777","messageId":"778","endLine":3,"endColumn":17},{"ruleId":"775","severity":1,"message":"786","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":14},{"ruleId":"775","severity":1,"message":"787","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":13},{"ruleId":"775","severity":1,"message":"788","line":28,"column":10,"nodeType":"777","messageId":"778","endLine":28,"endColumn":17},{"ruleId":"775","severity":1,"message":"789","line":28,"column":19,"nodeType":"777","messageId":"778","endLine":28,"endColumn":29},{"ruleId":"775","severity":1,"message":"790","line":42,"column":10,"nodeType":"777","messageId":"778","endLine":42,"endColumn":14},{"ruleId":"775","severity":1,"message":"791","line":42,"column":16,"nodeType":"777","messageId":"778","endLine":42,"endColumn":23},{"ruleId":"775","severity":1,"message":"792","line":42,"column":6,"nodeType":"777","messageId":"778","endLine":42,"endColumn":12},{"ruleId":"775","severity":1,"message":"793","line":109,"column":9,"nodeType":"777","messageId":"778","endLine":109,"endColumn":16},{"ruleId":"794","severity":1,"message":"795","line":122,"column":6,"nodeType":"796","endLine":122,"endColumn":8,"suggestions":"797"},{"ruleId":"798","severity":1,"message":"799","line":131,"column":27,"nodeType":"800","messageId":"783","endLine":131,"endColumn":29},{"ruleId":"801","severity":1,"message":"802","line":297,"column":23,"nodeType":"803","endLine":297,"endColumn":59},{"ruleId":"801","severity":1,"message":"802","line":351,"column":15,"nodeType":"803","endLine":351,"endColumn":51},{"ruleId":"798","severity":1,"message":"804","line":120,"column":42,"nodeType":"800","messageId":"783","endLine":120,"endColumn":44},{"ruleId":"798","severity":1,"message":"799","line":13,"column":45,"nodeType":"800","messageId":"783","endLine":13,"endColumn":47},{"ruleId":"798","severity":1,"message":"799","line":19,"column":52,"nodeType":"800","messageId":"783","endLine":19,"endColumn":54},{"ruleId":"775","severity":1,"message":"805","line":391,"column":7,"nodeType":"777","messageId":"778","endLine":391,"endColumn":12},{"ruleId":"775","severity":1,"message":"793","line":392,"column":9,"nodeType":"777","messageId":"778","endLine":392,"endColumn":16},{"ruleId":"775","severity":1,"message":"790","line":41,"column":7,"nodeType":"777","messageId":"778","endLine":41,"endColumn":11},{"ruleId":"794","severity":1,"message":"806","line":101,"column":6,"nodeType":"796","endLine":101,"endColumn":8,"suggestions":"807"},{"ruleId":"775","severity":1,"message":"808","line":95,"column":10,"nodeType":"777","messageId":"778","endLine":95,"endColumn":15},{"ruleId":"775","severity":1,"message":"809","line":95,"column":17,"nodeType":"777","messageId":"778","endLine":95,"endColumn":25},{"ruleId":"775","severity":1,"message":"810","line":102,"column":9,"nodeType":"777","messageId":"778","endLine":102,"endColumn":14},{"ruleId":"775","severity":1,"message":"811","line":110,"column":10,"nodeType":"777","messageId":"778","endLine":110,"endColumn":19},{"ruleId":"775","severity":1,"message":"812","line":110,"column":21,"nodeType":"777","messageId":"778","endLine":110,"endColumn":33},{"ruleId":"775","severity":1,"message":"813","line":115,"column":10,"nodeType":"777","messageId":"778","endLine":115,"endColumn":28},{"ruleId":"775","severity":1,"message":"814","line":116,"column":10,"nodeType":"777","messageId":"778","endLine":116,"endColumn":24},{"ruleId":"798","severity":1,"message":"804","line":129,"column":52,"nodeType":"800","messageId":"783","endLine":129,"endColumn":54},{"ruleId":"798","severity":1,"message":"799","line":130,"column":47,"nodeType":"800","messageId":"783","endLine":130,"endColumn":49},{"ruleId":"798","severity":1,"message":"799","line":144,"column":54,"nodeType":"800","messageId":"783","endLine":144,"endColumn":56},{"ruleId":"798","severity":1,"message":"799","line":165,"column":28,"nodeType":"800","messageId":"783","endLine":165,"endColumn":30},{"ruleId":"798","severity":1,"message":"799","line":169,"column":35,"nodeType":"800","messageId":"783","endLine":169,"endColumn":37},{"ruleId":"798","severity":1,"message":"799","line":179,"column":30,"nodeType":"800","messageId":"783","endLine":179,"endColumn":32},{"ruleId":"798","severity":1,"message":"799","line":183,"column":37,"nodeType":"800","messageId":"783","endLine":183,"endColumn":39},{"ruleId":"794","severity":1,"message":"815","line":204,"column":6,"nodeType":"796","endLine":204,"endColumn":8,"suggestions":"816"},{"ruleId":"798","severity":1,"message":"804","line":209,"column":23,"nodeType":"800","messageId":"783","endLine":209,"endColumn":25},{"ruleId":"798","severity":1,"message":"799","line":234,"column":28,"nodeType":"800","messageId":"783","endLine":234,"endColumn":30},{"ruleId":"798","severity":1,"message":"799","line":243,"column":35,"nodeType":"800","messageId":"783","endLine":243,"endColumn":37},{"ruleId":"798","severity":1,"message":"799","line":256,"column":28,"nodeType":"800","messageId":"783","endLine":256,"endColumn":30},{"ruleId":"798","severity":1,"message":"799","line":268,"column":35,"nodeType":"800","messageId":"783","endLine":268,"endColumn":37},{"ruleId":"798","severity":1,"message":"799","line":317,"column":25,"nodeType":"800","messageId":"783","endLine":317,"endColumn":27},{"ruleId":"798","severity":1,"message":"799","line":390,"column":33,"nodeType":"800","messageId":"783","endLine":390,"endColumn":35},{"ruleId":"798","severity":1,"message":"799","line":398,"column":34,"nodeType":"800","messageId":"783","endLine":398,"endColumn":36},{"ruleId":"798","severity":1,"message":"799","line":506,"column":29,"nodeType":"800","messageId":"783","endLine":506,"endColumn":31},{"ruleId":"798","severity":1,"message":"799","line":517,"column":29,"nodeType":"800","messageId":"783","endLine":517,"endColumn":31},{"ruleId":"798","severity":1,"message":"799","line":530,"column":29,"nodeType":"800","messageId":"783","endLine":530,"endColumn":31},{"ruleId":"798","severity":1,"message":"804","line":22,"column":18,"nodeType":"800","messageId":"783","endLine":22,"endColumn":20},{"ruleId":"794","severity":1,"message":"817","line":32,"column":6,"nodeType":"796","endLine":32,"endColumn":8,"suggestions":"818"},{"ruleId":"798","severity":1,"message":"799","line":46,"column":52,"nodeType":"800","messageId":"783","endLine":46,"endColumn":54},{"ruleId":"798","severity":1,"message":"799","line":77,"column":60,"nodeType":"800","messageId":"783","endLine":77,"endColumn":62},{"ruleId":"798","severity":1,"message":"799","line":95,"column":72,"nodeType":"800","messageId":"783","endLine":95,"endColumn":74},{"ruleId":"798","severity":1,"message":"799","line":132,"column":29,"nodeType":"800","messageId":"783","endLine":132,"endColumn":31},{"ruleId":"798","severity":1,"message":"799","line":139,"column":35,"nodeType":"800","messageId":"783","endLine":139,"endColumn":37},{"ruleId":"819","severity":1,"message":"820","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":16},{"ruleId":"819","severity":1,"message":"789","line":10,"column":19,"nodeType":"777","messageId":"778","endLine":10,"endColumn":29},{"ruleId":"819","severity":1,"message":"820","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":16},{"ruleId":"819","severity":1,"message":"789","line":10,"column":19,"nodeType":"777","messageId":"778","endLine":10,"endColumn":29},{"ruleId":"771","replacedBy":"821"},{"ruleId":"773","replacedBy":"822"},{"ruleId":"775","severity":1,"message":"823","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":14},{"ruleId":"775","severity":1,"message":"805","line":7,"column":7,"nodeType":"777","messageId":"778","endLine":7,"endColumn":12},{"ruleId":"775","severity":1,"message":"824","line":20,"column":10,"nodeType":"777","messageId":"778","endLine":20,"endColumn":17},{"ruleId":"775","severity":1,"message":"825","line":20,"column":19,"nodeType":"777","messageId":"778","endLine":20,"endColumn":29},{"ruleId":"798","severity":1,"message":"804","line":35,"column":20,"nodeType":"800","messageId":"783","endLine":35,"endColumn":22},{"ruleId":"798","severity":1,"message":"799","line":49,"column":19,"nodeType":"800","messageId":"783","endLine":49,"endColumn":21},{"ruleId":"798","severity":1,"message":"799","line":59,"column":19,"nodeType":"800","messageId":"783","endLine":59,"endColumn":21},{"ruleId":"798","severity":1,"message":"804","line":72,"column":14,"nodeType":"800","messageId":"783","endLine":72,"endColumn":16},{"ruleId":"775","severity":1,"message":"826","line":26,"column":9,"nodeType":"777","messageId":"778","endLine":26,"endColumn":16},{"ruleId":"775","severity":1,"message":"827","line":27,"column":10,"nodeType":"777","messageId":"778","endLine":27,"endColumn":15},{"ruleId":"775","severity":1,"message":"828","line":27,"column":17,"nodeType":"777","messageId":"778","endLine":27,"endColumn":25},{"ruleId":"775","severity":1,"message":"829","line":16,"column":18,"nodeType":"777","messageId":"778","endLine":16,"endColumn":33},{"ruleId":"775","severity":1,"message":"830","line":110,"column":12,"nodeType":"777","messageId":"778","endLine":110,"endColumn":30},{"ruleId":"775","severity":1,"message":"831","line":5,"column":10,"nodeType":"777","messageId":"778","endLine":5,"endColumn":23},{"ruleId":"798","severity":1,"message":"799","line":30,"column":22,"nodeType":"800","messageId":"783","endLine":30,"endColumn":24},{"ruleId":"798","severity":1,"message":"799","line":37,"column":27,"nodeType":"800","messageId":"783","endLine":37,"endColumn":29},{"ruleId":"775","severity":1,"message":"832","line":36,"column":11,"nodeType":"777","messageId":"778","endLine":36,"endColumn":26},{"ruleId":"794","severity":1,"message":"817","line":43,"column":6,"nodeType":"796","endLine":43,"endColumn":15,"suggestions":"833"},{"ruleId":"819","severity":1,"message":"834","line":49,"column":7,"nodeType":"777","messageId":"778","endLine":49,"endColumn":19},{"ruleId":"798","severity":1,"message":"799","line":63,"column":35,"nodeType":"800","messageId":"783","endLine":63,"endColumn":37},{"ruleId":"798","severity":1,"message":"799","line":88,"column":94,"nodeType":"800","messageId":"783","endLine":88,"endColumn":96},{"ruleId":"798","severity":1,"message":"804","line":91,"column":17,"nodeType":"800","messageId":"783","endLine":91,"endColumn":19},{"ruleId":"794","severity":1,"message":"835","line":100,"column":6,"nodeType":"796","endLine":100,"endColumn":8,"suggestions":"836"},{"ruleId":"798","severity":1,"message":"799","line":119,"column":62,"nodeType":"800","messageId":"783","endLine":119,"endColumn":64},{"ruleId":"801","severity":1,"message":"802","line":36,"column":13,"nodeType":"803","endLine":36,"endColumn":75},{"ruleId":"801","severity":1,"message":"802","line":62,"column":23,"nodeType":"803","endLine":62,"endColumn":59},{"ruleId":"798","severity":1,"message":"799","line":128,"column":14,"nodeType":"800","messageId":"783","endLine":128,"endColumn":16},{"ruleId":"801","severity":1,"message":"802","line":300,"column":23,"nodeType":"803","endLine":300,"endColumn":59},{"ruleId":"794","severity":1,"message":"817","line":42,"column":6,"nodeType":"796","endLine":42,"endColumn":12,"suggestions":"837"},{"ruleId":"798","severity":1,"message":"799","line":200,"column":27,"nodeType":"800","messageId":"783","endLine":200,"endColumn":29},{"ruleId":"798","severity":1,"message":"799","line":252,"column":27,"nodeType":"800","messageId":"783","endLine":252,"endColumn":29},{"ruleId":"801","severity":1,"message":"802","line":36,"column":19,"nodeType":"803","endLine":36,"endColumn":54},{"ruleId":"775","severity":1,"message":"824","line":25,"column":10,"nodeType":"777","messageId":"778","endLine":25,"endColumn":17},{"ruleId":"775","severity":1,"message":"825","line":25,"column":19,"nodeType":"777","messageId":"778","endLine":25,"endColumn":29},{"ruleId":"798","severity":1,"message":"799","line":29,"column":15,"nodeType":"800","messageId":"783","endLine":29,"endColumn":17},{"ruleId":"775","severity":1,"message":"838","line":8,"column":10,"nodeType":"777","messageId":"778","endLine":8,"endColumn":22},{"ruleId":"775","severity":1,"message":"839","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":17},{"ruleId":"840","severity":1,"message":"841","line":15,"column":3,"nodeType":"842","messageId":"843","endLine":15,"endColumn":29,"fix":"844"},{"ruleId":"775","severity":1,"message":"845","line":24,"column":7,"nodeType":"777","messageId":"778","endLine":24,"endColumn":21},{"ruleId":"794","severity":1,"message":"846","line":53,"column":6,"nodeType":"796","endLine":53,"endColumn":8,"suggestions":"847"},{"ruleId":"798","severity":1,"message":"799","line":69,"column":25,"nodeType":"800","messageId":"783","endLine":69,"endColumn":27},{"ruleId":"798","severity":1,"message":"799","line":39,"column":19,"nodeType":"800","messageId":"783","endLine":39,"endColumn":21},{"ruleId":"798","severity":1,"message":"799","line":39,"column":43,"nodeType":"800","messageId":"783","endLine":39,"endColumn":45},{"ruleId":"798","severity":1,"message":"799","line":39,"column":69,"nodeType":"800","messageId":"783","endLine":39,"endColumn":71},{"ruleId":"798","severity":1,"message":"804","line":44,"column":45,"nodeType":"800","messageId":"783","endLine":44,"endColumn":47},{"ruleId":"798","severity":1,"message":"799","line":86,"column":45,"nodeType":"800","messageId":"783","endLine":86,"endColumn":47},{"ruleId":"798","severity":1,"message":"799","line":99,"column":52,"nodeType":"800","messageId":"783","endLine":99,"endColumn":54},{"ruleId":"794","severity":1,"message":"848","line":245,"column":6,"nodeType":"796","endLine":245,"endColumn":8,"suggestions":"849"},{"ruleId":"801","severity":1,"message":"802","line":251,"column":9,"nodeType":"803","endLine":254,"endColumn":11},{"ruleId":"771","replacedBy":"850"},{"ruleId":"773","replacedBy":"851"},{"ruleId":"775","severity":1,"message":"852","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":24},{"ruleId":"798","severity":1,"message":"799","line":29,"column":30,"nodeType":"800","messageId":"783","endLine":29,"endColumn":32},{"ruleId":"798","severity":1,"message":"799","line":29,"column":60,"nodeType":"800","messageId":"783","endLine":29,"endColumn":62},{"ruleId":"775","severity":1,"message":"853","line":53,"column":28,"nodeType":"777","messageId":"778","endLine":53,"endColumn":41},{"ruleId":"794","severity":1,"message":"854","line":59,"column":6,"nodeType":"796","endLine":59,"endColumn":21,"suggestions":"855"},{"ruleId":"798","severity":1,"message":"799","line":73,"column":20,"nodeType":"800","messageId":"783","endLine":73,"endColumn":22},{"ruleId":"798","severity":1,"message":"799","line":73,"column":40,"nodeType":"800","messageId":"783","endLine":73,"endColumn":42},{"ruleId":"798","severity":1,"message":"799","line":90,"column":22,"nodeType":"800","messageId":"783","endLine":90,"endColumn":24},{"ruleId":"798","severity":1,"message":"799","line":115,"column":20,"nodeType":"800","messageId":"783","endLine":115,"endColumn":22},{"ruleId":"798","severity":1,"message":"799","line":210,"column":40,"nodeType":"800","messageId":"783","endLine":210,"endColumn":42},{"ruleId":"798","severity":1,"message":"799","line":223,"column":39,"nodeType":"800","messageId":"783","endLine":223,"endColumn":41},{"ruleId":"798","severity":1,"message":"804","line":288,"column":34,"nodeType":"800","messageId":"783","endLine":288,"endColumn":36},{"ruleId":"856","severity":1,"message":"857","line":14,"column":3,"nodeType":"858","messageId":"859","endLine":16,"endColumn":4},{"ruleId":"860","severity":1,"message":"861","line":50,"column":21,"nodeType":"803","messageId":"862","endLine":55,"endColumn":22,"fix":"863"},{"ruleId":"860","severity":1,"message":"861","line":79,"column":17,"nodeType":"803","messageId":"862","endLine":83,"endColumn":18,"fix":"864"},{"ruleId":"860","severity":1,"message":"861","line":93,"column":17,"nodeType":"803","messageId":"862","endLine":97,"endColumn":18,"fix":"865"},{"ruleId":"860","severity":1,"message":"861","line":107,"column":17,"nodeType":"803","messageId":"862","endLine":111,"endColumn":18,"fix":"866"},{"ruleId":"860","severity":1,"message":"861","line":121,"column":17,"nodeType":"803","messageId":"862","endLine":125,"endColumn":18,"fix":"867"},{"ruleId":"860","severity":1,"message":"861","line":135,"column":17,"nodeType":"803","messageId":"862","endLine":139,"endColumn":18,"fix":"868"},{"ruleId":"860","severity":1,"message":"861","line":149,"column":17,"nodeType":"803","messageId":"862","endLine":153,"endColumn":18,"fix":"869"},{"ruleId":"771","replacedBy":"850"},{"ruleId":"773","replacedBy":"851"},{"ruleId":"775","severity":1,"message":"870","line":131,"column":5,"nodeType":"777","messageId":"778","endLine":131,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":158,"column":55,"nodeType":"800","messageId":"783","endLine":158,"endColumn":57},{"ruleId":"798","severity":1,"message":"799","line":170,"column":55,"nodeType":"800","messageId":"783","endLine":170,"endColumn":57},{"ruleId":"775","severity":1,"message":"871","line":2,"column":17,"nodeType":"777","messageId":"778","endLine":2,"endColumn":25},{"ruleId":"775","severity":1,"message":"872","line":8,"column":9,"nodeType":"777","messageId":"778","endLine":8,"endColumn":19},{"ruleId":"775","severity":1,"message":"873","line":9,"column":10,"nodeType":"777","messageId":"778","endLine":9,"endColumn":18},{"ruleId":"775","severity":1,"message":"874","line":10,"column":9,"nodeType":"777","messageId":"778","endLine":10,"endColumn":17},{"ruleId":"775","severity":1,"message":"875","line":12,"column":10,"nodeType":"777","messageId":"778","endLine":12,"endColumn":18},{"ruleId":"775","severity":1,"message":"876","line":13,"column":10,"nodeType":"777","messageId":"778","endLine":13,"endColumn":20},{"ruleId":"775","severity":1,"message":"877","line":13,"column":22,"nodeType":"777","messageId":"778","endLine":13,"endColumn":35},{"ruleId":"775","severity":1,"message":"878","line":15,"column":12,"nodeType":"777","messageId":"778","endLine":15,"endColumn":33},{"ruleId":"775","severity":1,"message":"879","line":1,"column":8,"nodeType":"777","messageId":"778","endLine":1,"endColumn":25},{"ruleId":"775","severity":1,"message":"880","line":6,"column":10,"nodeType":"777","messageId":"778","endLine":6,"endColumn":22},{"ruleId":"775","severity":1,"message":"881","line":186,"column":9,"nodeType":"777","messageId":"778","endLine":186,"endColumn":30},{"ruleId":"775","severity":1,"message":"880","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":22},{"ruleId":"775","severity":1,"message":"879","line":4,"column":8,"nodeType":"777","messageId":"778","endLine":4,"endColumn":25},{"ruleId":"819","severity":1,"message":"789","line":10,"column":19,"nodeType":"777","messageId":"778","endLine":10,"endColumn":29},{"ruleId":"819","severity":1,"message":"820","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":16},{"ruleId":"819","severity":1,"message":"789","line":10,"column":19,"nodeType":"777","messageId":"778","endLine":10,"endColumn":29},{"ruleId":"798","severity":1,"message":"799","line":52,"column":31,"nodeType":"800","messageId":"783","endLine":52,"endColumn":33},{"ruleId":"798","severity":1,"message":"804","line":148,"column":46,"nodeType":"800","messageId":"783","endLine":148,"endColumn":48},{"ruleId":"798","severity":1,"message":"799","line":152,"column":47,"nodeType":"800","messageId":"783","endLine":152,"endColumn":49},{"ruleId":"882","severity":1,"message":"883","line":229,"column":1,"nodeType":"884","messageId":"885","endLine":270,"endColumn":2},{"ruleId":"798","severity":1,"message":"799","line":69,"column":47,"nodeType":"800","messageId":"783","endLine":69,"endColumn":49},{"ruleId":"886","severity":1,"message":"887","line":105,"column":34,"nodeType":"888","messageId":"889","endLine":105,"endColumn":36},{"ruleId":"798","severity":1,"message":"799","line":106,"column":42,"nodeType":"800","messageId":"783","endLine":106,"endColumn":44},{"ruleId":"794","severity":1,"message":"890","line":143,"column":6,"nodeType":"796","endLine":143,"endColumn":8,"suggestions":"891"},{"ruleId":"801","severity":1,"message":"802","line":259,"column":23,"nodeType":"803","endLine":259,"endColumn":81},{"ruleId":"775","severity":1,"message":"892","line":14,"column":8,"nodeType":"777","messageId":"778","endLine":14,"endColumn":15},{"ruleId":"840","severity":1,"message":"893","line":3,"column":10,"nodeType":"842","messageId":"843","endLine":3,"endColumn":36,"fix":"894"},{"ruleId":"775","severity":1,"message":"895","line":19,"column":11,"nodeType":"777","messageId":"778","endLine":19,"endColumn":18},{"ruleId":"819","severity":1,"message":"896","line":2,"column":10,"nodeType":"777","messageId":"778","endLine":2,"endColumn":21},{"ruleId":"801","severity":1,"message":"802","line":43,"column":5,"nodeType":"803","endLine":43,"endColumn":36},{"ruleId":"775","severity":1,"message":"897","line":20,"column":7,"nodeType":"777","messageId":"778","endLine":20,"endColumn":11},{"ruleId":"798","severity":1,"message":"804","line":62,"column":40,"nodeType":"800","messageId":"783","endLine":62,"endColumn":42},{"ruleId":"775","severity":1,"message":"839","line":81,"column":12,"nodeType":"777","messageId":"778","endLine":81,"endColumn":19},{"ruleId":"775","severity":1,"message":"898","line":89,"column":12,"nodeType":"777","messageId":"778","endLine":89,"endColumn":22},{"ruleId":"798","severity":1,"message":"799","line":55,"column":47,"nodeType":"800","messageId":"783","endLine":55,"endColumn":49},{"ruleId":"886","severity":1,"message":"887","line":81,"column":34,"nodeType":"888","messageId":"889","endLine":81,"endColumn":36},{"ruleId":"798","severity":1,"message":"799","line":82,"column":42,"nodeType":"800","messageId":"783","endLine":82,"endColumn":44},{"ruleId":"794","severity":1,"message":"899","line":116,"column":6,"nodeType":"796","endLine":116,"endColumn":8,"suggestions":"900"},{"ruleId":"798","severity":1,"message":"804","line":44,"column":42,"nodeType":"800","messageId":"783","endLine":44,"endColumn":44},{"ruleId":"798","severity":1,"message":"799","line":45,"column":40,"nodeType":"800","messageId":"783","endLine":45,"endColumn":42},{"ruleId":"798","severity":1,"message":"804","line":86,"column":46,"nodeType":"800","messageId":"783","endLine":86,"endColumn":48},{"ruleId":"798","severity":1,"message":"799","line":87,"column":44,"nodeType":"800","messageId":"783","endLine":87,"endColumn":46},{"ruleId":"798","severity":1,"message":"799","line":102,"column":33,"nodeType":"800","messageId":"783","endLine":102,"endColumn":35},{"ruleId":"798","severity":1,"message":"799","line":102,"column":53,"nodeType":"800","messageId":"783","endLine":102,"endColumn":55},{"ruleId":"798","severity":1,"message":"799","line":102,"column":73,"nodeType":"800","messageId":"783","endLine":102,"endColumn":75},{"ruleId":"798","severity":1,"message":"804","line":104,"column":37,"nodeType":"800","messageId":"783","endLine":104,"endColumn":39},{"ruleId":"798","severity":1,"message":"804","line":104,"column":57,"nodeType":"800","messageId":"783","endLine":104,"endColumn":59},{"ruleId":"798","severity":1,"message":"804","line":106,"column":37,"nodeType":"800","messageId":"783","endLine":106,"endColumn":39},{"ruleId":"798","severity":1,"message":"799","line":106,"column":56,"nodeType":"800","messageId":"783","endLine":106,"endColumn":58},{"ruleId":"798","severity":1,"message":"799","line":111,"column":33,"nodeType":"800","messageId":"783","endLine":111,"endColumn":35},{"ruleId":"798","severity":1,"message":"799","line":111,"column":53,"nodeType":"800","messageId":"783","endLine":111,"endColumn":55},{"ruleId":"798","severity":1,"message":"799","line":111,"column":73,"nodeType":"800","messageId":"783","endLine":111,"endColumn":75},{"ruleId":"798","severity":1,"message":"804","line":113,"column":37,"nodeType":"800","messageId":"783","endLine":113,"endColumn":39},{"ruleId":"798","severity":1,"message":"804","line":113,"column":57,"nodeType":"800","messageId":"783","endLine":113,"endColumn":59},{"ruleId":"798","severity":1,"message":"804","line":115,"column":37,"nodeType":"800","messageId":"783","endLine":115,"endColumn":39},{"ruleId":"798","severity":1,"message":"799","line":115,"column":56,"nodeType":"800","messageId":"783","endLine":115,"endColumn":58},{"ruleId":"775","severity":1,"message":"901","line":2,"column":3,"nodeType":"777","messageId":"778","endLine":2,"endColumn":9},{"ruleId":"775","severity":1,"message":"902","line":3,"column":3,"nodeType":"777","messageId":"778","endLine":3,"endColumn":16},{"ruleId":"775","severity":1,"message":"903","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":16},{"ruleId":"775","severity":1,"message":"904","line":5,"column":3,"nodeType":"777","messageId":"778","endLine":5,"endColumn":20},{"ruleId":"775","severity":1,"message":"905","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":14},{"ruleId":"775","severity":1,"message":"906","line":21,"column":17,"nodeType":"777","messageId":"778","endLine":21,"endColumn":26},{"ruleId":"775","severity":1,"message":"907","line":27,"column":10,"nodeType":"777","messageId":"778","endLine":27,"endColumn":19},{"ruleId":"775","severity":1,"message":"908","line":84,"column":7,"nodeType":"777","messageId":"778","endLine":84,"endColumn":21},{"ruleId":"798","severity":1,"message":"799","line":95,"column":21,"nodeType":"800","messageId":"783","endLine":95,"endColumn":23},{"ruleId":"798","severity":1,"message":"804","line":95,"column":50,"nodeType":"800","messageId":"783","endLine":95,"endColumn":52},{"ruleId":"798","severity":1,"message":"804","line":213,"column":42,"nodeType":"800","messageId":"783","endLine":213,"endColumn":44},{"ruleId":"798","severity":1,"message":"799","line":13,"column":23,"nodeType":"800","messageId":"783","endLine":13,"endColumn":25},{"ruleId":"798","severity":1,"message":"799","line":16,"column":28,"nodeType":"800","messageId":"783","endLine":16,"endColumn":30},{"ruleId":"798","severity":1,"message":"799","line":19,"column":25,"nodeType":"800","messageId":"783","endLine":19,"endColumn":27},{"ruleId":"775","severity":1,"message":"907","line":17,"column":10,"nodeType":"777","messageId":"778","endLine":17,"endColumn":19},{"ruleId":"798","severity":1,"message":"799","line":75,"column":18,"nodeType":"800","messageId":"783","endLine":75,"endColumn":20},{"ruleId":"798","severity":1,"message":"799","line":80,"column":18,"nodeType":"800","messageId":"783","endLine":80,"endColumn":20},{"ruleId":"775","severity":1,"message":"907","line":18,"column":10,"nodeType":"777","messageId":"778","endLine":18,"endColumn":19},{"ruleId":"798","severity":1,"message":"799","line":80,"column":18,"nodeType":"800","messageId":"783","endLine":80,"endColumn":20},{"ruleId":"798","severity":1,"message":"799","line":96,"column":44,"nodeType":"800","messageId":"783","endLine":96,"endColumn":46},{"ruleId":"798","severity":1,"message":"804","line":108,"column":18,"nodeType":"800","messageId":"783","endLine":108,"endColumn":20},{"ruleId":"798","severity":1,"message":"804","line":237,"column":41,"nodeType":"800","messageId":"783","endLine":237,"endColumn":43},{"ruleId":"798","severity":1,"message":"804","line":242,"column":36,"nodeType":"800","messageId":"783","endLine":242,"endColumn":38},{"ruleId":"775","severity":1,"message":"909","line":16,"column":10,"nodeType":"777","messageId":"778","endLine":16,"endColumn":31},{"ruleId":"775","severity":1,"message":"910","line":1,"column":8,"nodeType":"777","messageId":"778","endLine":1,"endColumn":16},{"ruleId":"775","severity":1,"message":"911","line":1,"column":20,"nodeType":"777","messageId":"778","endLine":1,"endColumn":30},{"ruleId":"840","severity":1,"message":"893","line":3,"column":10,"nodeType":"842","messageId":"843","endLine":3,"endColumn":36,"fix":"912"},{"ruleId":"913","severity":1,"message":"914","line":11,"column":43,"nodeType":"915","messageId":"916","endLine":11,"endColumn":44,"suggestions":"917"},{"ruleId":"913","severity":1,"message":"914","line":15,"column":43,"nodeType":"915","messageId":"916","endLine":15,"endColumn":44,"suggestions":"918"},{"ruleId":"913","severity":1,"message":"914","line":19,"column":43,"nodeType":"915","messageId":"916","endLine":19,"endColumn":44,"suggestions":"919"},{"ruleId":"913","severity":1,"message":"914","line":23,"column":29,"nodeType":"915","messageId":"916","endLine":23,"endColumn":30,"suggestions":"920"},{"ruleId":"913","severity":1,"message":"914","line":27,"column":39,"nodeType":"915","messageId":"916","endLine":27,"endColumn":40,"suggestions":"921"},{"ruleId":"798","severity":1,"message":"799","line":74,"column":18,"nodeType":"800","messageId":"783","endLine":74,"endColumn":20},{"ruleId":"794","severity":1,"message":"922","line":104,"column":6,"nodeType":"796","endLine":104,"endColumn":8,"suggestions":"923"},{"ruleId":"819","severity":1,"message":"820","line":4,"column":10,"nodeType":"777","messageId":"778","endLine":4,"endColumn":16},{"ruleId":"819","severity":1,"message":"924","line":5,"column":8,"nodeType":"777","messageId":"778","endLine":5,"endColumn":22},{"ruleId":"819","severity":1,"message":"789","line":12,"column":19,"nodeType":"777","messageId":"778","endLine":12,"endColumn":29},{"ruleId":"819","severity":1,"message":"789","line":10,"column":19,"nodeType":"777","messageId":"778","endLine":10,"endColumn":29},{"ruleId":"819","severity":1,"message":"789","line":11,"column":21,"nodeType":"777","messageId":"778","endLine":11,"endColumn":31},{"ruleId":"794","severity":1,"message":"925","line":73,"column":6,"nodeType":"796","endLine":73,"endColumn":12,"suggestions":"926"},{"ruleId":"798","severity":1,"message":"804","line":108,"column":58,"nodeType":"800","messageId":"783","endLine":108,"endColumn":60},{"ruleId":"801","severity":1,"message":"802","line":18,"column":9,"nodeType":"803","endLine":18,"endColumn":173},{"ruleId":"798","severity":1,"message":"799","line":23,"column":36,"nodeType":"800","messageId":"783","endLine":23,"endColumn":38},{"ruleId":"798","severity":1,"message":"804","line":32,"column":24,"nodeType":"800","messageId":"783","endLine":32,"endColumn":26},{"ruleId":"801","severity":1,"message":"802","line":83,"column":13,"nodeType":"803","endLine":93,"endColumn":15},{"ruleId":"775","severity":1,"message":"927","line":13,"column":15,"nodeType":"777","messageId":"778","endLine":13,"endColumn":21},{"ruleId":"840","severity":1,"message":"893","line":2,"column":10,"nodeType":"842","messageId":"843","endLine":2,"endColumn":36,"fix":"928"},{"ruleId":"840","severity":1,"message":"893","line":2,"column":10,"nodeType":"842","messageId":"843","endLine":2,"endColumn":36,"fix":"929"},{"ruleId":"801","severity":1,"message":"802","line":37,"column":13,"nodeType":"803","endLine":37,"endColumn":38},{"ruleId":"775","severity":1,"message":"930","line":61,"column":11,"nodeType":"777","messageId":"778","endLine":61,"endColumn":26},{"ruleId":"801","severity":1,"message":"802","line":46,"column":21,"nodeType":"803","endLine":46,"endColumn":55},{"ruleId":"775","severity":1,"message":"931","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":14},{"ruleId":"775","severity":1,"message":"793","line":12,"column":9,"nodeType":"777","messageId":"778","endLine":12,"endColumn":16},{"ruleId":"775","severity":1,"message":"930","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":25},{"ruleId":"775","severity":1,"message":"932","line":3,"column":10,"nodeType":"777","messageId":"778","endLine":3,"endColumn":19},{"ruleId":"775","severity":1,"message":"789","line":13,"column":19,"nodeType":"777","messageId":"778","endLine":13,"endColumn":29},{"ruleId":"775","severity":1,"message":"793","line":39,"column":9,"nodeType":"777","messageId":"778","endLine":39,"endColumn":16},{"ruleId":"775","severity":1,"message":"933","line":5,"column":8,"nodeType":"777","messageId":"778","endLine":5,"endColumn":13},{"ruleId":"775","severity":1,"message":"934","line":8,"column":8,"nodeType":"777","messageId":"778","endLine":8,"endColumn":28},{"ruleId":"775","severity":1,"message":"935","line":9,"column":10,"nodeType":"777","messageId":"778","endLine":9,"endColumn":33},{"ruleId":"775","severity":1,"message":"936","line":10,"column":10,"nodeType":"777","messageId":"778","endLine":10,"endColumn":31},"no-native-reassign",["937"],"no-negated-in-lhs",["938"],"@typescript-eslint/no-unused-vars","'Fade' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-dupe-keys","Duplicate key 'MuiDropzoneArea'.","ObjectExpression","unexpected","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'course' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'courseId' and 'loadCourseContent'. Either include them or remove the dependency array.","ArrayExpression",["939"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'match' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["940"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'theme' is assigned a value but never used.","'tempFiles' is assigned a value but never used.","'setTempFiles' is assigned a value but never used.","'showSuccessMessage' is assigned a value but never used.","'successMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'person.accountType', 'person.card', 'person.country', 'person.dob', and 'props.location.state'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDob' needs the current value of 'person.dob'.",["941"],"React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["942"],"no-unused-vars","'Drawer' is defined but never used.",["937"],["938"],"'CardActions' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'StickyContainer' is defined but never used.","'handleFilterChange' is defined but never used.","'ReactSortable' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.",["943"],"'languageItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objects'. Either include it or remove the dependency array. If 'setLanguages' needs the current value of 'objects', you can also switch to useReducer instead of useState and read 'objects' in the reducer.",["944"],["945"],"'TrainRounded' is defined but never used.","'timeout' is defined but never used.","no-useless-rename","Import IFilterType unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"946","text":"947"},"'defaultLecture' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'week.title'. Either include it or remove the dependency array. If 'setFieldValue' needs the current value of 'week.title', you can also switch to useReducer instead of useState and read 'week.title' in the reducer.",["948"],"React Hook useEffect has missing dependencies: 'popUpNavProperty.admin', 'popUpNavProperty.student', and 'popUpNavProperty.teacher'. Either include them or remove the dependency array.",["949"],["937"],["938"],"'IFilteredValue' is defined but never used.","'closeSnackbar' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lecture?.file?.type'. Either include it or remove the dependency array. If 'setBody' needs the current value of 'lecture.file.type', you can also switch to useReducer instead of useState and read 'lecture.file.type' in the reducer.",["950"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"951","text":"952"},{"range":"953","text":"952"},{"range":"954","text":"952"},{"range":"955","text":"952"},{"range":"956","text":"952"},{"range":"957","text":"952"},{"range":"958","text":"952"},"'i' is assigned a value but never used.","'useState' is defined but never used.","'onFileLoad' is assigned a value but never used.","'pictures' is assigned a value but never used.","'onChange' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'convertToRaw' is defined but never used.","'handleMouseEnterLeave' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'loadCourseName'. Either include it or remove the dependency array.",["959"],"'Popover' is defined but never used.","Import authHeaders unnecessarily renamed.",{"range":"960","text":"961"},"'ISource' is defined but never used.","'authHeaders' is defined but never used.","'icon' is assigned a value but never used.","'DrawerList' is defined but never used.","React Hook useEffect has a missing dependency: 'viewType'. Either include it or remove the dependency array.",["962"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'useEffect' is defined but never used.","'Copyright' is defined but never used.","'person' is defined but never used.","'onEnterPressFocusNext' is defined but never used.","'MuiAlert' is defined but never used.","'AlertProps' is defined but never used.",{"range":"963","text":"961"},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["964","965"],["966","967"],["968","969"],["970","971"],["972","973"],"React Hook useEffect has a missing dependency: 'pattern'. Either include it or remove the dependency array.",["974"],"'VisibilityIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'fileObjects' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["975"],"'setKey' is assigned a value but never used.",{"range":"976","text":"961"},{"range":"977","text":"961"},"'PurchaseHistory' is defined but never used.","'Grid' is defined but never used.","'ReviewBox' is defined but never used.","'input' is defined but never used.","'PopularCategoryChart' is defined but never used.","'PopularCourseAdminChart' is defined but never used.","'UserRegistrationChart' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},[398,424],"IFilterType",{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},[1762,1762]," rel=\"noreferrer\"",[2770,2770],[3261,3261],[3751,3751],[4236,4236],[4731,4731],[5230,5230],{"desc":"998","fix":"999"},[75,101],"authHeaders",{"desc":"1000","fix":"1001"},[79,105],{"messageId":"1002","fix":"1003","desc":"1004"},{"messageId":"1005","fix":"1006","desc":"1007"},{"messageId":"1002","fix":"1008","desc":"1004"},{"messageId":"1005","fix":"1009","desc":"1007"},{"messageId":"1002","fix":"1010","desc":"1004"},{"messageId":"1005","fix":"1011","desc":"1007"},{"messageId":"1002","fix":"1012","desc":"1004"},{"messageId":"1005","fix":"1013","desc":"1007"},{"messageId":"1002","fix":"1014","desc":"1004"},{"messageId":"1005","fix":"1015","desc":"1007"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},[37,63],[37,63],"Update the dependencies array to be: [courseId, loadCourseContent]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [username]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [history, person.accountType, person.card, person.country, person.dob, props.location.state]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [courseId]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [courseId, reviews]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [objects]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [courseId, faqs]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [week.title]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [lecture?.file?.type, lecture.title]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [loadCourseName]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [viewType]",{"range":"1042","text":"1043"},"removeEscape",{"range":"1044","text":"1045"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1046","text":"1047"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1048","text":"1045"},{"range":"1049","text":"1047"},{"range":"1050","text":"1045"},{"range":"1051","text":"1047"},{"range":"1052","text":"1045"},{"range":"1053","text":"1047"},{"range":"1054","text":"1045"},{"range":"1055","text":"1047"},"Update the dependencies array to be: [pattern]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [fileObjects, state, type]",{"range":"1058","text":"1059"},[4043,4045],"[courseId, loadCourseContent]",[3474,3476],"[username]",[6996,6998],"[history, person.accountType, person.card, person.country, person.dob, props.location.state]",[1327,1329],"[courseId]",[1155,1164],"[courseId, reviews]",[2431,2433],"[objects]",[1130,1136],"[courseId, faqs]",[1156,1158],"[week.title]",[6376,6378],"[popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",[1576,1591],"[lecture?.file?.type, lecture.title]",[4170,4172],"[loadCourseName]",[3347,3349],"[viewType]",[257,258],"",[257,257],"\\",[414,415],[414,414],[578,579],[578,578],[716,717],[716,716],[852,853],[852,852],[3260,3262],"[pattern]",[1764,1770],"[fileObjects, state, type]"]