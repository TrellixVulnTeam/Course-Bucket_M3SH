[{"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js":"1","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js":"2","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx":"3","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js":"4","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx":"5","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx":"6","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx":"7","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx":"8","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx":"9","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx":"10","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx":"11","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx":"12","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx":"13","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js":"14","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js":"15","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js":"16","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx":"17","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx":"18","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx":"19","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx":"20","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js":"21","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js":"22","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx":"23","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx":"24","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js":"25","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx":"26","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx":"27","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx":"28","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx":"29","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx":"30","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx":"31","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx":"32","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js":"33","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx":"34","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx":"35","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx":"36","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx":"37","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx":"38","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx":"39","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx":"40","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js":"41","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx":"42","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js":"43","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx":"44","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx":"45","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx":"46","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx":"47","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx":"48","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx":"49","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx":"50","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js":"51","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx":"52","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx":"53","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx":"54","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx":"55","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx":"56","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx":"57","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx":"58","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx":"59","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx":"60","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx":"61","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx":"62","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx":"63","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js":"64","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js":"65","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js":"66","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js":"67","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx":"68","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx":"69","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx":"70","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js":"71","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx":"72","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx":"73","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js":"74","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js":"75","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js":"76","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx":"77","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx":"78","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx":"79","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx":"80","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx":"81","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx":"82","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx":"83","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx":"84","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx":"85","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx":"86","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx":"87","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx":"88","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js":"89","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js":"90","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js":"91","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js":"92","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js":"93","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx":"94","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx":"95","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx":"96","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js":"97","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx":"98","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx":"99","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx":"100","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx":"101","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx":"102","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx":"103","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx":"104","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx":"105","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx":"106","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx":"107","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx":"108","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx":"109","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NotificationPopUp.tsx":"110","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\SimpleBackdrop.tsx":"111","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\api\\SearchService.tsx":"112","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\SliderComponent.tsx":"113"},{"size":1296,"mtime":1629086192290,"results":"114","hashOfConfig":"115"},{"size":375,"mtime":1623403118146,"results":"116","hashOfConfig":"115"},{"size":2205,"mtime":1629083999166,"results":"117","hashOfConfig":"115"},{"size":2523,"mtime":1629274478058,"results":"118","hashOfConfig":"115"},{"size":3513,"mtime":1628328034937,"results":"119","hashOfConfig":"115"},{"size":4764,"mtime":1629458653127,"results":"120","hashOfConfig":"115"},{"size":23183,"mtime":1629389436506,"results":"121","hashOfConfig":"115"},{"size":7564,"mtime":1629435271415,"results":"122","hashOfConfig":"115"},{"size":1210,"mtime":1629051509115,"results":"123","hashOfConfig":"115"},{"size":20600,"mtime":1629300070446,"results":"124","hashOfConfig":"115"},{"size":10170,"mtime":1628886240206,"results":"125","hashOfConfig":"115"},{"size":22011,"mtime":1628919561662,"results":"126","hashOfConfig":"115"},{"size":8463,"mtime":1629295338534,"results":"127","hashOfConfig":"115"},{"size":3375,"mtime":1628263362814,"results":"128","hashOfConfig":"115"},{"size":3467,"mtime":1628263362813,"results":"129","hashOfConfig":"115"},{"size":5906,"mtime":1623403109731,"results":"130","hashOfConfig":"115"},{"size":2843,"mtime":1629102274713,"results":"131","hashOfConfig":"115"},{"size":1898,"mtime":1628777390688,"results":"132","hashOfConfig":"115"},{"size":1407,"mtime":1629299434667,"results":"133","hashOfConfig":"115"},{"size":8077,"mtime":1629393968680,"results":"134","hashOfConfig":"115"},{"size":1918,"mtime":1629280179468,"results":"135","hashOfConfig":"115"},{"size":678,"mtime":1629474075946,"results":"136","hashOfConfig":"115"},{"size":703,"mtime":1629278395665,"results":"137","hashOfConfig":"115"},{"size":2968,"mtime":1629094377716,"results":"138","hashOfConfig":"115"},{"size":693,"mtime":1629474005986,"results":"139","hashOfConfig":"115"},{"size":2260,"mtime":1629433208860,"results":"140","hashOfConfig":"115"},{"size":7143,"mtime":1629397207482,"results":"141","hashOfConfig":"115"},{"size":2778,"mtime":1629398165707,"results":"142","hashOfConfig":"115"},{"size":5297,"mtime":1629396591208,"results":"143","hashOfConfig":"115"},{"size":2545,"mtime":1629220389923,"results":"144","hashOfConfig":"115"},{"size":6662,"mtime":1629279696935,"results":"145","hashOfConfig":"115"},{"size":8965,"mtime":1629279628106,"results":"146","hashOfConfig":"115"},{"size":3679,"mtime":1628920097418,"results":"147","hashOfConfig":"115"},{"size":11185,"mtime":1629256857130,"results":"148","hashOfConfig":"115"},{"size":9943,"mtime":1629221657400,"results":"149","hashOfConfig":"115"},{"size":3256,"mtime":1629279301381,"results":"150","hashOfConfig":"115"},{"size":4523,"mtime":1629298332374,"results":"151","hashOfConfig":"115"},{"size":2081,"mtime":1629088337116,"results":"152","hashOfConfig":"115"},{"size":1623,"mtime":1628886147055,"results":"153","hashOfConfig":"115"},{"size":4084,"mtime":1629400023867,"results":"154","hashOfConfig":"115"},{"size":68,"mtime":1628777285516,"results":"155","hashOfConfig":"115"},{"size":6219,"mtime":1629220770540,"results":"156","hashOfConfig":"115"},{"size":1203,"mtime":1629299986291,"results":"157","hashOfConfig":"115"},{"size":1619,"mtime":1628796343912,"results":"158","hashOfConfig":"115"},{"size":12612,"mtime":1629388954104,"results":"159","hashOfConfig":"115"},{"size":2264,"mtime":1626876167123,"results":"160","hashOfConfig":"115"},{"size":4001,"mtime":1629397249320,"results":"161","hashOfConfig":"115"},{"size":616,"mtime":1627731256092,"results":"162","hashOfConfig":"115"},{"size":2054,"mtime":1629085843571,"results":"163","hashOfConfig":"115"},{"size":11190,"mtime":1629262652865,"results":"164","hashOfConfig":"115"},{"size":6552,"mtime":1626876263511,"results":"165","hashOfConfig":"115"},{"size":6331,"mtime":1629396694064,"results":"166","hashOfConfig":"115"},{"size":1038,"mtime":1628746724495,"results":"167","hashOfConfig":"115"},{"size":1421,"mtime":1629258082449,"results":"168","hashOfConfig":"115"},{"size":1281,"mtime":1629221357764,"results":"169","hashOfConfig":"115"},{"size":1099,"mtime":1628747369633,"results":"170","hashOfConfig":"115"},{"size":4721,"mtime":1628593399654,"results":"171","hashOfConfig":"115"},{"size":813,"mtime":1629258042624,"results":"172","hashOfConfig":"115"},{"size":881,"mtime":1628577672587,"results":"173","hashOfConfig":"115"},{"size":751,"mtime":1629221308272,"results":"174","hashOfConfig":"115"},{"size":1107,"mtime":1628710101727,"results":"175","hashOfConfig":"115"},{"size":1174,"mtime":1628742737789,"results":"176","hashOfConfig":"115"},{"size":525,"mtime":1629221279682,"results":"177","hashOfConfig":"115"},{"size":4886,"mtime":1629276154752,"results":"178","hashOfConfig":"115"},{"size":3666,"mtime":1628577666779,"results":"179","hashOfConfig":"115"},{"size":3520,"mtime":1628263362812,"results":"180","hashOfConfig":"115"},{"size":6703,"mtime":1626451200167,"results":"181","hashOfConfig":"115"},{"size":9566,"mtime":1628796382949,"results":"182","hashOfConfig":"115"},{"size":8484,"mtime":1629141224566,"results":"183","hashOfConfig":"115"},{"size":2714,"mtime":1629099781755,"results":"184","hashOfConfig":"115"},{"size":672,"mtime":1629471002539,"results":"185","hashOfConfig":"115"},{"size":2214,"mtime":1629099864072,"results":"186","hashOfConfig":"115"},{"size":1495,"mtime":1628777390645,"results":"187","hashOfConfig":"115"},{"size":720,"mtime":1629473995492,"results":"188","hashOfConfig":"115"},{"size":611,"mtime":1629470992873,"results":"189","hashOfConfig":"115"},{"size":1166,"mtime":1623403117368,"results":"190","hashOfConfig":"115"},{"size":5239,"mtime":1628789443370,"results":"191","hashOfConfig":"115"},{"size":5255,"mtime":1629133006606,"results":"192","hashOfConfig":"115"},{"size":5383,"mtime":1628791594637,"results":"193","hashOfConfig":"115"},{"size":8671,"mtime":1628260045019,"results":"194","hashOfConfig":"115"},{"size":1636,"mtime":1628793437249,"results":"195","hashOfConfig":"115"},{"size":6388,"mtime":1628404431820,"results":"196","hashOfConfig":"115"},{"size":10280,"mtime":1628404877691,"results":"197","hashOfConfig":"115"},{"size":5705,"mtime":1628699594726,"results":"198","hashOfConfig":"115"},{"size":2420,"mtime":1628868452462,"results":"199","hashOfConfig":"115"},{"size":64,"mtime":1628404368032,"results":"200","hashOfConfig":"115"},{"size":1685,"mtime":1629473877972,"results":"201","hashOfConfig":"115"},{"size":5595,"mtime":1628595342177,"results":"202","hashOfConfig":"115"},{"size":4397,"mtime":1629353659556,"results":"203","hashOfConfig":"115"},{"size":2273,"mtime":1629060636163,"results":"204","hashOfConfig":"115"},{"size":2474,"mtime":1629060635976,"results":"205","hashOfConfig":"115"},{"size":1066,"mtime":1629349163419,"results":"206","hashOfConfig":"115"},{"size":747,"mtime":1629307297725,"results":"207","hashOfConfig":"115"},{"size":3098,"mtime":1629458098956,"results":"208","hashOfConfig":"115"},{"size":307,"mtime":1628323877068,"results":"209","hashOfConfig":"115"},{"size":2697,"mtime":1628592157591,"results":"210","hashOfConfig":"115"},{"size":1431,"mtime":1628603372487,"results":"211","hashOfConfig":"115"},{"size":3683,"mtime":1628920293184,"results":"212","hashOfConfig":"115"},{"size":924,"mtime":1629027820139,"results":"213","hashOfConfig":"115"},{"size":572,"mtime":1629255211759,"results":"214","hashOfConfig":"115"},{"size":4247,"mtime":1629297626904,"results":"215","hashOfConfig":"115"},{"size":1199,"mtime":1629473945583,"results":"216","hashOfConfig":"115"},{"size":659,"mtime":1629305939431,"results":"217","hashOfConfig":"115"},{"size":4228,"mtime":1629198964368,"results":"218","hashOfConfig":"115"},{"size":2471,"mtime":1629095085770,"results":"219","hashOfConfig":"115"},{"size":1815,"mtime":1629095061371,"results":"220","hashOfConfig":"115"},{"size":1864,"mtime":1629095028269,"results":"221","hashOfConfig":"115"},{"size":4116,"mtime":1629198349500,"results":"222","hashOfConfig":"115"},{"size":3539,"mtime":1629102081438,"results":"223","hashOfConfig":"115"},{"size":8376,"mtime":1629389315644,"results":"224","hashOfConfig":"115"},{"size":662,"mtime":1629278932034,"results":"225","hashOfConfig":"115"},{"size":503,"mtime":1629398829049,"results":"226","hashOfConfig":"115"},{"size":2874,"mtime":1629458480801,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"1broz17",{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"230"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"236"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"236"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"236"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"236"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"236"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"236"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"230"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"230"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"285","usedDeprecatedRules":"230"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"236"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"236"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"294","usedDeprecatedRules":"230"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"236"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"236"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"236"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"230"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"236"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"236"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"236"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"236"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"333","usedDeprecatedRules":"236"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"236"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"236"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"236"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"236"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"361","usedDeprecatedRules":"362"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"236"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"236"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"236"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"236"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"236"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"230"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"230"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"236"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"236"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"236"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"413","usedDeprecatedRules":"230"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"236"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"421","usedDeprecatedRules":"230"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"230"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"236"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"236"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"236"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"236"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"236"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"236"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"236"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"236"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"236"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"230"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"230"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"230"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"471","usedDeprecatedRules":"230"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"236"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"236"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"236"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"495","usedDeprecatedRules":"236"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"498","usedDeprecatedRules":"236"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"236"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"236"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"236"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"236"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"236"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"236"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"523","usedDeprecatedRules":"236"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js",[],["526","527"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx",["528","529"],"import { CourseView } from \"components/course/courseView/CoursePage\";\r\nimport CreateCourse from \"components/course/createCourse/CreateCoursePage\";\r\nimport { Home } from \"components/Home\";\r\nimport Profile from \"components/person/Profile\";\r\nimport ProfileDetails from \"components/person/ProfileDetails\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport React from \"react\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport AdminDashboard from \"components/AdminPanel/AdminDashboard\";\r\nimport Dashboard from \"components/person/dashboard/Dashboard\";\r\nimport MyCourse from \"components/person/MyCourse\";\r\nimport Search from \"components/search/SearchPage\";\r\nimport Auth from \"layout/Auth\";\r\n\r\n// export const RouteAddress = {\r\n//   home: { route: \"/home\", child: [] },\r\n//   search: { route: \"/search\", child: [] },\r\n//   admin: {\r\n//     route: \"/admin\",\r\n//     child: [\r\n//       { country: { route: \"/country\" }, child: [] },\r\n//       { language: { route: \"/language\" }, child: [] },\r\n//     ],\r\n//   },\r\n//   search: \"/search\",\r\n//   admin: \"/admin\",\r\n// };\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/profile/:username\" component={Profile} />\r\n        <Route path=\"/profile-details\" component={ProfileDetails} />\r\n        <Route path=\"/create-course\" exact component={CreateCourse} />\r\n        <Route path=\"/create-course/:courseId\" component={CreateCourse} />\r\n        <Route path=\"/course/:courseId\" component={CourseView} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/my-course\" component={MyCourse} />\r\n        <Route path=\"/admin\" component={AdminDashboard} />\r\n\r\n        <Route path=\"/file-upload\" component={FileUploader} />\r\n        <Route path=\"/test\" component={Auth} />\r\n        <Redirect from=\"/\" to=\"/test\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["530","531"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js",["532"],"import { createTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// export const theme = createTheme({\r\n//   typography: {\r\n//     subtitle2: {\r\n//       fontSize: 13\r\n//     }\r\n//   },\r\n//   breakpoints: {\r\n//     values: {\r\n//       xs: 0,\r\n//       sm: 767,\r\n//       md: 991,\r\n//       lg: 1199,\r\n//       xl: 1439\r\n//     }\r\n//   },\r\n\r\n//   // overrides: {\r\n//   //   MuiCssBaseline: {\r\n//   //     '@global': {\r\n//   //       '@font-face': [raleway],\r\n//   //     },\r\n//   //   },\r\n//   // },\r\n// });\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    type: \"light\"\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 768,\r\n      md: 992,\r\n      lg: 1100,\r\n      xl: 1440\r\n    }\r\n  }\r\n});\r\nObject.assign(lightTheme, {\r\n  overrides: {\r\n    ...lightTheme.overrides,\r\n    MUIRichTextEditor: {\r\n      placeHolder: {\r\n        position: 'relative'\r\n      },\r\n      // root: {\r\n      //   minHeight: 200\r\n      // },\r\n    },\r\n    MuiDropzoneArea: {\r\n      root: {\r\n        minHeight: \"100%\"\r\n      },\r\n    },\r\n    MuiDropzonePreviewList: {\r\n      root: {\r\n        justifyContent: \"space-around\",\r\n      },\r\n      imageContainer: {\r\n        flexBasis: \"100%\",\r\n        maxWidth: \"90%\",\r\n      },\r\n      image: {\r\n        height: -1\r\n      },\r\n      removeButton: {\r\n        top: 0,\r\n        right: 0,\r\n      },\r\n    },\r\n    MuiDropzoneArea: {\r\n      root: {\r\n        minHeight: 0,\r\n      },\r\n      text: {\r\n        textAlign: \"center\"\r\n      }\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        textAlign: \"justify\",\r\n      }\r\n    },\r\n    PrivateTabIndicator: {\r\n      root: {\r\n        height: 6\r\n      },\r\n      vertical: {\r\n        width: 6\r\n      }\r\n    },\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        margin: 'auto',\r\n        marginRight: 0,\r\n      }\r\n    },\r\n    MuiRating: {\r\n      root: {\r\n        color: '#b4690e',\r\n      }\r\n    }\r\n    // spacing: {\r\n    //   '&:hover': {\r\n    //   },\r\n    // }\r\n  }\r\n})\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  tiny: {\r\n    fontSize: \"8px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  small: {\r\n    fontSize: \"12px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  medium: {\r\n    fontSize: \"16px\",\r\n    fontFamily: \"inherit\",\r\n    lineHeight: \"1.1rem\"\r\n  },\r\n  big: {\r\n    fontSize: \"20px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  huge: {\r\n    fontSize: \"24px\",\r\n    fontFamily: \"inherit\",\r\n  },\r\n  bold: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"inherit\",\r\n  }\r\n}))","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx",["533","534","535","536"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx",["537","538","539","540","541","542","543"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx",["544","545","546","547","548","549","550","551"],"import { Grid } from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport { MiniCourse } from \"classes/Course\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport Filter from \"components/search/Filter\";\r\nimport { FilterChips } from \"components/search/filter/Chips\";\r\nimport Sort from \"components/search/Sort\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport SearchService from \"./api/SearchService\";\r\n\r\nexport interface IFilter {\r\n  type: \"LIST\" | \"CATEGORY\" | \"SLIDER\";\r\n  title: string;\r\n}\r\nexport interface IListFilter extends IFilter {\r\n  items: Array<{ title: string; id: number }>;\r\n}\r\nexport interface ICategoryFilter extends IFilter {\r\n  items: Array<Category>;\r\n}\r\nexport interface ISliderFilter extends IFilter {\r\n  min: number;\r\n  max: number;\r\n  value: Array<number>;\r\n  step: number;\r\n  valueType: string;\r\n}\r\nexport type IFilterType = IListFilter | ISliderFilter | ICategoryFilter;\r\nexport interface IFilteredValue {\r\n  type: \"LIST\" | \"SLIDER\" | \"CATEGORY\";\r\n  title: string;\r\n  value: string | Array<number>;\r\n  id?: number;\r\n  valueType?: string;\r\n}\r\nvar id = 1;\r\nexport const filterObjectList: Array<IFilterType> = [\r\n  {\r\n    title: \"Teacher\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Abrar Fahad\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Mahdi BUET 3\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Md. Mehedi Hasan\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Kazi Wasif Amin Shammya\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    type: \"CATEGORY\",\r\n    items: [],\r\n  },\r\n  {\r\n    title: \"Language\",\r\n    type: \"LIST\",\r\n    items: [\r\n      {\r\n        title: \"Arabic\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"English\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Bangla\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Hindi\",\r\n        id: id++,\r\n      },\r\n      {\r\n        title: \"Persian\",\r\n        id: id++,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Rating\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 5,\r\n    value: [0, 5],\r\n    step: 0.01,\r\n    valueType: \"⭐\",\r\n  },\r\n  {\r\n    title: \"Price\",\r\n    type: \"SLIDER\",\r\n    min: 0,\r\n    max: 10000,\r\n    value: [0, 10000],\r\n    step: 10,\r\n    valueType: \"$\",\r\n  },\r\n];\r\n\r\nconst sortTypes = [\r\n  \"New released\",\r\n  \"Best seller\",\r\n  \"Most reviewed\",\r\n  \"Most rated\",\r\n  \"Price low to high\",\r\n  \"Price high to low\",\r\n];\r\n\r\nconst Search = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  const [filteredData, setFilteredData] = useState<Array<IFilteredValue>>([]);\r\n  const [filteredCourses, setFilteredCourses] = useState<MiniCourse[]>();\r\n  const [sortType, setSortType] = useState(sortTypes[0]);\r\n  useEffect(() => {\r\n    fetchCourses(filteredData, sortType);\r\n  }, [history.location.state.key]);\r\n  function handleSortTypeChange(sort) {\r\n    fetchCourses(filteredData, sort);\r\n    setSortType(sort);\r\n  }\r\n  function onObjectsChange(value: IFilteredValue, type: \"ADD\" | \"REMOVE\") {\r\n    let array;\r\n    if (type === \"ADD\") {\r\n      let idx = filteredData.findIndex((item) => item.title === value.title);\r\n      if (value.type === \"SLIDER\" && idx != -1) {\r\n        array = [...filteredData];\r\n        array[idx] = value;\r\n      } else {\r\n        array = [...filteredData, value];\r\n        console.log(\"array: \", array);\r\n      }\r\n    } else if (type === \"REMOVE\") {\r\n      let idx;\r\n      if (value.type === \"SLIDER\") {\r\n        idx = filteredData.findIndex(\r\n          (item) => item.type === value.type && item.id === value.id\r\n        );\r\n      } else {\r\n        idx = filteredData.findIndex((item) => item.type === value.type);\r\n      }\r\n      array = [...filteredData];\r\n      array.splice(idx, 1);\r\n    }\r\n    setFilteredData(array);\r\n    fetchCourses(array, sortType);\r\n  }\r\n  async function fetchCourses(filteredValue, sort) {\r\n    let array = [...filteredValue];\r\n    console.log(array);\r\n    let object = {\r\n      searchKey: history.location.state.key,\r\n      sorting: sort,\r\n      categories: array\r\n        .map((item) => {\r\n          if (item.type === \"CATEGORY\") return item.id;\r\n        })\r\n        .filter((item) => item != undefined),\r\n      languages: array\r\n        .map((item) => {\r\n          if (item.title === \"Language\") return item.id;\r\n        })\r\n        .filter((item) => item != undefined),\r\n      teachers: array\r\n        .map((item) => {\r\n          if (item.title === \"Teacher\") return item.id;\r\n        })\r\n        .filter((item) => item != undefined),\r\n      price: array.find((item) => item.title === \"Price\")?.value || [\r\n        (\r\n          filterObjectList.find(\r\n            (item) => item.title === \"Price\"\r\n          ) as ISliderFilter\r\n        )?.min,\r\n        (\r\n          filterObjectList.find(\r\n            (item) => item.title === \"Price\"\r\n          ) as ISliderFilter\r\n        )?.max,\r\n      ],\r\n      rating: array.find((item) => item.title === \"Rating\")?.value || [\r\n        (\r\n          filterObjectList.find(\r\n            (item) => item.title === \"Rating\"\r\n          ) as ISliderFilter\r\n        )?.min,\r\n        (\r\n          filterObjectList.find(\r\n            (item) => item.title === \"Rating\"\r\n          ) as ISliderFilter\r\n        )?.max,\r\n      ],\r\n    };\r\n    console.log(object);\r\n    await SearchService.getFilteredCourses(object).then((response) => {\r\n      console.log(\"filtered courses\", response.data);\r\n      setFilteredCourses(response.data);\r\n    });\r\n  }\r\n  function clearAll() {\r\n    setFilteredData([]);\r\n  }\r\n  return (\r\n    <User loading={!filteredCourses}>\r\n      <StickyContainer>\r\n        <Grid container>\r\n          <Responsive displayIn={[\"Laptop\", \"Tablet\"]}>\r\n            <Grid item sm={3}>\r\n              <Grid container direction=\"column\">\r\n                <Sort\r\n                  sortTypes={sortTypes}\r\n                  sortType={sortType}\r\n                  setSortType={handleSortTypeChange}\r\n                />\r\n                <FilterChips\r\n                  filteredData={filteredData}\r\n                  onDelete={onObjectsChange}\r\n                />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Responsive>\r\n          <Responsive displayIn={[\"Mobile\"]}>\r\n            <Grid container>\r\n              <Grid container>\r\n                <Sort\r\n                  sortTypes={sortTypes}\r\n                  sortType={sortType}\r\n                  setSortType={handleSortTypeChange}\r\n                />\r\n                <Filter\r\n                  filteredData={filteredData}\r\n                  filterDataList={filterObjectList}\r\n                  onFilterChange={onObjectsChange}\r\n                  onClearAll={clearAll}\r\n                />\r\n              </Grid>\r\n              <FilterChips\r\n                filteredData={filteredData}\r\n                onDelete={onObjectsChange}\r\n              />\r\n            </Grid>\r\n          </Responsive>\r\n          <Grid item sm={9} xs={12}>\r\n            <CoursePagination courses={filteredCourses} title=\"Search Page\" />\r\n          </Grid>\r\n        </Grid>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx",["552","553"],"import { MiniCourse } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentService from \"./api/StudentService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nfunction MyCourse() {\r\n  const [courses, setCourses] = useState<MiniCourse>();\r\n  const [title, setTitle] = useState(\"\");\r\n  useEffect(() => {\r\n    if (AuthService.getCurrentAccountType() == \"Student\") {\r\n      StudentService.getPurchaseCourse().then((response) => {\r\n        console.log(\"Purchased course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"Purchased Courses\");\r\n      });\r\n    } else if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n      TeacherService.getCreateCourse().then((response) => {\r\n        console.log(\"Created course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"My Courses\");\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <User>\r\n      <CoursePagination courses={courses} title={title} />\r\n    </User>\r\n  );\r\n}\r\n\r\nexport default MyCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx",["554","555","556"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"components/ImageCarousel\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CarouselCourse } from \"./../classes/Course\";\r\nimport CourseService from \"./course/api/CourseService\";\r\nimport { CourseCarousel } from \"./course/CourseCarousel\";\r\n\r\nconst courses = [\r\n  {\r\n    title: \"Free courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homeContainer: {\r\n    padding: theme.spacing(0, 4),\r\n  },\r\n}));\r\n\r\nexport const Home = (props) => {\r\n  const [carouselCourses, setCarouselCourses] = useState<CarouselCourse>(\r\n    new CarouselCourse()\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  let match = useRouteMatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  async function fetchData() {\r\n    await CourseService.getCarouselCourses().then((response) => {\r\n      console.log(response);\r\n      if (response.status === 200) setCarouselCourses(response.data);\r\n    });\r\n    await setLoading(false);\r\n    console.log(\"carousels loaded\");\r\n  }\r\n  return (\r\n    <User loading={loading}>\r\n      <Grid container className={classes.homeContainer} direction=\"column\">\r\n        <Grid item>\r\n          <ImageSlider />\r\n        </Grid>\r\n        <Grid item container direction=\"column\" spacing={2}>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Most Rated\"}\r\n              courses={carouselCourses.mostRated}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Most Reviewed\"}\r\n              courses={carouselCourses.mostReviewed}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Best Seller\"}\r\n              courses={carouselCourses.bestSeller}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel title={\"Free\"} courses={carouselCourses.free} />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"New Released\"}\r\n              courses={carouselCourses.newReleased}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx",["557","558"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { LinkedIn, WorkOutlined } from \"@material-ui/icons\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { MiniCourse } from \"classes/Course\";\r\nimport { Person, Student, Teacher } from \"classes/Person\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TeacherMiniInfo } from \"./../../classes/Person\";\r\nimport PersonService from \"./api/PersonService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"2.5rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  general: [\r\n    {\r\n      type: \"Name\",\r\n      value: \"Md. Mehedi Hasan\",\r\n    },\r\n    {\r\n      type: \"Institution\",\r\n      value: \"Bangladesh University of Engineering and Technology\",\r\n    },\r\n    {\r\n      type: \"About\",\r\n      value:\r\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam?\",\r\n    },\r\n  ],\r\n  socialMediaData: [\r\n    {\r\n      type: \"Email\",\r\n      link: \"66.mehedi@gmail.com\",\r\n      icon: \"<EmailIcon/>\",\r\n    },\r\n    {\r\n      type: \"Facebook\",\r\n      link: \"66.mehedi\",\r\n      icon: \"FacebookIcon\",\r\n    },\r\n    {\r\n      type: \"YouTube\",\r\n      link: \"66.mehedi\",\r\n      icon: \"YoutubeIcon\",\r\n    },\r\n    {\r\n      type: \"Twitter\",\r\n      link: \"66.mehedi\",\r\n      icon: \"TwitterIcon\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const { username } = useParams();\r\n  const [person, setPerson] = useState<Student | Teacher | Person>();\r\n  const [courses, setCourses] = useState<Array<MiniCourse>>();\r\n  const [miniInfo, setMiniInfo] = useState<TeacherMiniInfo>();\r\n\r\n  useEffect(() => {\r\n    PersonService.getPersonToShow(username).then((response) => {\r\n      console.log(\"Fetched person\", response.data);\r\n      setPerson(response.data);\r\n    });\r\n    TeacherService.getCreateCourseByUsername(username).then((response) => {\r\n      console.log(\"Fetched created course list\", response.data);\r\n      setCourses(response.data);\r\n    });\r\n    TeacherService.getMiniInfo(username).then((response) => {\r\n      console.log(\"Teacher mini info \", response.data);\r\n      setMiniInfo(response.data);\r\n    });\r\n  }, []);\r\n  function LeftComponent() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" spacing={3}>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Avatar className={classes.avatar} src={person?.photo?.content} />\r\n            </Grid>\r\n            <Grid item container>\r\n              <Details />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function RightComponent() {\r\n    return (\r\n      <Grid container direction=\"column\" spacing={2}>\r\n        <Grid item container justifyContent=\"space-around\" spacing={2}>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.courseCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Course\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.studentCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Students\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.reviewCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                Review\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3} xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                title={miniInfo?.ratingCount}\r\n                classes={{ title: classes.cardHeader }}\r\n              />\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                <Rating value={miniInfo?.rating} precision={0.1} readOnly />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container>\r\n          <CoursePagination courses={courses} title=\"Courses\" />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  // const SocialMedia = () => {\r\n  //   return (\r\n  //     <Grid item container direction=\"row\" justifyContent=\"space-around\">\r\n  //       {data.socialMediaData.map((item) => (\r\n  //         <Link href=\"#\">\r\n  //           <IconButton>\r\n  //             <Icon iconName={item.type} />\r\n  //           </IconButton>\r\n  //         </Link>\r\n  //       ))}\r\n  //     </Grid>\r\n  //   );\r\n  // };\r\n\r\n  // function Icon({ iconName }) {\r\n  //   if (iconName === \"Email\") return <EmailIcon />;\r\n  //   else if (iconName === \"Facebook\") return <FacebookIcon />;\r\n  //   else if (iconName === \"Twitter\") return <TwitterIcon />;\r\n  //   else if (iconName === \"YouTube\") return <YouTubeIcon />;\r\n  //   return null;\r\n  // }\r\n  function Details() {\r\n    function CreateItem({ attribute, value = \"\", children = <></> }) {\r\n      return (\r\n        <Grid item container direction=\"column\" alignItems=\"flex-start\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\">{attribute}</Typography>\r\n          </Grid>\r\n          <Grid item container>\r\n            {value && <Typography variant=\"body1\">{value}</Typography>}\r\n            {children}\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n    function ContactChip({ url, icon, text }) {\r\n      return (\r\n        <Chip\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          clickable\r\n          icon={icon}\r\n          label={text}\r\n          onClick={(event) => window.open(url, \"_blank\")}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid item container direction=\"column\" spacing={2}>\r\n        <CreateItem\r\n          attribute=\"Name\"\r\n          value={person?.firstName + \" \" + person?.lastName}\r\n        />\r\n        <CreateItem attribute=\"Country\" value={person?.country?.name} />\r\n        {/* <CreateItem attribute=\"Designation\" value={person?.designation?.name} /> */}\r\n        <CreateItem attribute=\"Languages\">\r\n          <Grid container spacing={1}>\r\n            {person?.languages?.map((lang) => (\r\n              <Grid item key={lang.id}>\r\n                <Chip variant=\"outlined\" color=\"primary\" label={lang?.name} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CreateItem>\r\n        <CreateItem attribute=\"Institution\" value={person?.institution} />\r\n        <CreateItem attribute=\"About\" value={person?.about} />\r\n        <CreateItem attribute=\"Contact\">\r\n          <Grid container direction=\"column\" spacing={1}>\r\n            <Grid item container>\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Send Message\r\n              </Button>\r\n            </Grid>\r\n            {person?.fbURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.fb.com/\" + person?.fbURL}\r\n                  icon={<FacebookIcon />}\r\n                  text={`/${person?.fbURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.youtubeURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.youtube.com/channel/\" + person?.fbURL}\r\n                  icon={<YouTubeIcon />}\r\n                  text={`/${person?.youtubeURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.linkedInURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.linkedin.com/\" + person?.fbURL}\r\n                  icon={<LinkedIn />}\r\n                  text={`/${person?.linkedInURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.website && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={person?.website}\r\n                  icon={<WorkOutlined />}\r\n                  text={person?.website}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </CreateItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <Grid container>\r\n        <Grid container direction=\"row\" alignItems=\"flex-start\">\r\n          <Grid item sm={4} lg={3}>\r\n            <LeftComponent />\r\n          </Grid>\r\n          <Grid item sm={8} lg={9} style={{ paddingLeft: 16 }}>\r\n            <RightComponent />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx",["559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport axios from \"axios\";\r\nimport { CreditCard, Designation, EduStatus, Person } from \"classes/Person\";\r\nimport CountryService from \"components/AdminPanel/api/CountryService\";\r\nimport DesignationService from \"components/AdminPanel/api/DesignationService\";\r\nimport EduStatusService from \"components/AdminPanel/api/EduStatusService\";\r\nimport AuthService, { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport User from \"layout/User\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { ImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\nimport { ErrorMessage } from \"tools/Tools\";\r\nimport { Country } from \"./../../classes/Country\";\r\nimport PersonService from \"./api/PersonService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    padding: \"30px 0px\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n// const countryItem: Array<Country> = [\r\n//   { id: 1, name: \"Bangladesh\", adminId: \"Mehedi\" },\r\n//   { id: 2, name: \"India\", adminId: \"Mehedi\" },\r\n//   { id: 3, name: \"Palestain\", adminId: \"Mehedi\" },\r\n//   { id: 4, name: \"Egypt\", adminId: \"Mehedi\" },\r\n//   { id: 5, name: \"Iran\", adminId: \"Mehedi\" },\r\n// ];\r\n// const designations: Array<Designation> = [\r\n//   { id: 1, type: \"Professor\", adminId: \"Mehedi\" },\r\n//   { id: 2, type: \"Freelencer\", adminId: \"Mehedi\" },\r\n// ];\r\n// const eduStatuses: Array<EduStatus> = [\r\n//   { id: 1, type: \"HSC\", adminId: \"Mehedi\" },\r\n//   { id: 2, type: \"SSC\", adminId: \"Mehedi\" },\r\n//   { id: 3, type: \"BA\", adminId: \"Mehedi\" },\r\n//   { id: 4, type: \"BSc\", adminId: \"Mehedi\" },\r\n//   { id: 5, type: \"MA\", adminId: \"Mehedi\" },\r\n//   { id: 6, type: \"MSc\", adminId: \"Mehedi\" },\r\n// ];\r\n\r\nconst ProfileDetails = (props) => {\r\n  const history = useHistory();\r\n  const [person, setPerson] = useState<Person>(props.location.state.person);\r\n  // let person: Person;\r\n\r\n  const [error, setError] = useState(false);\r\n  const [dob, setDob] = React.useState<Date | null>(null);\r\n  const [countryItem, setCountryItem] = useState<Array<Country>>([]);\r\n  const [statusItem, setStatusItem] = useState<\r\n    Array<Designation> | Array<EduStatus>\r\n  >([]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [countryId, setCountryId] = React.useState<number | undefined>();\r\n  const [statusId, setStatusId] = React.useState<number | undefined>();\r\n  const [cardExpireDate, setCardExpireDate] = React.useState<Date | null>(null);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [againNewPassword, setAgainNewPassword] = useState(\"\");\r\n  // const [files, setFiles] = useState<FileObject[]>([]);\r\n  const [tempFiles, setTempFiles] = useState<FileObject[]>([]);\r\n\r\n  // Snackbar control\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  // function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n  //   if (reason === \"clickaway\") {\r\n  //     return;\r\n  //   }\r\n  //   setOpen(false);\r\n  // }\r\n  // Initialize  - start\r\n\r\n  useEffect(() => {\r\n    console.log(\"heheh\");\r\n    if (props.location.state) {\r\n      setPerson(props.location.state.person);\r\n    } else if (AuthService.getCurrentAccountType() != \"\") {\r\n      if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n        axios\r\n          .get(GLOBAL.HOST + \"/get-teacher-self\", authHeaders())\r\n          .then((response) => {\r\n            console.log(\"Person data from header\", response);\r\n            // history.goBack();\r\n            history.push({\r\n              pathname: \"/profile-details\",\r\n              state: {\r\n                person: response.data,\r\n                registered: true,\r\n              },\r\n            });\r\n          });\r\n      } else if (AuthService.getCurrentAccountType() == \"Student\") {\r\n        axios\r\n          .get(GLOBAL.HOST + \"/get-student-self\", authHeaders())\r\n          .then((response) => {\r\n            console.log(\"Person data from header\", response);\r\n            // history.goBack();\r\n            history.push({\r\n              pathname: \"/profile-details\",\r\n              state: {\r\n                person: response.data,\r\n                registered: true,\r\n              },\r\n            });\r\n          });\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n    CountryService.getAllCountries().then((response) => {\r\n      setCountryItem(response.data);\r\n    });\r\n    if (person.accountType == \"Student\") {\r\n      EduStatusService.getAllEduStatus().then((response) => {\r\n        setStatusItem(response.data);\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      DesignationService.getAllDesignation().then((response) => {\r\n        setStatusItem(response.data);\r\n      });\r\n    }\r\n    // console.log(JSON.parse(JSON.stringify(person.country)));\r\n    if (props.location.state.registered) {\r\n      if (person.country) {\r\n        setCountryId(person.country.id);\r\n      }\r\n      if (person.accountType == \"Teacher\") {\r\n        PersonService.getDesignation().then((response) => {\r\n          setStatusId(response.data.id);\r\n        });\r\n      } else if (person.accountType == \"Student\") {\r\n        PersonService.getEduStatus().then((response) => {\r\n          setStatusId(response.data.id);\r\n        });\r\n      }\r\n      if (person.dob) {\r\n        //@ts-ignore\r\n        setDob(person.dob);\r\n      }\r\n      if (person.card && person.card.expireDate) {\r\n        setCardExpireDate(person.card.expireDate);\r\n      }\r\n    }\r\n    // if (person.dob == undefined) {\r\n    //   person.dob = dob;\r\n    // }\r\n    return () => {\r\n      setOldPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setAgainNewPassword(\"\");\r\n    };\r\n  }, []);\r\n  // Initialize - end\r\n\r\n  function passwordInfoCheck(func) {\r\n    if (oldPassword && newPassword && againNewPassword) {\r\n      if (newPassword != againNewPassword) {\r\n        setErrorMessage(\"Password mismatch\");\r\n        setShowErrorMessage(true);\r\n      }\r\n      PersonService.changePassword(oldPassword, newPassword).then(\r\n        (response) => {\r\n          if (response.data.stringValue) {\r\n            setErrorMessage(response.data.stringValue);\r\n            setShowErrorMessage(true);\r\n          } else {\r\n            setSuccessMessage(\"Password change successfully\");\r\n            setShowSuccessMessage(true);\r\n            func();\r\n          }\r\n        }\r\n      );\r\n    } else if (!oldPassword && !newPassword && !againNewPassword) {\r\n      func();\r\n    } else {\r\n      setErrorMessage(\"Fill up password field properly\");\r\n      setShowErrorMessage(true);\r\n    }\r\n  }\r\n\r\n  function register() {\r\n    if (person.accountType == \"Student\") {\r\n      // @ts-ignore\r\n      AuthService.registerStudent(person, statusId).then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        console.log(\"done\");\r\n        history.push(\"/home\");\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      // @ts-ignore\r\n      AuthService.registerTeacher(person, statusId).then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n        console.log(\"done\");\r\n        history.push(\"/home\");\r\n      });\r\n    }\r\n  }\r\n\r\n  function update() {\r\n    if (person.accountType == \"Student\") {\r\n      // @ts-ignore\r\n      PersonService.updateStudent(person, statusId).then((response) => {\r\n        if (response.data.stringValue) {\r\n          setErrorMessage(response.data.stringValue);\r\n          setShowErrorMessage(true);\r\n        } else {\r\n          props.location.state.person = person;\r\n          setSuccessMessage(\"Successfully updated.\");\r\n          setShowSuccessMessage(true);\r\n        }\r\n      });\r\n    } else if (person.accountType == \"Teacher\") {\r\n      // @ts-ignore\r\n      PersonService.updateTeacher(person, statusId).then((response) => {\r\n        if (response.data.stringValue) {\r\n          setErrorMessage(response.data.stringValue);\r\n          setShowErrorMessage(true);\r\n        } else {\r\n          props.location.state.person = person;\r\n          setSuccessMessage(\"Successfully updated.\");\r\n          setShowSuccessMessage(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleSaveClicked(event) {\r\n    event.preventDefault();\r\n    if (person.card) {\r\n      if (\r\n        !person.card.cardNo ||\r\n        !person.card.expireDate ||\r\n        !person.card.nameOnCard\r\n      ) {\r\n        setErrorMessage(\"Please set all information of credit card properly\");\r\n        setShowErrorMessage(true);\r\n        return;\r\n      }\r\n    }\r\n    if (props.location.state.registered) {\r\n      passwordInfoCheck(() => {\r\n        console.log(\"Updated person \", person);\r\n        if (person.photo) {\r\n          person.photo.upload().then(update);\r\n        } else {\r\n          update();\r\n        }\r\n      });\r\n    } else {\r\n      console.log(person);\r\n      if (person.photo) {\r\n        person.photo.upload().then(register);\r\n      } else {\r\n        register();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    let country = countryItem.filter(\r\n      (item) => item.id == event.target.value\r\n    )[0];\r\n    person.country = country;\r\n    setCountryId(event.target.value);\r\n  };\r\n  const handleStatusChange = (event) => {\r\n    setStatusId(event.target.value);\r\n  };\r\n\r\n  // function handleProfilePicChange(event) {\r\n  //   event.preventDefault();\r\n  //   setFiles(event.target.files[0]);\r\n  //   person.photo = new Files(\"PICTURE\", \"Profile Picture\").setFile(\r\n  //     event.target.files[0]\r\n  //   );\r\n  // }\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  function PersonalDetails() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <ControlledTextfield\r\n          label=\"First Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.firstName}\r\n          onChange={(event) => {\r\n            person.firstName = event.target.value;\r\n            console.log(person);\r\n          }}\r\n          required\r\n          pattern=\"name\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"Last Name\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.lastName}\r\n          onChange={(event) => (person.lastName = event.target.value)}\r\n          required\r\n          pattern=\"name\"\r\n        />\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          required\r\n        >\r\n          <InputLabel>Country</InputLabel>\r\n          <Select\r\n            value={countryId}\r\n            onChange={handleCountryChange}\r\n            label=\"Country *\"\r\n          >\r\n            {countryItem.map((item) => (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={classes.formControl}\r\n          required\r\n        >\r\n          <InputLabel>\r\n            {person.accountType == \"Student\"\r\n              ? \"Educational Status\"\r\n              : \"Designation\"}\r\n          </InputLabel>\r\n          <Select\r\n            value={statusId}\r\n            onChange={handleStatusChange}\r\n            label={\r\n              person.accountType == \"Student\"\r\n                ? \"Educational Status *\"\r\n                : \"Designation *\"\r\n            }\r\n          >\r\n            {statusItem.map((item) => (\r\n              <MenuItem key={item.id} value={item.id}>\r\n                {item.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Date of Birth\"\r\n          inputVariant=\"outlined\"\r\n          value={dob}\r\n          margin=\"normal\"\r\n          onChange={(date) => {\r\n            setDob(date);\r\n            person.dob = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          required\r\n        />\r\n        <LanguageField\r\n          objects={person.languages}\r\n          onObjectsChange={(selected) => (person.languages = selected)}\r\n        />\r\n        <TextField\r\n          label=\"Institution\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.institution}\r\n          onChange={(event) => (person.institution = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"Website\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person.website}\r\n          onChange={(event) => (person.website = event.target.value)}\r\n          inputProps={{\r\n            type: \"url\",\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Facebook\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.facebook.com/\",\r\n          }}\r\n          defaultValue={person.fbURL}\r\n          onChange={(event) => (person.fbURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"YouTube\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.youtube.com/channel/\",\r\n          }}\r\n          defaultValue={person.youtubeURL}\r\n          onChange={(event) => (person.youtubeURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"LinkedIn\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          InputProps={{\r\n            startAdornment: \"http://www.linkedin.com/\",\r\n          }}\r\n          defaultValue={person.linkedInURL}\r\n          onChange={(event) => (person.linkedInURL = event.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"About\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          multiline\r\n          rows={6}\r\n          defaultValue={person.about}\r\n          onChange={(event) => (person.about = event.target.value)}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function CreditCardInfo() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Credit Card No\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.cardNo ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.cardNo = event.target.value;\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Name on Card\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={person?.card?.nameOnCard ?? \"\"}\r\n          onChange={(event) => {\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.nameOnCard = event.target.value;\r\n          }}\r\n        />\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"dd/MMM/yyyy\"\r\n          label=\"Expire Date\"\r\n          margin=\"normal\"\r\n          inputVariant=\"outlined\"\r\n          value={cardExpireDate}\r\n          onChange={(date) => {\r\n            setCardExpireDate(date as Date);\r\n            if (person.card == undefined) person.card = new CreditCard();\r\n            person.card.expireDate = date;\r\n          }}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function ProfilePicture() {\r\n    return (\r\n      <ImageUploader\r\n        title=\"Profile Picture\"\r\n        onSetClick={(file) => {\r\n          //@ts-ignore\r\n          setPerson({ ...person, photo: file });\r\n          setErrorMessage(\"\");\r\n        }}\r\n        onDeleteClick={() => {\r\n          person.photo = undefined;\r\n          setErrorMessage(\"\");\r\n        }}\r\n        imageDestination={person?.photo}\r\n      />\r\n    );\r\n  }\r\n  function Security() {\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <TextField\r\n          label=\"Email\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          disabled\r\n          defaultValue={person.email}\r\n        />\r\n        <ControlledTextfield\r\n          label=\"Old Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={oldPassword}\r\n          onChange={(event) => setOldPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"New Password\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={newPassword}\r\n          onChange={(event) => setNewPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n        <ControlledTextfield\r\n          label=\"New Password (Again)\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          defaultValue={againNewPassword}\r\n          onChange={(event) => setAgainNewPassword(event.target.value)}\r\n          type=\"password\"\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  function FullPage() {\r\n    return (\r\n      <Grid item xs={12} sm={8} md={5} style={{ margin: \"0 auto\" }}>\r\n        <form onSubmit={handleSaveClicked} encType=\"multipart/form-data\">\r\n          <Accordion\r\n            expanded={expanded === \"panel1\"}\r\n            onChange={handleChange(\"panel1\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                General settings\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <PersonalDetails />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === \"panel2\"}\r\n            onChange={handleChange(\"panel2\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                Profile Picture\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <ProfilePicture />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === \"panel3\"}\r\n            onChange={handleChange(\"panel3\")}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                Credit Card Information\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <CreditCardInfo />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          {props.location.state.registered && (\r\n            <Accordion\r\n              expanded={expanded === \"panel4\"}\r\n              onChange={handleChange(\"panel4\")}\r\n            >\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                  Security\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Security />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          )}\r\n          <Grid item container justifyContent=\"center\" style={{ padding: 10 }}>\r\n            <Button\r\n              // onClick={handleSaveClicked}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={(event) => history.goBack()}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ marginLeft: 10 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <ErrorMessage\r\n        open={showErrorMessage}\r\n        message={errorMessage}\r\n        onClose={setShowErrorMessage}\r\n      />\r\n      {props.location.state.registered ? (\r\n        <User>\r\n          <Grid container justifyContent=\"center\">\r\n            <FullPage />\r\n          </Grid>\r\n        </User>\r\n      ) : (\r\n        <FullPage />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx",["585","586","587","588","589","590","591"],"import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Course } from \"classes/Course\";\r\nimport { Files } from \"classes/Files\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { CoursePrice } from \"components/course/createCourse/CoursePrice\";\r\nimport { Curriculum } from \"components/course/createCourse/Curriculum/Curriculum\";\r\nimport { TargetStudent } from \"components/course/createCourse/TargetStudent\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport CourseService from \"../api/CourseService\";\r\nimport { LandingPage } from \"./Landing\";\r\n\r\nfunction CreateCourse(props) {\r\n  let { courseId } = useParams();\r\n  let history = useHistory();\r\n  const icon = <InboxIcon />;\r\n  const [course, setCourse] = useState(new Course());\r\n  console.log(course);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (courseId != undefined) {\r\n      CourseService.getCourseForUpdate(courseId).then((response) => {\r\n        console.log(\"Course fetched\", response.data);\r\n        if (history.location?.state?.duplicate) {\r\n          removeId(response.data);\r\n          console.log(\"after removing id\", response.data);\r\n        }\r\n        let cover = response.data.cover;\r\n        response.data.cover = new Files(cover.type, cover.title)\r\n          .setId(cover.id)\r\n          .setContent(cover.content);\r\n        response.data.weeks = response.data.weeks.map((week) => {\r\n          week.lectures = week.lectures.map((lecture) => {\r\n            let file: Files = lecture.file;\r\n            file = new Files(file.type, file.title)\r\n              .setId(file.id)\r\n              .setContent(file.content);\r\n            lecture.file = file;\r\n            return lecture;\r\n          });\r\n          return week;\r\n        });\r\n        setCourse(response.data);\r\n      });\r\n    } else {\r\n      setCourse({\r\n        ...course,\r\n        teacherUsername: AuthService.getCurrentUsername(),\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function removeId(course: any) {\r\n    course.id = undefined;\r\n    course.cover.id = undefined;\r\n    course.properties = course.properties.map((item) => ({\r\n      ...item,\r\n      id: undefined,\r\n      icon: { ...item.icon, id: undefined },\r\n    }));\r\n    course.weeks = course.weeks.map((week) => ({\r\n      ...week,\r\n      id: undefined,\r\n      lectures: week.lectures.map((lecture) => ({\r\n        ...lecture,\r\n        id: undefined,\r\n        file: { ...lecture.file, id: undefined },\r\n      })),\r\n    }));\r\n  }\r\n\r\n  function handleOnSave() {\r\n    let error = false;\r\n    if (!course.title) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Title\", { variant: \"warning\" });\r\n    }\r\n    if (!course.subTitle) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Subtitle\", { variant: \"warning\" });\r\n    }\r\n    if (\r\n      !course.languages ||\r\n      (course.languages && course.languages.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate at least one language\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.description) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Description\", { variant: \"warning\" });\r\n    }\r\n    if (!course.mainCategory || !course.subCategory) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate a Category and Sub-Category\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.cover) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate an attractive cover photo\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (course.mainPrice < 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set a price or set to 0 for FREE\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (\r\n      !course.prerequisites ||\r\n      (course.prerequisites && course.prerequisites.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one prerequisite\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.prerequisites &&\r\n      course.prerequisites.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up prerequisite field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (!course.outcomes || (course.outcomes && course.outcomes.length == 0)) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one outcome\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.outcomes &&\r\n      course.outcomes.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up outcome field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (\r\n      !course.properties ||\r\n      (course.properties && course.properties.length < 3)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least three short properties\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.properties &&\r\n      course.properties.forEach((element) => {\r\n        if (!element.text) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up properties field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (course.weeks.length == 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one week with lecture\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.weeks.forEach((element) => {\r\n      if (element.lectures.length == 0) {\r\n        error = true;\r\n        enqueueSnackbar(\r\n          \"Please set up at least one lecture in week: \" + element.weekNo,\r\n          { variant: \"warning\" }\r\n        );\r\n        return;\r\n      }\r\n      element.lectures.forEach((lecture) => {\r\n        if (!lecture.file) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            `Please set up lecture properly in week: ${element.weekNo} and lecture: ${lecture.lectureNo}`,\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    });\r\n    if (error) return;\r\n\r\n    if (course.id) {\r\n      CourseService.updateCourse(course).then((response) => {\r\n        if (response.status === 200) {\r\n          enqueueSnackbar(\"Course updated successfully\", {\r\n            variant: \"success\",\r\n          });\r\n          history.push(`/course/${courseId}`);\r\n        }\r\n      });\r\n    } else {\r\n      CourseService.addCourse(course).then((response) => {\r\n        if (response.status === 200) {\r\n          enqueueSnackbar(\"Course uploaded successfully\", {\r\n            variant: \"success\",\r\n          });\r\n          history.push(`/course/${response.data}`);\r\n        }\r\n      });\r\n    }\r\n    //   .then((response) => {\r\n    //   if (response.status == 200) {\r\n    //     enqueueSnackbar(\"Successfully uploaded\", { variant: \"success\" });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  function handleOnCancel() {}\r\n\r\n  function handleCourseAttrChange(attribute) {\r\n    setCourse({ ...course, ...attribute });\r\n    console.log(course);\r\n  }\r\n\r\n  const topics: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Landing Page\",\r\n      icon: icon,\r\n      content: (\r\n        <LandingPage\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Target Your Student\",\r\n      icon: <InboxIcon />,\r\n      content: (\r\n        <TargetStudent\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set your curriculum\",\r\n      icon: icon,\r\n      content: (\r\n        <Curriculum\r\n          editable={true}\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set a price\",\r\n      icon: icon,\r\n      content: (\r\n        <CoursePrice\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n          onSave={handleOnSave}\r\n          onCancel={handleOnCancel}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <DrawerLayout objects={topics} />;\r\n}\r\n\r\nexport default CreateCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js",["592","593"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages() {\r\n    LanguageService.getAllLanguages()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteLanguage(id) {\r\n\r\n    LanguageService.deleteLanguage(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Language\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                CalladdLanguage(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateLanguage(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteLanguage(oldData.id)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js",["594","595"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus() }, [])\r\n  }\r\n\r\n  function CallupdateEduStatus(edustatus) {\r\n\r\n    EduStatusService.updateEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus(id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container >\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Educational Status\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdEduStatus(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateEduStatus(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteEdustatus(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js",[],["596","597"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx",["598"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js",["599"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass LanguageService {\r\n\r\n    getAllLanguages() {\r\n        return axios.get(GLOBAL.HOST + '/get-languages')\r\n    }\r\n\r\n    deleteLanguage(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-language/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateLanguage(language) {\r\n        return axios.put(GLOBAL.HOST + '/update-language', language,authHeaders())\r\n    }\r\n\r\n    addLanguage(language) {\r\n        return axios.post(GLOBAL.HOST + '/add-language', language, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new LanguageService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx",["600"],"// components\r\nimport { Header } from \"components/header/Header\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport SimpleBackdrop from \"tools/SimpleBackdrop\";\r\n\r\nexport default function User({\r\n  loading = false,\r\n  children,\r\n}: {\r\n  loading?: boolean;\r\n  children: any;\r\n}) {\r\n  let match = useRouteMatch();\r\n  console.log(\"in user loading\", loading);\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Header />\r\n          <div style={{ margin: \"0 auto\", maxWidth: \"1400px\", padding: 20 }}>\r\n            {loading ? <SimpleBackdrop /> : children}\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx",["601","602","603","604","605","606"],"import { Divider, Grid, GridSpacing, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction CustomPagination({\r\n  type = \"one-item-per-line\",\r\n  title,\r\n  children,\r\n  objectsPerPage = 12,\r\n  divider = false,\r\n  spacing = 2,\r\n}: {\r\n  type?: \"one-item-per-line\" | \"two-item-per-line\" | \"calculate-by-width\";\r\n  children: JSX.Element[];\r\n  title?: string;\r\n  objectsPerPage?: number;\r\n  divider?: boolean;\r\n  spacing?: GridSpacing | undefined;\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const indexOfLastObject = currentPage * objectsPerPage;\r\n  const indexOfFirstObject = indexOfLastObject - objectsPerPage;\r\n  const currentPageObjects = children\r\n    ? children.slice(indexOfFirstObject, indexOfLastObject)\r\n    : [];\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  let elementsWithContainer;\r\n  if (type === \"one-item-per-line\") {\r\n    elementsWithContainer = (\r\n      <Grid container direction=\"column\" spacing={spacing}>\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item container key={index}>\r\n            {index != 0 && divider ? (\r\n              <Grid item xs={12} key={index}>\r\n                <Divider style={{ marginBottom: 4 }} />\r\n              </Grid>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Grid item xs={12}>\r\n              {item}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"two-item-per-line\") {\r\n    elementsWithContainer = (\r\n      <Grid container spacing={2}>\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item xs={6} key={index}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  } else if (type == \"calculate-by-width\") {\r\n    elementsWithContainer = (\r\n      <Grid container direction=\"row\" spacing={2} justifyContent=\"flex-start\">\r\n        {currentPageObjects.map((item, index) => (\r\n          <Grid item xs={6} sm={6} md={3} lg={2} key={index}>\r\n            {item}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {title != undefined && (\r\n        <Typography\r\n          variant=\"h3\"\r\n          style={{ textAlign: \"center\", marginBottom: 10 }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        {elementsWithContainer}\r\n        <Grid item container justifyContent=\"center\">\r\n          <Pagination\r\n            count={children ? Math.ceil(children.length / objectsPerPage) : 0}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            color=\"secondary\"\r\n            siblingCount={3}\r\n            size=\"large\"\r\n            style={{ marginTop: 15 }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPagination;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js",["607"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass EduStatusService {\r\n\r\n    getAllEduStatus() {\r\n        return axios.get(GLOBAL.HOST + '/get-edustatus')\r\n    }\r\n\r\n    deleteEduStatus(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-edustatus/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateEduStatus(edustatus) {\r\n        return axios.put(GLOBAL.HOST + '/update-edustatus', edustatus, authHeaders())\r\n    }\r\n\r\n    addEduStatus(edustatus) {\r\n        return axios.post(GLOBAL.HOST + '/add-edustatus', edustatus, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new EduStatusService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx",["608","609","610"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx",["611","612"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx",["613","614","615"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { WeekView } from \"./WeekView\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\n\r\nexport function Curriculum({ editable, course, onCourseAttrChange }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [weeks, setWeeks] = useState(course.weeks);\r\n\r\n  useEffect(() => {\r\n    // handleOnWeekAdd();\r\n  }, []);\r\n\r\n  function onWeekChange(index, week) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks[index] = week;\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n  function handleOnWeekAdd() {\r\n    let updWeeks = [...weeks, new Week().setWeekNo(weeks.length + 1)];\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n\r\n  function handleOnWeekRemove(index) {\r\n    if (weeks.length == 1) {\r\n      enqueueSnackbar(\"There must be at least a week\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    let updWeeks = [...weeks];\r\n    updWeeks.splice(index, 1);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n    setWeeks([...updWeeks]);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      {/*      <ReactSortable\r\n        list={weeks}\r\n        setList={setWeeks}\r\n      > */}\r\n\r\n      {/* <ReactSortable list={weeks} setList={setWeeks} style={{ width: \"100%\" }}> */}\r\n      {weeks.map((item, index) => (\r\n        // <div key={item.id}>\r\n        <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n          <WeekView\r\n            editable={editable}\r\n            week={item}\r\n            onWeekChange={(week) => onWeekChange(index, week)}\r\n            onWeekRemove={() => handleOnWeekRemove(index)}\r\n            weekNo={index + 1}\r\n            // setWeek={(week) => onWeekChange(index, week)}\r\n            // onWeekAdd={() => handleOnWeekAdd(index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      {/* </ReactSortable> */}\r\n      {editable && (\r\n        <Grid item container justifyContent=\"center\" style={{ marginTop: 10 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddCircle />}\r\n            onClick={handleOnWeekAdd}\r\n          >\r\n            ADD WEEK\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n      {/* </div> */}\r\n      {/* </ReactSortable> */}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx",["616"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { PublicResponse } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  ratingNumber: {\r\n    fontSize: \"6.4rem\",\r\n    fontWeight: 700,\r\n    color: \"#b4690e\",\r\n    lineHeight: \"1\",\r\n  },\r\n  ratingText: {\r\n    color: \"#b4690e\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 700,\r\n  },\r\n}));\r\n\r\nfunction RatingBox({\r\n  data,\r\n  courseId,\r\n  onRatingSubmit,\r\n}: {\r\n  courseId: number;\r\n  data: PublicResponse | undefined;\r\n  onRatingSubmit: () => void;\r\n}) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [ratingValue, setRatingValue] = useState<number>(0);\r\n  const [ratingDone, setRatingDone] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    if (courseId && AuthService.getCurrentAccountType() === \"Student\") {\r\n      CourseService.ratingSelf(courseId).then((response) => {\r\n        if (response.data > 0) setRatingDone(true);\r\n        setRatingValue(response.data);\r\n      });\r\n    }\r\n  }, [courseId]);\r\n  function handleRatingSubmit() {\r\n    CourseService.submitRating(courseId, ratingValue).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your rating submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        setRatingDone(true);\r\n        onRatingSubmit();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item container direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Grid\r\n              item\r\n              md={3}\r\n              xs={3}\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Typography className={classes.ratingNumber}>\r\n                  {data?.ratingValue}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Rating\r\n                  value={\r\n                    data?.ratingValue\r\n                      ? Math.round(data.ratingValue * 10) / 10\r\n                      : 5\r\n                  }\r\n                  readOnly\r\n                  name=\"rating-read-only\"\r\n                />\r\n                <Typography className={classes.ratingText}>\r\n                  ({data?.ratingCount})\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography className={classes.ratingText}>\r\n                  Course Rating\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={9} xs={9} container direction=\"column\" spacing={1}>\r\n              {[5, 4, 3, 2, 1].map((value) => (\r\n                <Grid\r\n                  key={value}\r\n                  item\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item style={{ width: \"100%\" }}>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={\r\n                        data?.ratingByNumber\r\n                          ? (data?.ratingByNumber[value] / data?.ratingCount) *\r\n                            100\r\n                          : 0\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Rating\r\n                      name=\"course-rating-output\"\r\n                      value={value}\r\n                      readOnly\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>{data?.ratingByNumber[value]}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          {AuthService.getCurrentAccountType() === \"Student\" && (\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              xs\r\n              spacing={2}\r\n            >\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                justifyContent=\"center\"\r\n                xs\r\n                spacing={2}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body1\">\r\n                    {ratingDone ? \"Your rating : \" : \"Give a rating\"}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Rating\r\n                    name=\"course-rating-input\"\r\n                    readOnly={ratingDone}\r\n                    value={ratingValue}\r\n                    onChange={(event, value) => setRatingValue(value as number)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              {!ratingDone && ratingValue && ratingValue > 0 ? (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  xs\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleRatingSubmit}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => setRatingValue(0)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RatingBox;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx",["617"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { ReviewInfo } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nexport function ReviewSection({\r\n  reviews,\r\n  courseId,\r\n  teacherUsername,\r\n  onReviewSubmit,\r\n}: {\r\n  reviews?: ReviewInfo[] | undefined;\r\n  courseId: number;\r\n  teacherUsername: string;\r\n  onReviewSubmit: () => void;\r\n}) {\r\n  const [reviewInputShow, setReviewInputShow] = useState(false);\r\n  const [reviewOutputShow, setReviewOutputShow] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [myReview, setMyReview] = useState<ReviewInfo>();\r\n  useEffect(() => {\r\n    if (AuthService.getCurrentAccountType() === \"Student\") {\r\n      CourseService.reviewSelf(courseId).then((response) => {\r\n        console.log(\"my review\", response.data);\r\n        setMyReview(response.data);\r\n      });\r\n    }\r\n  }, [reviews]);\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                Review\r\n              </Typography>\r\n            </Grid>\r\n            {AuthService.getCurrentAccountType() !== \"Admin\" &&\r\n              AuthService.getCurrentUsername() !== teacherUsername && (\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      if (AuthService.getCurrentAccountType() === \"Student\") {\r\n                        myReview\r\n                          ? setReviewOutputShow(true)\r\n                          : setReviewInputShow(true);\r\n                      } else {\r\n                        enqueueSnackbar(\r\n                          'Please log in as \"Student\" to review this course',\r\n                          { variant: \"error\" }\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    {myReview ? \"See your review\" : \"Write a review\"}\r\n                  </Button>\r\n                  {!myReview && (\r\n                    <ReviewInputDialog\r\n                      open={reviewInputShow}\r\n                      courseId={courseId}\r\n                      onClose={() => setReviewInputShow(false)}\r\n                      onReviewSubmit={onReviewSubmit}\r\n                    />\r\n                  )}\r\n                  {myReview && (\r\n                    <ReviewOutputDialog\r\n                      open={reviewOutputShow}\r\n                      review={myReview}\r\n                      onClose={() => setReviewOutputShow(false)}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              )}\r\n          </Grid>\r\n          {!reviews?.length && (\r\n            <Grid item container>\r\n              <Typography variant=\"h5\">\r\n                Be first to review this course\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n          {reviews && (\r\n            <Grid item container direction=\"column\" spacing={2}>\r\n              {reviews?.map((review, index) => (\r\n                <Grid item container key={index}>\r\n                  <Divider\r\n                    style={{ width: \"100%\", marginTop: 8, marginBottom: 16 }}\r\n                  />\r\n                  <ReviewBox review={review} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\nexport function ReviewBox({ review }: { review: ReviewInfo | undefined }) {\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n      <Grid item>\r\n        <IconButton\r\n          onClick={(event) =>\r\n            history.push(`/profile/${review?.studentUsername}`)\r\n          }\r\n        >\r\n          <Avatar src={review?.studentImage} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item container direction=\"column\">\r\n        <Grid>\r\n          <Link href={`/profile/${review?.studentUsername}`} variant=\"h5\">\r\n            {review?.studentName}\r\n          </Link>\r\n        </Grid>\r\n        <Grid item container direction=\"row\" spacing={2}>\r\n          <Grid item>\r\n            <Rating value={review?.ratingValue} readOnly name=\"rating-input\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\">\r\n              {new Date(review?.reviewTime + \"\").toLocaleString()}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"body1\">{review?.review}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction ReviewInputDialog({ open, onClose, courseId, onReviewSubmit }) {\r\n  const [ratingValue, setRatingValue] = useState<number>(0);\r\n  const [ratingDone, setRatingDone] = useState<boolean>(false);\r\n  const [review, setReview] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      CourseService.ratingSelf(courseId).then((response) => {\r\n        if (response.data > 0) setRatingDone(true);\r\n        setRatingValue(response.data);\r\n      });\r\n    }\r\n  }, [courseId]);\r\n  async function handleReviewSubmit() {\r\n    let error = false;\r\n    if (!ratingValue) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please give a rating\", { variant: \"warning\" });\r\n    }\r\n    if (!review) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please give a review and submit again\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (error) return;\r\n    if (!ratingDone) {\r\n      await CourseService.submitRating(courseId, ratingValue).then((response) =>\r\n        console.log(response)\r\n      );\r\n      console.log(\"ratingSubmitted\");\r\n    }\r\n    await CourseService.submitReview(courseId, review).then((response) =>\r\n      console.log(response)\r\n    );\r\n    console.log(\"reviewSubmitted\");\r\n    onReviewSubmit();\r\n    onClose();\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Write a review</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            wrap=\"nowrap\"\r\n            justifyContent=\"center\"\r\n            xs\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"body1\">\r\n                {ratingDone ? \"Your rating : \" : \"Give a rating : \"}{\" \"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Rating\r\n                value={ratingValue}\r\n                readOnly={ratingDone}\r\n                name=\"rating-in-review-box\"\r\n                onChange={(event, value) => setRatingValue(value as number)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              label=\"Write your review\"\r\n              onBlur={(event) => setReview(event.target.value)}\r\n              multiline\r\n              rows={6}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleReviewSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction ReviewOutputDialog({ open, review, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogContent>\r\n        <ReviewBox review={review} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container justifyContent=\"center\">\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js",["618","619","620","621","622","623"],"import {\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  useTheme\r\n} from \"@material-ui/core\";\r\nimport LanguageService from \"components/AdminPanel/api/LanguageService\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n// const languageItem = [\r\n//   \"Bangla\", \"English\", \"Hindi\", \"Arabic\", \"Persian\",\r\n// ]\r\n\r\nconst languageItem = [\r\n  { id: 1, name: \"Bengali\", adminId: \"Mehedi\" },\r\n  { id: 2, name: \"English\", adminId: \"Mehedi\" },\r\n  { id: 3, name: \"Hindi\", adminId: \"Mehedi\" },\r\n  { id: 4, name: \"Arabic\", adminId: \"Mehedi\" },\r\n  { id: 5, name: \"Persian\", adminId: \"Mehedi\" },\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nfunction getStyles(id, languages, theme) {\r\n  return {\r\n    fontWeight:\r\n      languages.some(item => item == id)\r\n        ? theme.typography.fontWeightMedium\r\n        :\r\n        theme.typography.fontWeightRegular,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport function LanguageField({\r\n  objects,\r\n  onObjectsChange = (languages) => console.log(languages),\r\n}) {\r\n  const [languageItem, setLanguageItem] = useState([]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [languages, setLanguages] = useState([]);\r\n  const onLanguagesChange = (event) => {\r\n    setLanguages(event.target.value);\r\n    onObjectsChange(event.target.value.map(item => languageItem.find(langItem => langItem.id == item)));\r\n  };\r\n  useEffect(() => {\r\n    if (objects != undefined)\r\n      setLanguages(objects.map(item => item.id));\r\n    LanguageService.getAllLanguages().then(response => {\r\n      setLanguageItem(response.data);\r\n    });\r\n    return () => {\r\n      // setLanguages([]);\r\n      // setLanguageItem([]);\r\n    }\r\n  }, [])\r\n  // if (objects == undefined) return null;\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-multiple-chip-label\">Language</InputLabel>\r\n      <Select\r\n        label=\"Language\"\r\n        labelId=\"demo-multiple-chip-label\"\r\n        id=\"demo-multiple-chip\"\r\n        multiple\r\n        value={languages}\r\n        onChange={onLanguagesChange}\r\n        // input={<Input />}\r\n        renderValue={(selected) => (\r\n          <div className={classes.chips}>\r\n            {\r\n              selected.map((id) => (\r\n                <Chip\r\n                  key={id}\r\n                  label={languageItem.filter(item => item.id == id)[0]?.name}\r\n                  className={classes.chip}\r\n                />\r\n              )\r\n              )\r\n            }\r\n          </div>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {languageItem.map((item) => {\r\n          // @ts-ignore\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              value={item.id}\r\n              style={getStyles(item.id, languages, theme)}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx",["624","625","626","627"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Course } from \"classes/Course\";\r\nimport { CreditCard } from \"classes/Person\";\r\nimport PersonService from \"components/person/api/PersonService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\n\r\nexport function CongratulationDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n}) {\r\n  return (\r\n    <Dialog open={open} keepMounted onClose={onClose}>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <img src={require(\"assets/img/congratulation.jpg\").default} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h4\">You successfully purchased</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course?.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice &&\r\n                          course.off &&\r\n                          course.mainPrice -\r\n                            (course.mainPrice * course.off) / 100}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function CheckoutDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n  onPurchase,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n  onPurchase: () => void;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [creditCard, setCreditCard] = useState<CreditCard | undefined>();\r\n  useEffect(() => {\r\n    PersonService.getCreditCardDetails().then((response) => {\r\n      console.log(\"Credit card fetched\", response.data);\r\n      setCreditCard(response.data);\r\n    });\r\n    return () => {\r\n      setCreditCard(undefined);\r\n    };\r\n  }, []);\r\n  let offeredPrice =\r\n    course?.mainPrice - (course?.mainPrice * course?.off) / 100;\r\n  let expDate = new Date(creditCard?.expireDate + \"\");\r\n\r\n  if (course == undefined) return <></>;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Checkout</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" wrap=\"nowrap\" xs spacing={4}>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Card details</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Name on card\"\r\n                  value={creditCard?.nameOnCard ? creditCard.nameOnCard : \"\"}\r\n                  onChange={(event) =>\r\n                    setCreditCard({\r\n                      ...creditCard,\r\n                      nameOnCard: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={creditCard?.cardNo ? creditCard.cardNo : \"\"}\r\n                  label=\"Card number\"\r\n                  onChange={(event) =>\r\n                    setCreditCard({ ...creditCard, cardNo: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <KeyboardDatePicker\r\n                  // disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MMM/yyyy\"\r\n                  label=\"Expire Date\"\r\n                  inputVariant=\"outlined\"\r\n                  value={creditCard?.expireDate}\r\n                  onChange={(date) => {\r\n                    setCreditCard({ ...creditCard, expireDate: date as Date });\r\n                  }}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Summary</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Original price</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">{course?.mainPrice}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Discount</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">\r\n                    {course.mainPrice &&\r\n                      course.off &&\r\n                      (course?.mainPrice * course?.off) / 100}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Total</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">\r\n                    {course.mainPrice && course.off && offeredPrice}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    let error = false;\r\n                    if (!creditCard?.cardNo) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide a credit card no\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.nameOnCard) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide name on card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.expireDate) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide expire date of card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    } else if (expDate.getTime() < new Date().getTime()) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Your credit card is expired\", {\r\n                        variant: \"error\",\r\n                      });\r\n                    }\r\n                    if (error) return;\r\n                    onPurchase();\r\n                  }}\r\n                >\r\n                  Complete payment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardHeader>\r\n                <Typography variant=\"h5\">Order details</Typography>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course?.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice && course.off && offeredPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx",["628","629","630"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { FaqInfo } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\nimport CourseService from \"../api/CourseService\";\r\n\r\nexport function FAQSection({\r\n  courseId,\r\n  teacherUsername,\r\n  faqs,\r\n  onSubmit,\r\n}: {\r\n  courseId: number;\r\n  teacherUsername: string;\r\n  faqs: FaqInfo[] | undefined;\r\n  onSubmit: () => void;\r\n}) {\r\n  const [questionInputShow, setQuestionInputShow] = useState(false);\r\n  // const [questionOutputShow, setQuestionOutputShow] = useState(false);\r\n  // const [myFaq, setMyFaq] = useState<FaqInfo>();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  // useEffect(() => {\r\n  //   CourseService.faqSelf(courseId).then((response) => {\r\n  //     console.log(\"my faq\", response.data);\r\n  //     setMyFaq(response.data);\r\n  //   });\r\n  // }, [faqs]);\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h4\" align=\"center\">\r\n                FAQ\r\n              </Typography>\r\n            </Grid>\r\n            {AuthService.getCurrentAccountType() !== \"Admin\" &&\r\n              AuthService.getCurrentUsername() !== teacherUsername && (\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      if (AuthService.getCurrentAccountType() === \"Student\") {\r\n                        setQuestionInputShow(true);\r\n                      } else {\r\n                        enqueueSnackbar(\r\n                          'Please log in as \"Student\" to ask a question',\r\n                          { variant: \"error\" }\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    {\"Ask a question\"}\r\n                  </Button>\r\n                  <FAQInputQuestionDialog\r\n                    courseId={courseId}\r\n                    open={questionInputShow}\r\n                    onClose={() => setQuestionInputShow(false)}\r\n                    onQuestionSubmit={onSubmit}\r\n                  />\r\n                </Grid>\r\n              )}\r\n          </Grid>\r\n          <Grid item container direction=\"column\">\r\n            {faqs?.map((faq, index) => (\r\n              <Grid item container key={index}>\r\n                <Divider\r\n                  style={{ width: \"100%\", marginTop: 8, marginBottom: 16 }}\r\n                />\r\n                <FAQBox faq={faq} onSubmit={onSubmit} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function FAQBox({\r\n  faq,\r\n  onSubmit,\r\n}: {\r\n  faq: FaqInfo | undefined;\r\n  onSubmit?: () => void;\r\n}) {\r\n  const [answerInputShow, setAnswerInputShow] = useState(false);\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n      <Grid item>\r\n        <IconButton\r\n          onClick={() => history.push(`/profile/${faq?.studentUsername}`)}\r\n        >\r\n          <Avatar src={faq?.studentImage} />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item container direction=\"column\">\r\n        <Grid>\r\n          <Link variant=\"h5\" href={`/profile/${faq?.studentUsername}`}>\r\n            {faq?.studentName}\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\">\r\n            {new Date(faq?.questionDate + \"\").toLocaleString()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextEditor value={faq?.question} readOnly />\r\n        </Grid>\r\n        {console.log(faq?.teacherUsername)}\r\n        {console.log(AuthService.getCurrentUsername())}\r\n        {!faq?.answer &&\r\n        faq?.teacherUsername === AuthService.getCurrentUsername() ? (\r\n          <Grid container justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setAnswerInputShow(true)}\r\n            >\r\n              Give an answer\r\n            </Button>\r\n            <FAQInputAnswerDialog\r\n              open={answerInputShow}\r\n              faq={faq}\r\n              onAnswerSubmit={onSubmit}\r\n              onClose={() => setAnswerInputShow(false)}\r\n            />\r\n          </Grid>\r\n        ) : (\r\n          !faq?.answer && <Typography variant=\"body1\">No answer yet</Typography>\r\n        )}\r\n        {faq?.answer && (\r\n          <Grid item style={{ marginTop: 20 }}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n              <Grid item>\r\n                <IconButton\r\n                  onClick={() =>\r\n                    history.push(`/profile/${faq?.teacherUsername}`)\r\n                  }\r\n                >\r\n                  <Avatar src={faq?.teacherImage} />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item container direction=\"column\">\r\n                <Grid>\r\n                  <Link variant=\"h5\" href={`/profile/${faq?.teacherUsername}`}>\r\n                    {faq?.teacherName}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {new Date(faq?.answerDate + \"\").toLocaleString()}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextEditor value={faq?.answer} readOnly />\r\n                  {/* <Typography variant=\"body1\">{faq?.answer}</Typography> */}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction FAQInputQuestionDialog({ open, courseId, onClose, onQuestionSubmit }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  function onSubmitQuestion() {\r\n    if (!question) {\r\n      enqueueSnackbar(\"Please write a question\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    CourseService.submitQuestion(courseId, question).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your question is submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        onQuestionSubmit();\r\n        onClose();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Ask a question</DialogTitle>\r\n      <DialogContent>\r\n        <TextEditor onChange={(value) => setQuestion(value)} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={onSubmitQuestion}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction FAQInputAnswerDialog({ faq, open, onClose, onAnswerSubmit }) {\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  function onSubmitAnswer() {\r\n    if (!answer) {\r\n      enqueueSnackbar(\"Please write an answer\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    CourseService.submitAnswer(faq?.id, answer).then((response) => {\r\n      if (response.status == 200) {\r\n        enqueueSnackbar(\"Your answer is submitted successfully\", {\r\n          variant: \"success\",\r\n        });\r\n        onAnswerSubmit();\r\n        onClose();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Reply this question</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <TextEditor value={faq?.question} readOnly />\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item>\r\n            <TextEditor onChange={(value) => setAnswer(value)} />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={onSubmitAnswer}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\nfunction FAQOutputQuestionDialog({ open, faq, onClose }) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogContent>\r\n        <FAQBox faq={faq} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Grid container justifyContent=\"center\">\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n        </Grid>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx",["631"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Star } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { TeacherMiniInfo } from \"./../../../classes/Person\";\r\n\r\nfunction InstructorShortDetailsBox({\r\n  details,\r\n}: {\r\n  details: TeacherMiniInfo | undefined;\r\n}) {\r\n  const history = useHistory();\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{details?.teacherName}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CardActionArea\r\n              onClick={(event) => history.push(`/profile/${details?.username}`)}\r\n            >\r\n              <Grid container direction=\"row\" wrap=\"nowrap\">\r\n                <Grid item lg={4} md={5} sm={7} xs={12}>\r\n                  <img src={details?.photoContent} />\r\n                </Grid>\r\n                <Grid item lg={8} md={7} sm={5} xs={12}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"space-around\"\r\n                  >\r\n                    <List dense={true}>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          (\r\n                          {Math.round(\r\n                            (details?.rating ? details?.rating : 0) * 100\r\n                          ) / 100}\r\n                          ) {details?.ratingCount} Rating\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.reviewCount} Reviews\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.studentCount} Students\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Star />\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                          {details?.courseCount} Courses\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    </List>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardActionArea>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"h6\">About</Typography>\r\n            <Typography>{details?.about}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InstructorShortDetailsBox;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx",["632","633","634"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport CourseBox from \"components/course/CourseBox\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst CourseBoxContainer = ({ courses }) => {\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        spacing={2}\r\n      >\r\n        {courses.map((course) => (\r\n          <Grid item key={course.id}>\r\n            <CourseBox courseData={course} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nconst CoursePagination = ({ courses, title }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n\r\n  if (courses == undefined) return <></>;\r\n  const indexOfLastCourse = currentPage * postsPerPage;\r\n  const indexOfFirstCourse = indexOfLastCourse - postsPerPage;\r\n  const currentCourses = courses.slice(indexOfFirstCourse, indexOfLastCourse);\r\n\r\n  const paginate = (event, pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <CourseBoxContainer courses={currentCourses} />\r\n      <Pagination\r\n        count={Math.ceil(courses.length / postsPerPage)}\r\n        page={currentPage}\r\n        onChange={paginate}\r\n        color=\"secondary\"\r\n        siblingCount={3}\r\n        size=\"large\"\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CoursePagination;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx",["635"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport React, { useState } from \"react\";\r\nimport { CategorySelector } from \"tools/customDesign/CategorySelector\";\r\nimport {\r\n  ICategoryFilter,\r\n  IFilteredValue,\r\n  IFilterType as IFilterType,\r\n  IListFilter,\r\n  ISliderFilter,\r\n} from \"../SearchPage\";\r\nimport { FilterCheckBox } from \"./FilterCheckbox\";\r\nimport { FilterSlider } from \"./FilterSlider\";\r\n\r\nexport function MakeList({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  console.log(\"filter in makelist\", filter);\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <ListItem key={filter.title} button onClick={() => setOpen(!open)}>\r\n        <ListItemText primary={filter.title} />\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <GenerateFilterValue\r\n          filteredData={filteredData}\r\n          filter={filter}\r\n          onFilterValueChange={onFilterValueChange}\r\n        />\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function GenerateFilterValue({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  if (filter.type === \"CATEGORY\") {\r\n    return (\r\n      <CategorySelector\r\n        categories={(filter as ICategoryFilter).items}\r\n        selectedCategories={filteredData.map(\r\n          (filterValue) =>\r\n            new Category(filterValue.id as number, filterValue.value as string)\r\n        )}\r\n        onCategorySelectionChange={(category, type) => {\r\n          onFilterValueChange(\r\n            {\r\n              type: filter.type,\r\n              title: filter.title,\r\n              value: category.name,\r\n              id: category.id,\r\n            },\r\n            type\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  } else if (filter.type === \"LIST\") {\r\n    return (\r\n      <List>\r\n        {(filter as IListFilter).items.map((item, index) => (\r\n          <ListItem\r\n            key={item.id}\r\n            // @ts-ignore\r\n            value={item}\r\n          >\r\n            <FilterCheckBox\r\n              checked={filteredData.some(\r\n                (data) => data.title === filter.title && data.id === item.id\r\n              )}\r\n              label={item.title}\r\n              onChange={(state) =>\r\n                onFilterValueChange(\r\n                  {\r\n                    type: filter.type,\r\n                    title: filter.title,\r\n                    value: item.title,\r\n                    id: item.id,\r\n                  },\r\n                  state ? \"ADD\" : \"REMOVE\"\r\n                )\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  } else if (filter.type === \"SLIDER\") {\r\n    return (\r\n      <Grid\r\n        style={{ height: \"100%\" }}\r\n        container\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <FilterSlider\r\n          //@ts-ignore\r\n          sliderData={{\r\n            ...filter,\r\n            // @ts-ignore\r\n            value: filteredData.some((item) => item.title === filter.title)\r\n              ? filteredData.find((item) => item.title === filter.title)?.value\r\n              : [(filter as ISliderFilter).min, (filter as ISliderFilter).max],\r\n          }}\r\n          onChange={(value, isClear) =>\r\n            onFilterValueChange(\r\n              {\r\n                type: filter.type,\r\n                title: filter.title,\r\n                value: value,\r\n                valueType: (filter as ISliderFilter).valueType,\r\n              },\r\n              isClear ? \"REMOVE\" : \"ADD\"\r\n            )\r\n          }\r\n          // handleSliderCommitFunc={handleSliderCommit}\r\n          // changeFilteredArrayFunc={handleFilterSliderChange}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx",["636","637","638"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Lecture, Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LectureView } from \"./LectureView\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst defaultLecture = {\r\n  id: 0,\r\n  name: \"Lecture name is here...\",\r\n  type: \"\",\r\n  file: {\r\n    title: \"Title\",\r\n    body: \"\",\r\n  },\r\n};\r\n\r\nexport function WeekView({\r\n  editable,\r\n  week,\r\n  onWeekChange,\r\n  onWeekRemove,\r\n  weekNo,\r\n}: {\r\n  editable: boolean;\r\n  week: Week;\r\n  onWeekChange: (Week) => void;\r\n  onWeekRemove: () => void;\r\n  weekNo: number;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [lectures, setLectures] = useState(week.lectures);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(week.title);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(week.title);\r\n    // handleOnLectureAdd;\r\n  }, []);\r\n\r\n  function handleOnLectureChange(index, lecture) {\r\n    week.lectures.splice(index, 1, lecture);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n  function handleOnLectureAdd() {\r\n    let lectures = [\r\n      ...week.lectures,\r\n      new Lecture().setLectureNo(week.lectures.length + 1),\r\n    ];\r\n    onWeekChange({ ...week, lectures: lectures });\r\n    setLectures(lectures);\r\n  }\r\n  function handleOnLectureRemove(index) {\r\n    if (lectures.length == 1) {\r\n      enqueueSnackbar(\"There must be at least one lecture in a week\", {\r\n        variant: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n    week.lectures.splice(index, 1);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n\r\n  return (\r\n    <Accordion style={{ width: \"100%\" }}>\r\n      <AccordionSummary expandIcon={<ExpandMore />}>\r\n        {/* <IconButton>\r\n          <ImportExport />\r\n        </IconButton> */}\r\n        {!editMode && (\r\n          <Grid container alignItems=\"center\" direction=\"row\" wrap=\"nowrap\">\r\n            {editable && (\r\n              <>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      event.stopPropagation();\r\n                      setEditMode(true);\r\n                    }}\r\n                  >\r\n                    <Edit />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      onWeekRemove();\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            )}\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Week {weekNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> {fieldValue}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container wrap=\"nowrap\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={fieldValue}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Week name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onWeekChange({ ...week, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(week.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n          > */}\r\n\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n            style={{ width: \"100%\" }}\r\n          > */}\r\n          {lectures.map((item, index) => (\r\n            <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n              <LectureView\r\n                editable={editable}\r\n                lecture={item}\r\n                lectureNo={index + 1}\r\n                onLectureChange={(lecture) =>\r\n                  handleOnLectureChange(index, lecture)\r\n                }\r\n                onLectureRemove={() => handleOnLectureRemove(index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          {/* </ReactSortable> */}\r\n          {editable && (\r\n            <Grid\r\n              item\r\n              container\r\n              justifyContent=\"center\"\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<AddCircle />}\r\n                onClick={handleOnLectureAdd}\r\n              >\r\n                ADD LECTURE\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          {/* </ReactSortable> */}\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx",["639","640","641","642"],"import axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\n\r\nexport class Files {\r\n  id: number;\r\n  type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\";\r\n  title: string;\r\n  content: any;\r\n  uploadTime: Date;\r\n  lastUpdateTime: Date;\r\n\r\n  constructor(\r\n    type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\",\r\n    title: string = \"\"\r\n  ) {\r\n    this.type = type;\r\n    this.title = title;\r\n  }\r\n  setFile(file: FileObject): Files {\r\n    console.log(\"In File: \", file);\r\n    this.content = file;\r\n    return this;\r\n  }\r\n  setTitle(title: string): Files {\r\n    this.title = title;\r\n    return this;\r\n  }\r\n  setContent(content: string): Files {\r\n    this.content = content;\r\n    return this;\r\n  }\r\n  setId(id: number): Files {\r\n    this.id = id;\r\n    return this;\r\n  }\r\n  async upload() {\r\n    if (this.type == \"VIDEO\" || this.type == \"PICTURE\" || this.type == \"PDF\") {\r\n      if (this.content.file) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.content.file);\r\n        formData.append(\"type\", this.type);\r\n        formData.append(\"secure\", this.type != \"PICTURE\" ? \"true\" : \"false\");\r\n        await axios\r\n          .put(GLOBAL.HOST + `/resources/upload`, formData, authHeaders())\r\n          .then((response) => {\r\n            this.content = response.data.uri;\r\n            console.log(1);\r\n            console.log(\"File url: \", response.data);\r\n          });\r\n      }\r\n    }\r\n    return await Promise.resolve();\r\n  }\r\n}\r\n\r\nexport {};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx",["643","644","645","646","647","648","649"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx",[],["650","651"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx",["652","653"],"import { Grid, InputAdornment, Slider, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { ISliderFilter } from \"../SearchPage\";\r\n\r\nexport function FilterSlider({\r\n  sliderData,\r\n  onChange,\r\n}: {\r\n  sliderData: ISliderFilter;\r\n  onChange: (value: number[], isClear: boolean) => void;\r\n}) {\r\n  const [value, setValue] = React.useState(sliderData.value);\r\n  useEffect(() => {\r\n    setValue(sliderData.value);\r\n  }, [sliderData.value]);\r\n\r\n  async function handleSliderChange(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    // changeFilteredArrayFunc({ filterType: filterType, min: newValue[0], max: newValue[1] });\r\n  }\r\n  function handleSliderCommit(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    onChange(value, value[0] == sliderData.min && value[1] == sliderData.max);\r\n    // let newObject = object;\r\n    // newObject.value = newValue;\r\n    // onObjectChange(newObject);\r\n  }\r\n\r\n  function handleInputChangeMin(minValue) {\r\n    setValue([Math.min(minValue, value[1]), Math.max(minValue, value[1])]);\r\n  }\r\n  function handleInputChangeMax(maxValue) {\r\n    setValue([Math.min(value[0], maxValue), Math.max(value[0], maxValue)]);\r\n  }\r\n  function handleOnBlurMin(minValue) {\r\n    var newVal = Number(minValue);\r\n    minValue = minValue === \"\" ? 0 : newVal;\r\n    var maxValue = value[1];\r\n\r\n    if (newVal < sliderData.min) minValue = sliderData.min;\r\n    if (newVal > sliderData.max) minValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  }\r\n  const handleOnBlurMax = (maxValue) => {\r\n    var newVal = Number(maxValue);\r\n    var minValue = value[0];\r\n    maxValue = maxValue === \"\" ? 0 : newVal;\r\n\r\n    if (newVal < sliderData.min) maxValue = sliderData.min;\r\n    if (newVal > sliderData.max) maxValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  };\r\n  function generateMarks() {\r\n    var ara: Array<{ value: number; label: string }> = [];\r\n    for (\r\n      var i = sliderData.min;\r\n      i <= sliderData.max;\r\n      i = i + (sliderData.max - sliderData.min) / 5\r\n    ) {\r\n      ara.push({ value: i, label: \"\" + i + sliderData.valueType });\r\n    }\r\n    return ara;\r\n  }\r\n\r\n  return (\r\n    <Grid item container xs spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          min={sliderData.min}\r\n          max={sliderData.max}\r\n          step={sliderData.step}\r\n          value={value}\r\n          onChange={(event, newValue) => handleSliderChange(newValue)}\r\n          onChangeCommitted={(event, newValue) => handleSliderCommit(newValue)}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          marks={generateMarks()}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Min value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[0]}\r\n          onChange={(event) => handleInputChangeMin(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMin(event.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Max value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[1]}\r\n          onChange={(event) => handleInputChangeMax(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMax(event.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx",["654","655","656","657","658","659","660","661","662"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n  PictureAsPdf,\r\n  TextFields,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { Lecture } from \"classes/Course\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ArticleInput } from \"./ArticleInput\";\r\nimport { ArticleOutput } from \"./ArticleOutput\";\r\nimport { LinkInput } from \"./LinkInput\";\r\nimport { LinkOutput } from \"./LinkOutput\";\r\nimport { PDFInput } from \"./PDFInput\";\r\nimport { PDFOutput } from \"./PDFOutput\";\r\nimport { VideoInput } from \"./VideoInput\";\r\nimport { VideoOutput } from \"./VideoOutput\";\r\n\r\nexport function LectureView({\r\n  editable,\r\n  lecture,\r\n  lectureNo,\r\n  onLectureChange,\r\n  onLectureRemove,\r\n}: {\r\n  editable: boolean;\r\n  lecture: Lecture;\r\n  lectureNo: number;\r\n  onLectureChange: (Lecture) => void;\r\n  onLectureRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(lecture.title);\r\n  const [body, setBody] = useState(editable ? \"LECTURE_TYPE\" : \"\");\r\n  const [preview, setPreview] = useState(lecture ? lecture.preview : false);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    setBody(\r\n      lecture?.file?.type\r\n        ? lecture?.file?.type + \"_OUTPUT\"\r\n        : editable\r\n        ? \"LECTURE_TYPE\"\r\n        : \"\"\r\n    );\r\n    setPreview(lecture.preview);\r\n  }, [lecture.title, lecture.preview]);\r\n\r\n  // function handleBodyChange(body) {\r\n  //   setState({ ...state, body: body });\r\n  // }\r\n  // function handleContentClick(panel) {\r\n  //   setState({\r\n  //     ...state,\r\n  //     expanded: state.contentClicked ? '' : panel\r\n  //   })\r\n  // }\r\n  function handleOnSave(file) {\r\n    console.log(file);\r\n    let error = false;\r\n    if (file.title == \"\" || file.title == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Title is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (file.content == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Content is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"VIDEO file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"PDF file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link details is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (error) {\r\n      return;\r\n    }\r\n    onLectureChange({ ...lecture, file: file });\r\n    setBody(file.type + \"_OUTPUT\");\r\n  }\r\n  function handleOnCancel() {\r\n    setBody(\r\n      lecture.file == undefined ? \"LECTURE_TYPE\" : lecture.file.type + \"_OUTPUT\"\r\n    );\r\n  }\r\n  function handleOnUpdate() {\r\n    setBody(lecture.file.type + \"_INPUT\");\r\n  }\r\n  function handlePreviewChange(event) {\r\n    setPreview(!preview);\r\n    onLectureChange({ ...lecture, preview: !preview });\r\n  }\r\n\r\n  function LectureType() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton onClick={(event) => setBody(\"ARTICLE_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <TextFields />\r\n            <Typography>Article</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"VIDEO_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <VideoCall />\r\n            <Typography>Video</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"PDF_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <PictureAsPdf />\r\n            <Typography>PDF</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"LINK_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <LinkIcon />\r\n            <Typography>Link</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function LectureRow() {\r\n    return (\r\n      <>\r\n        {!editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            {editable && (\r\n              <>\r\n                <Grid item>\r\n                  <Tooltip\r\n                    title={\r\n                      preview\r\n                        ? \"This lecture is set as preview\"\r\n                        : \"Do you want to set this lecture as preview?\"\r\n                    }\r\n                    TransitionComponent={Zoom}\r\n                    arrow\r\n                  >\r\n                    <span onClick={(event) => event.stopPropagation()}>\r\n                      <Checkbox\r\n                        checked={preview}\r\n                        onChange={handlePreviewChange}\r\n                      />\r\n                    </span>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      setEditMode(true);\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <Edit />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      onLectureRemove();\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            )}\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Lecture {lectureNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container>\r\n              <Typography> {lecture.title}</Typography>\r\n            </Grid>\r\n            {!expanded && editable && lecture.file == undefined && (\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\r\n                    Content +\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            {expanded && editable && lecture.file == undefined && (\r\n              <Grid item>\r\n                <IconButton\r\n                  onClick={(event) => {\r\n                    setBody(\"LECTURE_TYPE\");\r\n                  }}\r\n                >\r\n                  <Cancel />\r\n                </IconButton>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={lecture.title}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Lecture name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onLectureChange({ ...lecture, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(lecture.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      key={lecture.id}\r\n      expanded={expanded}\r\n      style={{ backgroundColor: \"pink\", width: \"100%\" }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={lecture.file != undefined && <ExpandMore />}\r\n        onClick={() => {\r\n          if (editable || lecture?.file?.content) setExpanded(!expanded);\r\n        }}\r\n      >\r\n        <LectureRow />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {body === \"LECTURE_TYPE\" && <LectureType />}\r\n\r\n        {body === \"ARTICLE_INPUT\" && (\r\n          <ArticleInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"ARTICLE_OUTPUT\" && (\r\n          <ArticleOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"LINK_INPUT\" && (\r\n          <LinkInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"LINK_OUTPUT\" && (\r\n          <LinkOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_INPUT\" && (\r\n          <VideoInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_OUTPUT\" && (\r\n          <VideoOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"PDF_INPUT\" && (\r\n          <PDFInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"PDF_OUTPUT\" && (\r\n          <PDFOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js",["663","664","665","666","667","668","669","670"],"import { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FaPinterestSquare, FaTwitterSquare } from \"react-icons/fa\";\r\nimport {\r\n  ImFacebook2,\r\n  ImInstagram,\r\n  ImLinkedin,\r\n  ImYoutube,\r\n} from \"react-icons/im\";\r\nimport \"./SimpleReactFooter.sass\";\r\n\r\nclass SimpleReactFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.props.backgroundColor || \"bisque\" }}\r\n        className=\"footer-container\"\r\n      >\r\n        <Grid container>\r\n          <Grid className=\"grid-item\" item md={6} sm={12}>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"first-title\"\r\n            >\r\n              {this.props.title}\r\n            </div>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"description\"\r\n            >\r\n              {this.props.description}\r\n            </div>\r\n          </Grid>\r\n          <Grid container md={6}>\r\n            {this.props.columns.map((column) => (\r\n              <Grid className=\"grid-item\" item sm={3} xs={6}>\r\n                <div\r\n                  style={{ color: this.props.fontColor || \"black\" }}\r\n                  className=\"second-title\"\r\n                >\r\n                  {column.title}\r\n                </div>\r\n                {column.resources.map((resource) => (\r\n                  <div key={resource.id}>\r\n                    <a\r\n                      href={`${resource.link}`}\r\n                      target=\"_blank\"\r\n                      style={{ color: this.props.fontColor || \"black\" }}\r\n                      className=\"resources\"\r\n                    >\r\n                      {resource.name}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        {this.props.facebook !== undefined ||\r\n        this.props.linkedin !== undefined ||\r\n        this.props.instagram !== undefined ||\r\n        this.props.twitter !== undefined ||\r\n        this.props.pinterest !== undefined ||\r\n        this.props.youtube !== undefined ? (\r\n          <div className=\"social-media-col\">\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"stay-connected-title\"\r\n            >\r\n              Stay connected\r\n            </div>\r\n            <div className=\"social-media\">\r\n              {this.props.facebook !== undefined ? (\r\n                <a\r\n                  href={`https://www.facebook.com/${this.props.facebook}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImFacebook2\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.linkedin !== undefined ? (\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${this.props.linkedin}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImLinkedin\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.instagram !== undefined ? (\r\n                <a\r\n                  href={`https://www.instagram.com/${this.props.instagram}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImInstagram\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.twitter !== undefined ? (\r\n                <a\r\n                  href={`https://www.twitter.com/${this.props.twitter}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaTwitterSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.pinterest !== undefined ? (\r\n                <a\r\n                  href={`https://www.pinterest.com/${this.props.pinterest}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaPinterestSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.youtube !== undefined ? (\r\n                <a\r\n                  href={`https://www.youtube.com/channel/${this.props.youtube}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImYoutube\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div>\r\n          <div\r\n            style={{ color: this.props.copyrightColor || \"grey\" }}\r\n            className=\"copyright\"\r\n          >\r\n            Copyright &copy; {this.props.copyright}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleReactFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  linkedin: PropTypes.string,\r\n  instagram: PropTypes.string,\r\n  facebook: PropTypes.string,\r\n  youtube: PropTypes.string,\r\n  pinterest: PropTypes.string,\r\n  title: PropTypes.string,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      resources: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          link: PropTypes.string,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n  copyright: PropTypes.string,\r\n  iconColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  copyrightColor: PropTypes.string,\r\n};\r\n\r\nexport default SimpleReactFooter;\r\n",["671","672"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx",["673","674","675"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx",["676","677"],"import { authHeaders } from \"components/auth/api/AuthService\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport VideoPlayer from \"tools/customDesign/VideoPlayer\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function VideoOutput({ editable, file, onUpdate }: LectureOutputProps) {\r\n  const [videoUrl, setVideoUrl] = useState<string | null>(\"\");\r\n  useEffect(() => {\r\n    // axios.get(url, authHeaders()).then((response) => {\r\n    //   console.log(\"video is loaded\", response.data);\r\n    //   setFile(response.data);\r\n    // });\r\n    // return () => {\r\n    //   setFile(\"\");\r\n    // };\r\n    if (file?.content && file?.content?.file == undefined) videoFetch();\r\n    else if (file?.content?.file)\r\n      setVideoUrl(URL.createObjectURL(file?.content?.file));\r\n    return () => setVideoUrl(null);\r\n  }, [file.content]);\r\n  async function videoFetch() {\r\n    const result = await fetch(\r\n      file.content,\r\n      // @ts-ignore\r\n      authHeaders()\r\n    );\r\n    console.log(\"video fetched\");\r\n    const blob = await result.blob();\r\n    if (blob) {\r\n      setVideoUrl(URL.createObjectURL(blob));\r\n    }\r\n  }\r\n  return (\r\n    <OutputLayout editable={editable} onUpdate={onUpdate}>\r\n      <VideoPlayer url={videoUrl as string} />\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.title} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx",["678","679","680","681","682","683","684"],"import { Button, Link } from \"@material-ui/core\";\r\nimport { CloudDownloadRounded } from \"@material-ui/icons\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function PDFOutput({ editable, file, onUpdate }: LectureOutputProps) {\r\n  const onFileLoad = (e, file) => console.log(e.target.result, file.name);\r\n  const [pictures, setPictures] = useState({});\r\n  const onChange = (pictures) => setPictures({ pictures });\r\n\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <OutputLayout editable={editable} onUpdate={onUpdate}>\r\n      {/* <PDFViewer url={URL.createObjectURL(file?.content?.file)} /> */}\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.title} />\r\n      <Link\r\n        href={\r\n          file?.content?.file\r\n            ? URL.createObjectURL(file?.content?.file)\r\n            : file?.content\r\n        }\r\n      >\r\n        <Button style={{ color: \"green\" }} startIcon={<CloudDownloadRounded />}>\r\n          Download\r\n        </Button>\r\n      </Link>\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx",["685","686"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\n\r\nexport function PDFInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTitle] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setTitle(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"PDF\", title).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <FileUploader\r\n        fileObjects={file?.content?.file ? [file.content] : []}\r\n        filesLimit={1}\r\n        type=\"pdf\"\r\n        onChange={(files) => setContent(files[0])}\r\n      />\r\n      <TextEditor value={file?.title} onChange={(value) => setTitle(value)} />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx",["687"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { Category } from \"classes/Category\";\r\nimport React from \"react\";\r\n\r\n// let CSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    backgroundColor: \"#ffc107\",\r\n    padding: 8,\r\n  },\r\n  menuItemWrapper: {\r\n    height: \"auto\",\r\n  },\r\n  menu: {\r\n    cursor: \"pointer\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"space-between\",\r\n      borderBottom: \"1px solid black\",\r\n    },\r\n  },\r\n  subMenuContainer: {\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fd7e14\",\r\n    zIndex: 100,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"relative\",\r\n      marginLeft: \"20px\",\r\n      // right: \"80%\",\r\n      // width: \"100%\",\r\n    },\r\n  },\r\n  subMenuItem: {\r\n    padding: theme.spacing(1, 3),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  signInBtn: {\r\n    justify: \"start\",\r\n    label: {\r\n      justify: \"start\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const menuItems = {\r\n  defaultExpanded: [],\r\n  data: [\r\n    {\r\n      title: \"Menu 1\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 2\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 1\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 2\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 3\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 3\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 4\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 5\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 6\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 7\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 8\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport function SubMenu({\r\n  subCategories,\r\n  open,\r\n}: {\r\n  subCategories: Category[];\r\n  open: boolean;\r\n}) {\r\n  const classes = useStyles();\r\n  if (!subCategories.length) return <></>;\r\n  else\r\n    return (\r\n      <div className={classes.subMenuContainer}>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {subCategories.map((item) => (\r\n              <ListItem className={classes.subMenuItem} button key={item.id}>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction Menu({ mainCategory }: { mainCategory: Category }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleMouseEnterLeave = (doOpen) => {\r\n    if (mainCategory.children.length) {\r\n      setOpen(doOpen);\r\n    }\r\n  };\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.menuItemWrapper}\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n    >\r\n      {mainCategory.name}\r\n      {mainCategory.children.length > 0 && !open ? (\r\n        <ExpandMore />\r\n      ) : (\r\n        <ExpandLess />\r\n      )}\r\n      <SubMenu subCategories={mainCategory.children} open={open} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function MenuBar({ mainCategories }: { mainCategories: Category[] }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-around\" direction=\"row\">\r\n      {mainCategories.map((mainCategory) => (\r\n        <Grid item className={classes.menu} key={mainCategory.id}>\r\n          <Menu mainCategory={mainCategory} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx",["688","689"],"import { TextField } from \"@material-ui/core\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\n\r\nexport function LinkInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [link, setLink] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setLink(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"LINK\", link).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <TextEditor\r\n        value={file?.content}\r\n        onChange={(value) => setContent(value)}\r\n      />\r\n      <TextField\r\n        label=\"Source Link\"\r\n        variant=\"outlined\"\r\n        defaultValue={link}\r\n        onBlur={(event) => setLink(event.target.value)}\r\n        InputProps={{\r\n          startAdornment: \"http://\",\r\n        }}\r\n      />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js",["690"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport CountryService from '../AdminPanel/api/CountryService.js';\r\n\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllCountries()\r\n\r\n  function getAllCountries() {\r\n    CountryService.getAllCountries()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCountries() {\r\n    useEffect(() => { getAllCountries() }, []);\r\n  }\r\n\r\n  function CallupdateCountry(country) {\r\n\r\n    CountryService.updateCountry(country)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n  }\r\n  function CalldeleteCountry(id) {\r\n\r\n    CountryService.deleteCountry(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  function CalladdCountry(country) {\r\n\r\n    CountryService.addCountry(country)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Country\"\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                //console.log(newData.id)\r\n                CalladdCountry(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                //setData([...dataUpdate]);\r\n                CallupdateCountry(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete])\r\n                CalldeleteCountry(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default CountryComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js",["691","692"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport DesignationService from '../AdminPanel/api/DesignationService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction DesignationComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Designation ', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllDesignations()\r\n\r\n\r\n  function getAllDesignations() {\r\n    DesignationService.getAllDesignation()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllDesignations() {\r\n    useEffect(() => { getAllDesignations() }, []);\r\n  }\r\n\r\n  function CallupdateDesignation(designation) {\r\n\r\n    DesignationService.updateDesignation(designation)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteDesignation(id) {\r\n\r\n    DesignationService.deleteDesignation(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdDesignation(designation) {\r\n\r\n    DesignationService.addDesignation(designation)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Designation\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdDesignation(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateDesignation(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteDesignation(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DesignationComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx",["693","694","695","696"],"import {\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport { Course } from \"classes/Course\";\r\nimport CategoryService from \"components/AdminPanel/api/CategoryService\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\n\r\nexport function LandingPage({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  const [categories, setCategories] = useState<Category[]>();\r\n  const [subCategories, setSubCategories] = useState<Category[]>();\r\n  const [mainCategoryId, setMainCategoryId] = useState(0);\r\n  const [subCategoryId, setSubCategoryId] = useState(0);\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    subTitle: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  // const [course, setCourse] = useState(course);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      title: course.title,\r\n      subTitle: course.subTitle,\r\n      description: course.description,\r\n    });\r\n    CategoryService.getCategories().then((response) => {\r\n      console.log(response.data);\r\n      setCategories(response.data[0].children);\r\n      console.log(\"Course\", course);\r\n      if (course.mainCategory) {\r\n        setMainCategoryId(course.mainCategory.id);\r\n        setSubCategories(\r\n          response.data[0].children.filter(\r\n            (item) => item.id == course.mainCategory.id\r\n          )[0].children\r\n        );\r\n      }\r\n      if (course.subCategory) setSubCategoryId(course.subCategory.id);\r\n    });\r\n    return () => {\r\n      // setCategories([]);\r\n      // setSubCategories([]);\r\n    };\r\n  }, [course]);\r\n  console.log(\"cover\", course.cover);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"space-between\" spacing={2}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignContent=\"space-between\"\r\n              spacing={2}\r\n            >\r\n              <Grid item container>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course title\"\r\n                  value={state.title}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    setState({ ...state, title: event.target.value })\r\n                  }\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ title: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course subtitle\"\r\n                  value={state.subTitle}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, subTitle: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ subTitle: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course description\"\r\n                  value={state.description}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, description: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ description: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <LanguageField\r\n                  objects={course.languages}\r\n                  onObjectsChange={(languages) =>\r\n                    onCourseAttrChange({ languages: languages })\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n                  Category\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                {/* <Typography>Category</Typography> */}\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Main Category</InputLabel>\r\n                  <Select\r\n                    value={mainCategoryId}\r\n                    onChange={(event) => {\r\n                      if (event.target.value != 0) {\r\n                        setMainCategoryId(event.target.value as number);\r\n                        setSubCategories(\r\n                          categories?.filter(\r\n                            (item) => item.id == event.target.value\r\n                          )[0].children\r\n                        );\r\n                        setSubCategoryId(0);\r\n                        onCourseAttrChange({\r\n                          mainCategory: categories?.filter(\r\n                            (cat) => cat.id === (event.target.value as number)\r\n                          )[0],\r\n                        });\r\n                      }\r\n                    }}\r\n                    label=\"Main Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {console.log(categories)}\r\n                    {categories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Sub Category</InputLabel>\r\n                  <Select\r\n                    value={subCategoryId}\r\n                    onChange={(event) => {\r\n                      setSubCategoryId(event.target.value as number);\r\n                      onCourseAttrChange({\r\n                        subCategory: subCategories?.filter(\r\n                          (cat) => cat.id === (event.target.value as number)\r\n                        )[0],\r\n                      });\r\n                    }}\r\n                    label=\"Sub Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {subCategories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container>\r\n              <ImageUploader\r\n                title=\"Course Cover\"\r\n                imageDestination={course.cover}\r\n                onSetClick={(file) => {\r\n                  onCourseAttrChange({ cover: file });\r\n                }}\r\n                onDeleteClick={() => {\r\n                  onCourseAttrChange({ cover: undefined });\r\n                }}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n{\r\n  /* <Grid container direction=\"column\" spacing={2}>\r\n                  <Grid item container sm>\r\n                    {categories.map((category, idx) => (\r\n                      <Grid item key={category.id}>\r\n                        <Chip\r\n                          size=\"medium\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: 5,\r\n                            marginRight: 5,\r\n                          }}\r\n                          label={category.name}\r\n                          onDelete={() => {\r\n                            let array = [...categories];\r\n                            array.splice(idx, 1);\r\n                            setCategories(array);\r\n                            onCourseAttrChange({ categories: array });\r\n                          }}\r\n                          color=\"secondary\"\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                  <Grid item container justifyContent=\"center\">\r\n                    {categories.length > 0 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setCategories([])}\r\n                      >\r\n                        Clear All\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <CategorySelector\r\n                  categories={categoryList}\r\n                  selectedCategories={categories}\r\n                  onCategorySelectionChange={handleCategoriesChange}\r\n                /> */\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx",["697","698","699","700","701","702"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport {\r\n  ArgumentAxis,\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TeacherService from \"../api/TeacherService\";\r\n\r\ninterface ISource {\r\n  date: Date | string;\r\n  enrStdCount: number;\r\n  reviewCount: number;\r\n  oneStar: number;\r\n  twoStar: number;\r\n  threeStar: number;\r\n  fourStar: number;\r\n  fiveStar: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\ninterface ICourse {\r\n  id: number;\r\n  title: string;\r\n  image?: string;\r\n}\r\n\r\nfunction convertToDay(date: Date) {\r\n  return date.toLocaleString(\"default\", { weekday: \"short\" });\r\n}\r\nfunction convertToDate(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n}\r\nfunction convertToMonth(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n\r\nfunction generateArrayByDay(\r\n  source: ISource[],\r\n  day: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < day; i++) {\r\n    let date = new Date(\r\n      new Date().setDate(new Date().getDate() - (day - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let data = source.filter(\r\n      (item) => (item.date as Date).getTime() == date.getTime()\r\n    );\r\n    console.log(source[0].date, new Date(source[0].date), date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      enrStdCount: data.length ? data[0].enrStdCount : 0,\r\n      reviewCount: data.length ? data[0].reviewCount : 0,\r\n      oneStar: data.length ? data[0].oneStar : 0,\r\n      twoStar: data.length ? data[0].twoStar : 0,\r\n      threeStar: data.length ? data[0].threeStar : 0,\r\n      fourStar: data.length ? data[0].fourStar : 0,\r\n      fiveStar: data.length ? data[0].fiveStar : 0,\r\n    });\r\n  }\r\n  console.log(day + \" days\", array);\r\n  return array;\r\n}\r\nfunction generateArrayByMonth(\r\n  source: ISource[],\r\n  month: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < month; i++) {\r\n    let date = new Date(\r\n      new Date().setMonth(new Date().getMonth() - (month - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let enrStdCount: number = 0;\r\n    let reviewCount: number = 0;\r\n    let oneStar: number = 0;\r\n    let twoStar: number = 0;\r\n    let threeStar: number = 0;\r\n    let fourStar: number = 0;\r\n    let fiveStar: number = 0;\r\n    let data = source.map((item) => {\r\n      if ((item.date as Date).getMonth() == date.getMonth()) {\r\n        enrStdCount += item.enrStdCount;\r\n        reviewCount += item.reviewCount;\r\n        oneStar += item.oneStar;\r\n        twoStar += item.twoStar;\r\n        threeStar += item.threeStar;\r\n        fourStar += item.fourStar;\r\n        fiveStar += item.fiveStar;\r\n      }\r\n    });\r\n    console.log(\"format\", format(date));\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      enrStdCount: enrStdCount,\r\n      reviewCount: reviewCount,\r\n      oneStar: oneStar,\r\n      twoStar: twoStar,\r\n      threeStar: threeStar,\r\n      fourStar: fourStar,\r\n      fiveStar: fiveStar,\r\n    });\r\n  }\r\n  console.log(month + \" days\", array);\r\n  return array;\r\n}\r\n\r\nexport function OverviewBarChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[0]);\r\n  const [courseArray, setCourseArray] = useState<ICourse[]>([]);\r\n  const [selectedCourse, setSelectedCourse] = useState<ICourse>({\r\n    id: 0,\r\n    title: \"--Select--\",\r\n  });\r\n  const [dataSource, setDataSource] = useState<ISource[]>([]);\r\n  const [temp, setTemp] = useState<ISource[]>([]);\r\n  useEffect(() => {\r\n    loadCourseName();\r\n  }, []);\r\n  async function loadCourseName() {\r\n    await TeacherService.getCreateCourse().then((response) => {\r\n      console.log(\"create course fetched\", response.data);\r\n      let array = response.data.map((item) => ({\r\n        id: item.id,\r\n        title: item.title,\r\n        image: item.coverContent,\r\n      }));\r\n      setCourseArray(array);\r\n      handleCourseChange(array[0]);\r\n    });\r\n  }\r\n  async function handleCourseChange(course) {\r\n    await setSelectedCourse(course);\r\n    await axios\r\n      .get(GLOBAL.HOST + `/get-course-overview/${course.id}`, authHeaders())\r\n      .then((response) => {\r\n        console.log(\"overview fetch for course \" + course.title, response.data);\r\n        let source = response.data.overviewContents.map((item) => ({\r\n          ...item,\r\n          date: new Date(item.date),\r\n        }));\r\n        setDataSource(source);\r\n        handleViewTypeChange(source, viewTypeArray[0]);\r\n      });\r\n  }\r\n  function handleViewTypeChange(source: ISource[], type) {\r\n    console.log(type);\r\n    setViewType(type);\r\n    switch (type) {\r\n      case viewTypeArray[0]:\r\n        setTemp(generateArrayByDay(source, 7, convertToDay));\r\n        break;\r\n      case viewTypeArray[1]:\r\n        setTemp(generateArrayByDay(source, 30, convertToDate));\r\n        break;\r\n      case viewTypeArray[2]:\r\n        setTemp(generateArrayByMonth(source, 12, convertToMonth));\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={temp}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"stackedBar\" />\r\n          <Series\r\n            valueField=\"enrStdCount\"\r\n            name=\"Enrolled Student\"\r\n            stack=\"Enrolled Student\"\r\n          />\r\n          <Series valueField=\"reviewCount\" name=\"Review\" stack=\"Review\" />\r\n          <Series valueField=\"oneStar\" name=\"1 star\" stack=\"Rating\" />\r\n          <Series valueField=\"twoStar\" name=\"2 star\" stack=\"Rating\" />\r\n          <Series valueField=\"threeStar\" name=\"3 star\" stack=\"Rating\" />\r\n          <Series valueField=\"fourStar\" name=\"4 star\" stack=\"Rating\" />\r\n          <Series valueField=\"fiveStar\" name=\"5 star\" stack=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Student number\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ArgumentAxis\r\n          // defaultVisualRange={{ startValue: 300, endValue: 500 }}\r\n          />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Select\r\n              value={viewType}\r\n              onChange={(event) =>\r\n                handleViewTypeChange(dataSource, event.target.value as string)\r\n              }\r\n              variant=\"outlined\"\r\n            >\r\n              {viewTypeArray.map((item) => (\r\n                <MenuItem\r\n                  key={item}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Select\r\n              value={selectedCourse}\r\n              onChange={(event) => handleCourseChange(event.target.value)}\r\n              variant=\"outlined\"\r\n            >\r\n              {courseArray.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    spacing={1}\r\n                    justifyContent=\"flex-start\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={item.image} style={{ width: 40, height: 25 }} />\r\n                    </Grid>\r\n                    <Grid item>{item.title}</Grid>\r\n                  </Grid>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx",["703"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport Popover from \"devextreme-react/popover\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport function CoursePopularityPieChart() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-course-popularity-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            title: item.courseName,\r\n            rating: item.rating,\r\n            ratingCount: item.ratingCount,\r\n            enrolledStudentCount: item.enrolledStudentCount,\r\n            reviewCount: item.reviewCount,\r\n            value:\r\n              item.rating * 40 +\r\n              item.ratingCount * 10 +\r\n              item.enrolledStudentCount * 30 +\r\n              item.reviewCount * 20,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    console.log(arg);\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.rating} (${data.ratingCount})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.reviewCount}</Typography>\r\n        <Typography variant=\"body2\">\r\n          Enrolled Student: {data.enrolledStudentCount}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Popularity\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js",["704"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\n\r\nclass CountryService {\r\n\r\n    getAllCountries() {\r\n        return axios.get(GLOBAL.HOST + '/get-countries')\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-country/${id}`, authHeaders())\r\n    }\r\n\r\n\r\n    updateCountry(country) {\r\n        return axios.put(GLOBAL.HOST + '/update-country', country, authHeaders())\r\n    }\r\n\r\n    addCountry(country) {\r\n        return axios.post(GLOBAL.HOST + '/add-country', country, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new CountryService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx",["705"],"import { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport {\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  rating: number;\r\n}\r\nexport function RatingLineChart() {\r\n  // const dataSource: Array<ISource> = [];\r\n  // function generateRandomData() {\r\n  //   let n = 30;\r\n  //   for (let i = 0; i < n; i++) {\r\n  //     let data;\r\n  //     let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n  //     data = new Date(date).toLocaleString(\"default\", {\r\n  //       day: \"numeric\",\r\n  //       month: \"long\",\r\n  //     });\r\n  //     console.log(data);\r\n  //     dataSource.push({\r\n  //       state: data,\r\n  //       rating: Math.random() * 5,\r\n  //     });\r\n  //   }\r\n  // }\r\n  // generateRandomData();\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-cumulative-rating-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            date: new Date(item.date).toLocaleString(\"default\", {\r\n              day: \"numeric\",\r\n              month: \"long\",\r\n            }),\r\n            rating: item.rating,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n  console.log(dataSource);\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Rating\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"spline\" />\r\n          <Series valueField=\"rating\" name=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Rating\" />\r\n          </ValueAxis>\r\n          <Legend visible={false} />\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js",["706"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass DesignationService {\r\n\r\n    getAllDesignation() {\r\n        return axios.get(GLOBAL.HOST + '/get-designations')\r\n    }\r\n\r\n    deleteDesignation(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-designation/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateDesignation(designation) {\r\n        return axios.put(GLOBAL.HOST + '/update-designation', designation,authHeaders())\r\n    }\r\n\r\n    addDesignation(designation) {\r\n        return axios.post(GLOBAL.HOST + '/add-designation', designation,authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new DesignationService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js",["707"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js",["708"],"import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst images = [\r\n  require('assets/banner/Banner-1.jpg'),\r\n  require('assets/banner/Banner-2.jpg'),\r\n  require('assets/banner/Banner-3.jpg'),\r\n  require('assets/banner/Banner-4.jpg'),\r\n]\r\n\r\n\r\nexport default function ImageSlider(props) {\r\n\r\n  return (\r\n    <Carousel\r\n      animation=\"slide\"\r\n      fullHeightHover={true}\r\n      stopAutoPlayOnHover={false}\r\n      timeout={500}\r\n      navButtonsProps={{\r\n        style: {\r\n          width: 20,\r\n          height: 120,\r\n          backgroundColor: 'cornflowerblue',\r\n          borderRadius: 5\r\n        }\r\n      }}\r\n      NextIcon={<ArrowForwardIosIcon />}\r\n      PrevIcon={<ArrowBackIosIcon style={{ marginLeft: 12 }} />}\r\n    >\r\n      {\r\n        images.map((src, i) => <Image key={i} src={src.default} />)\r\n      }\r\n    </Carousel >\r\n  )\r\n}\r\n\r\nfunction Image(props) {\r\n  return (\r\n    // <Grid container style={{ padding: \"0px 40px\" }}>\r\n    <img width=\"100%\" {...props} />\r\n    // </Grid>\r\n  )\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx",["709","710","711","712"],"import {\r\n  AppBar,\r\n  Drawer,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Sticky, StickyContainer } from \"react-sticky\";\r\nimport { Responsive } from \"tools/responsive/Responsive\";\r\nimport User from \"./User\";\r\n\r\nconst drawerWidth = 600;\r\nconst icon = <InboxIcon />;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      // width: `calc(100% - ${drawerWidth}px)`,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport interface IDrawerLayoutObject {\r\n  label: string;\r\n  urlShort?: string;\r\n  icon: JSX.Element;\r\n  content: JSX.Element;\r\n}\r\n\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value != index} {...other}>\r\n      {value === index && children}\r\n    </div>\r\n  );\r\n}\r\nconst DrawerLayout = ({\r\n  objects,\r\n  defaultTabIndex = 2,\r\n}: {\r\n  objects: Array<IDrawerLayoutObject>;\r\n  defaultTabIndex?: number;\r\n}) => {\r\n  const classes = useStyles();\r\n  const [tabIndex, setTabIndex] = useState(defaultTabIndex);\r\n\r\n  useEffect(() => {\r\n    setTabIndex(defaultTabIndex);\r\n  }, [defaultTabIndex]);\r\n\r\n  function timeout(delay) {\r\n    return new Promise((res) => setTimeout(res, delay));\r\n  }\r\n  function handleTabIndexChange(index) {\r\n    // await timeout(100);\r\n    setTabIndex(index);\r\n  }\r\n\r\n  function DrawerList({ objects }) {\r\n    return (\r\n      <div>\r\n        <List>\r\n          {objects.map((item, index) => (\r\n            <ListItem\r\n              button\r\n              key={item.label}\r\n              onClick={() => handleTabIndexChange(index)}\r\n            >\r\n              {/* <ListItemIcon>{<InboxIcon />}</ListItemIcon> */}\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <User>\r\n      <StickyContainer>\r\n        <Responsive displayIn={[\"Tablet\", \"Laptop\"]}>\r\n          <Grid container direction=\"row\">\r\n            <Grid style={{ width: drawerWidth }} item sm>\r\n              <Sticky>\r\n                {({ style }) => (\r\n                  <Drawer\r\n                    classes={{\r\n                      paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ ...style, marginTop: 24, marginBottom: 24 }}\r\n                    variant=\"permanent\"\r\n                    open\r\n                  >\r\n                    <Tabs\r\n                      orientation=\"vertical\"\r\n                      value={tabIndex}\r\n                      onChange={(event, newValue) => setTabIndex(newValue)}\r\n                      variant=\"scrollable\"\r\n                      scrollButtons=\"auto\"\r\n                    >\r\n                      {objects.map((item, idx) => (\r\n                        <Tab label={item.label} icon={item.icon} key={idx} />\r\n                      ))}\r\n                    </Tabs>\r\n                  </Drawer>\r\n                )}\r\n              </Sticky>\r\n            </Grid>\r\n            <Grid item className={classes.content}>\r\n              {objects.map((item, idx) => (\r\n                <TabPanel value={tabIndex} index={idx} key={idx}>\r\n                  {item.content}\r\n                </TabPanel>\r\n              ))}\r\n              {/* {objects\r\n                .map((item) => ({ content: item.content }))\r\n                .map((item, index) => (\r\n                  <div hidden={tabIndex !== index}>{item.content}</div>\r\n                ))} */}\r\n            </Grid>\r\n          </Grid>\r\n        </Responsive>\r\n        <Responsive displayIn=\"Mobile\">\r\n          <Sticky>\r\n            {({ style }) => (\r\n              <AppBar position=\"static\" color=\"default\" style={style}>\r\n                <Tabs\r\n                  value={tabIndex}\r\n                  onChange={(event, newValue) => setTabIndex(newValue)}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                  {objects.map((item, idx) => (\r\n                    <Tab label={item.label} key={idx} />\r\n                  ))}\r\n                </Tabs>\r\n              </AppBar>\r\n            )}\r\n          </Sticky>\r\n\r\n          {objects.map((item, idx) => (\r\n            <TabPanel\r\n              value={tabIndex}\r\n              index={idx}\r\n              style={{\r\n                padding: 15,\r\n              }}\r\n              key={idx}\r\n            >\r\n              {item.content}\r\n            </TabPanel>\r\n          ))}\r\n        </Responsive>\r\n      </StickyContainer>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default DrawerLayout;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx",["713","714","715","716"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport {\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface ISource {\r\n  date: Date | string;\r\n  teacher: number;\r\n  student: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\n\r\nfunction convertToDay(date: Date) {\r\n  return date.toLocaleString(\"default\", { weekday: \"short\" });\r\n}\r\nfunction convertToDate(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n}\r\nfunction convertToMonth(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n\r\nfunction generateArrayByDay(\r\n  source: ISource[],\r\n  day: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < day; i++) {\r\n    let date = new Date(\r\n      new Date().setDate(new Date().getDate() - (day - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let data = source.filter(\r\n      (item) => (item.date as Date).getTime() == date.getTime()\r\n    );\r\n    console.log(source[0].date, new Date(source[0].date), date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      student: data.length ? data[0].student : 0,\r\n      teacher: data.length ? data[0].teacher : 0,\r\n    });\r\n  }\r\n  console.log(day + \" days\", array);\r\n  return array;\r\n}\r\nfunction generateArrayByMonth(\r\n  source: ISource[],\r\n  month: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < month; i++) {\r\n    let date = new Date(\r\n      new Date().setMonth(new Date().getMonth() - (month - 1 - i))\r\n    );\r\n    console.log(date);\r\n    date.setHours(0, 0, 0, 0);\r\n    let studentCount: number = 0;\r\n    let teacherCount: number = 0;\r\n    let data = source.map((item) => {\r\n      if ((item.date as Date).getMonth() == date.getMonth()) {\r\n        studentCount += item.student;\r\n        teacherCount += item.teacher;\r\n      }\r\n    });\r\n    console.log(date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      student: studentCount,\r\n      teacher: teacherCount,\r\n    });\r\n  }\r\n  console.log(month + \" days\", array);\r\n  return array;\r\n}\r\n\r\nexport function UserRegistrationChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[2]);\r\n  const [dataSource, setDataSource] = useState<ISource[]>([]);\r\n  const [temp, setTemp] = useState<ISource[]>();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-new-user-count\", authHeaders())\r\n      .then((response) => {\r\n        console.log(\"new user count chart\", response.data);\r\n        let array = response.data.map((item) => ({\r\n          student: item.studentCount,\r\n          teacher: item.teacherCount,\r\n          date: new Date(new Date(item.date).setHours(0, 0, 0, 0)),\r\n        }));\r\n        setDataSource(array);\r\n        handleViewTypeChange(array, viewType);\r\n      });\r\n  }, []);\r\n\r\n  function handleViewTypeChange(source, type) {\r\n    setViewType(type);\r\n    switch (type) {\r\n      case viewTypeArray[0]:\r\n        setTemp(generateArrayByDay(source, 7, convertToDay));\r\n        break;\r\n      case viewTypeArray[1]:\r\n        setTemp(generateArrayByDay(source, 30, convertToDate));\r\n        break;\r\n      case viewTypeArray[2]:\r\n        setTemp(generateArrayByMonth(source, 12, convertToMonth));\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Teacher and Student Registration\" dataSource={temp}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"stackedBar\" />\r\n          <Series valueField=\"teacher\" name=\"Teacher\" stack=\"Teacher\" />\r\n          <Series valueField=\"student\" name=\"Student\" stack=\"Student\" />\r\n          <ValueAxis>\r\n            <Title text=\"Count\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container justifyContent=\"center\">\r\n          <Select\r\n            value={viewType}\r\n            onChange={(event) =>\r\n              handleViewTypeChange(dataSource, event.target.value as string)\r\n            }\r\n            variant=\"outlined\"\r\n          >\r\n            {viewTypeArray.map((item) => (\r\n              <MenuItem\r\n                key={item}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734"],"import {\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function CoursePrice({ course, onCourseAttrChange, onSave, onCancel }) {\r\n  const [offerShow, setOfferShow] = useState(false);\r\n  const [offerValue, setOfferValue] = useState(course.off ? course.off : 0);\r\n  const [mainPrice, setMainPrice] = useState(\r\n    course.mainPrice ? course.mainPrice : 0\r\n  );\r\n  useEffect(() => {\r\n    if (course.off) setOfferShow(true);\r\n  }, [course.off]);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container direction=\"column\">\r\n              <TextField\r\n                label=\"Course price\"\r\n                variant=\"outlined\"\r\n                value={mainPrice}\r\n                margin=\"normal\"\r\n                type=\"number\"\r\n                inputProps={{ min: 0 }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">৳</InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(event) => {\r\n                  if (\r\n                    (parseFloat(event.target.value) >= 0 &&\r\n                      event.target.value != \"-\") ||\r\n                    event.target.value == \"\"\r\n                  ) {\r\n                    setMainPrice(event.target.value);\r\n                  }\r\n                }}\r\n                onBlur={(event) =>\r\n                  onCourseAttrChange({ mainPrice: Number(event.target.value) })\r\n                }\r\n                helperText=\"If you want to give this course as free, set price to 0\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={offerShow}\r\n                    onChange={(event) => {\r\n                      if (!offerShow) onCourseAttrChange({ off: 0 });\r\n                      setOfferShow(!offerShow);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Do you want to give offer?\"\r\n              />\r\n              {offerShow && (\r\n                <>\r\n                  <TextField\r\n                    label=\"Set an offer in percentage\"\r\n                    variant=\"outlined\"\r\n                    value={offerValue}\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                      min: 0,\r\n                      max: 100,\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: \"%\",\r\n                    }}\r\n                    onChange={(event) => {\r\n                      if (\r\n                        (parseFloat(event.target.value) >= 0 &&\r\n                          parseFloat(event.target.value) <= 100 &&\r\n                          event.target.value != \"-\") ||\r\n                        event.target.value == \"\"\r\n                      ) {\r\n                        setOfferValue(event.target.value);\r\n                      }\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    label=\"Price will show to student\"\r\n                    contentEditable={false}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    type={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"text\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? \"number\"\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? \"number\"\r\n                        : \"text\"\r\n                    }\r\n                    value={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"FREE\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? mainPrice - (mainPrice * offerValue) / 100\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? mainPrice\r\n                        : \"FREE\"\r\n                    }\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">৳</InputAdornment>\r\n                      ),\r\n                      readOnly: true,\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container direction=\"row\" justifyContent=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onSave}>\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx",["735","736","737","738","739","740","741","742","743","744","745"],"import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Person } from \"../../classes/Person\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   height: \"100vh\",\r\n  // },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1, 0),\r\n    // minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport function SignUp({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  let person: Person;\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n  const [usernameFound, setUsernameFound] = useState(false);\r\n  const [emailFound, setEmailFound] = useState(false);\r\n\r\n  function isValidPassword() {\r\n    return password == againPassword && password != \"\";\r\n  }\r\n\r\n  function checkUsername(username: string) {\r\n    AuthService.existByUsername(username).then((response) => {\r\n      setUsernameFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function checkEmail(email: string) {\r\n    AuthService.existByEmail(email).then((response) => {\r\n      setEmailFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function handleSubmitClicked() {\r\n    checkUsername(username);\r\n    checkEmail(email);\r\n    if (isValidPassword() && !usernameFound && !emailFound) {\r\n      let person: Person = new Person(email, username, password);\r\n      person.accountType = status;\r\n      history.push({\r\n        pathname:\r\n          history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n          \"/profile-details\",\r\n        state: { person: person, registered: false },\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmitClicked}>\r\n              <Grid container spacing={2}>\r\n                <Grid item container>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                    required\r\n                  >\r\n                    <InputLabel>Your Status</InputLabel>\r\n                    <Select\r\n                      label=\"Your Status\"\r\n                      variant=\"outlined\"\r\n                      value={status}\r\n                      onChange={(event) =>\r\n                        setStatus(event.target.value as string)\r\n                      }\r\n                    >\r\n                      <MenuItem key=\"Student\" value={\"Student\"}>\r\n                        Student\r\n                      </MenuItem>\r\n                      <MenuItem key=\"Teacher\" value={\"Teacher\"}>\r\n                        Teacher\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    error={usernameFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    onBlur={(event) => {\r\n                      checkUsername(event.target.value);\r\n                    }}\r\n                    onFocus={(event) => setUsernameFound(false)}\r\n                    onChange={(event) => {\r\n                      checkUsername(event.target.value);\r\n                      setUsername(event.target.value);\r\n                    }}\r\n                    helperText={usernameFound ? \"Username already exist\" : \"\"}\r\n                    pattern=\"letters-digits\"\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={emailFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onBlur={(event) => {\r\n                      checkEmail(event.target.value);\r\n                    }}\r\n                    onFocus={(event) => setEmailFound(false)}\r\n                    onChange={(event) => {\r\n                      checkEmail(event.target.value);\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                    helperText={emailFound ? \"E-mail already exist\" : \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={againPassword != \"\" && password !== againPassword}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"again-password\"\r\n                    label=\"Password (Again)\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setAgainPassword(event.target.value)}\r\n                    helperText={\r\n                      password !== againPassword ? \"Password mismatch\" : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                type=\"submit\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justifyContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                      \"/signin\"\r\n                    }\r\n                  >\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx",["746","747","748"],"import { Grid } from \"@material-ui/core\";\r\nimport { Course, Property } from \"classes/Course\";\r\nimport React from \"react\";\r\nimport { AddAbleTextField } from \"./AddAbleTextField\";\r\n\r\nexport function TargetStudent({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  if (course.outcomes == undefined) {\r\n    course = { ...course, outcomes: [\"\"] };\r\n  }\r\n  if (course.prerequisites == undefined) {\r\n    course = { ...course, prerequisites: [\"\"] };\r\n  }\r\n  if (course.properties == undefined) {\r\n    course = { ...course, properties: [new Property()] };\r\n  }\r\n  console.log(course);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"What will students learn in your course?\"\r\n          objects={course.outcomes}\r\n          onObjectsChange={(outcomes) =>\r\n            onCourseAttrChange({ outcomes: outcomes })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Are there any course requirements or prerequisites?\"\r\n          objects={course.prerequisites}\r\n          onObjectsChange={(prerequisite) =>\r\n            onCourseAttrChange({ prerequisites: prerequisite })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Write down the properties in brief with attractive icons\"\r\n          showIconPicker\r\n          objects={course.properties}\r\n          onObjectsChange={(properties) =>\r\n            onCourseAttrChange({ properties: properties })\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx",["749","750","751"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignIn({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    console.log(username);\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (password == \"\") {\r\n      setMessage(\"password is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    AuthService.signIn(username, password).then((response) => {\r\n      if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpen(true);\r\n        console.log(\"don't match\");\r\n      } else if (response.data.token) {\r\n        console.log(username);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(AuthService.getCurrentUser());\r\n        history.push({ pathname: \"/home\" });\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Snackbar\r\n            open={open}\r\n            onClose={handleSnackbarClose}\r\n            autoHideDuration={2000}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={handleSubmitClick}\r\n            >\r\n              <ControlledTextfield\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n                onBlur={(event) => {\r\n                  setUsername(event.target.value);\r\n                }}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                pattern=\"letters-digits-no-space\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onBlur={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/forgot-password\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx",["752","753","754","755","756","757"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function ForgotPassword({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [dob, setDob] = useState<Date | null>(null);\r\n  const [accept, setAccept] = useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n\r\n  function handleRequestClick(event) {\r\n    event.preventDefault();\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    if (dob == null) {\r\n      setMessage(\"Please set a date of birth\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    AuthService.requestChangePassword(username, dob as Date).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.data.stringValue) {\r\n          setMessage(response.data.stringValue);\r\n          setOpenSnackbar(true);\r\n        } else if (response.data.boolValue == true) {\r\n          setSuccessMessage(\r\n            \"Your request accepted. \\nPlease set a new password\"\r\n          );\r\n          setOpenSuccess(true);\r\n          setAccept(true);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    if (password != againPassword) {\r\n      setMessage(\"Password doesn't match !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    AuthService.changePassword(username, password).then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.token));\r\n        history.push({ pathname: \"/home\" });\r\n      } else if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpenSnackbar(true);\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n    setOpenSuccess(false);\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <Grid item xs={10} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Snackbar\r\n              open={openSnackbar}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n                {message}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={openSuccess}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n                {successMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Password Recovery\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={accept ? handleSubmitClick : handleRequestClick}\r\n            >\r\n              <Grid container>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    disabled={accept}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    pattern=\"letters-digits-no-space\"\r\n                  />\r\n                </Grid>\r\n                {!accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <KeyboardDatePicker\r\n                        // disableToolbar\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        variant=\"dialog\"\r\n                        format=\"dd/MMM/yyyy\"\r\n                        label=\"Date of Birth\"\r\n                        inputVariant=\"outlined\"\r\n                        value={dob}\r\n                        onChange={(date) => {\r\n                          setDob(date as Date);\r\n                        }}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Request to change password\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                {accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password (Again)\"\r\n                        autoComplete=\"email\"\r\n                        error={password != againPassword}\r\n                        onChange={(event) =>\r\n                          setAgainPassword(event.target.value)\r\n                        }\r\n                        helperText={\r\n                          password != againPassword\r\n                            ? \"Password mismatch!!!\"\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Submit and Sign In\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid container direction=\"column\" alignContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signin\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Already have an account? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx",["758"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddCircle, DeleteForever } from \"@material-ui/icons\";\r\nimport { Property } from \"classes/Course\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { IconPicker } from \"react-fa-icon-picker\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nfunction onEnterPressFocusNext(e) {\r\n  if (e.key === \"Enter\") {\r\n    const inputs = Array.from(\r\n      // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n      e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n        \"input\"\r\n      ) ?? []\r\n    ).filter(\r\n      (e) =>\r\n        //@ts-ignore\r\n        !e.disabled\r\n    );\r\n    const current = Array.from(e.currentTarget.querySelectorAll(\"input\") ?? []);\r\n    //@ts-ignore\r\n    const index = inputs.indexOf(current[0]);\r\n    //@ts-ignore\r\n    inputs[index + 1]?.focus();\r\n    e.preventDefault();\r\n  }\r\n}\r\n\r\nexport function AddAbleTextField({\r\n  onObjectsChange = (data) => console.log(data),\r\n  header = \"\",\r\n  showIconPicker = false,\r\n  objects,\r\n  // objects = [{ id: 0, value: \"\", icon: showIconPicker ? \"FaIcons\" : \"\" }],\r\n}) {\r\n  const onKeyPress: React.KeyboardEventHandler<HTMLInputElement> = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        const inputs = Array.from(\r\n          // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n          e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n            \"input\"\r\n          ) ?? []\r\n        ).filter((e) => !e.disabled);\r\n        const current = Array.from(\r\n          e.currentTarget.querySelectorAll(\"input\") ?? []\r\n        );\r\n        const index = inputs.indexOf(current[0]);\r\n        inputs[index + 1]?.focus();\r\n        e.preventDefault();\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const [data, setData] = useState(\r\n    showIconPicker\r\n      ? objects\r\n      : objects.map((value, idx) => ({ id: idx, text: value }))\r\n  );\r\n\r\n  function onDataChange(newData) {\r\n    setData(newData);\r\n    onObjectsChange(\r\n      showIconPicker\r\n        ? newData.map((item, idx) => ({\r\n            id: item.id,\r\n            icon: item.icon,\r\n            text: item.text,\r\n            position: idx,\r\n          }))\r\n        : newData.map((item) => item.text)\r\n    );\r\n  }\r\n  function onTextFieldChange(index, text) {\r\n    let newArray = [...data];\r\n    newArray[index] = { ...data[index], text: text };\r\n    onDataChange(newArray);\r\n  }\r\n  function addTextField() {\r\n    let newArray = [...data];\r\n    newArray.push(showIconPicker ? new Property() : { id: 100, text: \"\" });\r\n    onDataChange(newArray);\r\n  }\r\n  function onDelete(index) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 1);\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  // function upArrowClick(index) {\r\n  //   if (index === 0) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index - 1];\r\n  //   array[index - 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  // function downArrowClick(index) {\r\n  //   if (index === data.length - 1) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index + 1];\r\n  //   array[index + 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  function onIconValueChange(index, iconName) {\r\n    let newArray = [...data];\r\n    newArray[index].icon.content = iconName;\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\", overflow: \"visible\" }}>\r\n      <CardContent>\r\n        <Grid container>\r\n          {header !== \"\" && (\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {header}\r\n            </Typography>\r\n          )}\r\n          <ReactSortable\r\n            list={data}\r\n            setList={onDataChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            {data.map((item, index) => (\r\n              <TextField\r\n                key={index}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) =>\r\n                  onTextFieldChange(index, event.target.value)\r\n                }\r\n                value={item.text}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: showIconPicker && (\r\n                    <IconButton>\r\n                      <IconPicker\r\n                        containerStyles={{\r\n                          right: \"160%\",\r\n                          top: \"-33.33%\",\r\n                          width: \"201px\",\r\n                        }}\r\n                        value={item.icon.content}\r\n                        onChange={(icon) => onIconValueChange(index, icon)}\r\n                      />\r\n                    </IconButton>\r\n                  ),\r\n                  endAdornment: (\r\n                    <>\r\n                      <IconButton onClick={(event) => onDelete(index)}>\r\n                        <DeleteForever />\r\n                      </IconButton>\r\n                    </>\r\n                  ),\r\n                }}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            ))}\r\n          </ReactSortable>\r\n          <Grid item container justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(event) => addTextField()}\r\n              startIcon={<AddCircle />}\r\n            >\r\n              Add More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx",["759","760"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx",["761"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx",["762","763","764","765","766","767","768"],"import {\r\n  FilledTextFieldProps,\r\n  OutlinedTextFieldProps,\r\n  StandardTextFieldProps,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nlet rules = {\r\n  lettersDigits: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$]/),\r\n    helperText: \"Only digits and letters are allowed\",\r\n  },\r\n  lettersDigitsNoSpace: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$ ]/),\r\n    helperText: \"Only digits and letters are allowed. No space allowed.\",\r\n  },\r\n  letters: {\r\n    pattern: new RegExp(/[~!#%^_+\\-=?,./*|\\\":<>[\\]{}`\\\\()';@&$0-9]/),\r\n    helperText: \"Only letters are allowed\",\r\n  },\r\n  lettersDigitsSomeSChars: {\r\n    pattern: new RegExp(/[*|\\\":<>[\\]{}`\\\\()';@&$]/),\r\n    helperText: \"Special characters are not allowed\",\r\n  },\r\n  name: {\r\n    pattern: new RegExp(/[~!#%^_+=?/*|\\\":<>[\\]{}`\\\\();@&$0-9]/),\r\n    helperText: 'Only letters and \".,\\'-\" are allowed',\r\n  },\r\n  // number: {\r\n  //   pattern: new RegExp(/^[0-9]*$/),\r\n  //   helperText: \"Without space, only digits are allowed.\",\r\n  // ,\r\n};\r\ninterface IControlledStandardTextField extends StandardTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\ninterface IControlledFilledTTextField extends FilledTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\ninterface IControlledOutlinedTextField extends OutlinedTextFieldProps {\r\n  pattern?:\r\n    | \"letters-digits\"\r\n    | \"letters-digits-no-space\"\r\n    | \"letters\"\r\n    | \"letters-digits-some-special-char\"\r\n    | \"name\";\r\n}\r\nexport type IControlledTextField =\r\n  | IControlledStandardTextField\r\n  | IControlledFilledTTextField\r\n  | IControlledOutlinedTextField;\r\nexport function ControlledTextfield(props: IControlledTextField) {\r\n  const {\r\n    pattern,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    helperText,\r\n    defaultValue,\r\n    ...rest\r\n  } = props;\r\n  const [value, setValue] = useState(\r\n    defaultValue == undefined ? \"\" : defaultValue\r\n  );\r\n  const [showError, setShowError] = useState(false);\r\n  const [showHelperText, setShowHelperText] = useState(false);\r\n  const [statePattern, setPattern] = useState<RegExp | null>(null);\r\n  const [stateHelperText, setHelperText] = useState<string | undefined>();\r\n\r\n  useEffect(() => {\r\n    switch (pattern) {\r\n      case \"letters-digits\":\r\n        setPattern(rules.lettersDigits.pattern);\r\n        setHelperText(rules.lettersDigits.helperText);\r\n        break;\r\n      case \"letters-digits-no-space\":\r\n        setPattern(rules.lettersDigitsNoSpace.pattern);\r\n        setHelperText(rules.lettersDigitsNoSpace.helperText);\r\n        break;\r\n      case \"letters\":\r\n        setPattern(rules.letters.pattern);\r\n        setHelperText(rules.letters.helperText);\r\n        break;\r\n      case \"letters-digits-some-special-char\":\r\n        setPattern(rules.lettersDigitsSomeSChars.pattern);\r\n        setHelperText(rules.lettersDigitsSomeSChars.helperText);\r\n        break;\r\n      case \"name\":\r\n        setPattern(rules.name.pattern);\r\n        setHelperText(rules.name.helperText);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  function handleOnChange(event) {\r\n    if (statePattern && statePattern.test(event.target.value)) {\r\n      setShowError(true);\r\n    } else {\r\n      setValue(event.target.value);\r\n      setShowError(false);\r\n    }\r\n    if (onChange) onChange(event);\r\n  }\r\n  // useEffect(() => {\r\n  //   if (pattern) {\r\n  //     setPattern(pattern);\r\n  //     setHelperText(helperText);\r\n  //   } else {\r\n  //     if (type == \"text\") {\r\n  //       console.log(rules.text.pattern);\r\n  //       setPattern(rules.text.pattern);\r\n  //       setHelperText(rules.text.helperText);\r\n  //     } else if (type == \"number\") {\r\n  //       setPattern(rules.number.pattern);\r\n  //       setHelperText(rules.number.helperText);\r\n  //     }\r\n  //   }\r\n  //   if (helperText) {\r\n  //     setHelperText(helperText);\r\n  //   }\r\n  //   setErrorMessage(errorMessage);\r\n  // }, []);\r\n\r\n  // function handleOnChange(event) {\r\n  //   if (statePattern) {\r\n  //     if (!statePattern.test(event.target.value)) {\r\n  //       setShowError(true);\r\n  //       if (!errorMessage) {\r\n  //         if (\r\n  //           value.length + 1 != event.target.value.length &&\r\n  //           value.length - 1 != event.target.value.length\r\n  //         ) {\r\n  //           setErrorMessage(\"Text doesn't match the criteria\");\r\n  //         } else {\r\n  //           setErrorMessage(\r\n  //             \"'\" +\r\n  //               event.target.value.charAt(event.target.value.length - 1) +\r\n  //               \"' is not allowed.\"\r\n  //           );\r\n  //         }\r\n  //       }\r\n  //     } else {\r\n  //       setShowError(false);\r\n  //       setValue(event.target.value);\r\n  //       if (onChange) onChange(event);\r\n  //     }\r\n  //   } else {\r\n  //     setValue(event.target.value);\r\n  //     if (onChange) onChange(event);\r\n  //   }\r\n  // }\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      value={value}\r\n      error={props.error ? true : showError}\r\n      onChange={handleOnChange}\r\n      helperText={\r\n        helperText ? helperText : showHelperText ? stateHelperText : \"\"\r\n      }\r\n      onFocus={(event) => {\r\n        setShowHelperText(true);\r\n        if (onFocus) onFocus(event);\r\n      }}\r\n      onBlur={(event) => {\r\n        setShowError(false);\r\n        setShowHelperText(false);\r\n        handleOnChange(event);\r\n        if (onBlur) onBlur(event);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js",["769","770","771","772","773","774","775","776","777"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CourseApprovalService from '../AdminPanel/api/CourseApprovalService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction CourseApproval(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    { title: 'Title', field: 'title', editable: false },\r\n    { title: 'Teacher Username', field: 'teacherId', editable: false },\r\n    { title: 'Publish Date', field: 'publishDate', editable: false }\r\n  ])\r\n\r\n  const [data1, setData1] = useState([])\r\n  const [data2, setData2] = useState([])\r\n\r\n  function getUnapprovedCourses() {\r\n    CourseApprovalService.getUnapprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData1(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n  function getApprovedCourses() {\r\n    CourseApprovalService.getApprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData2(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getApprovedCourses()\r\n    getUnapprovedCourses()\r\n    return () => {\r\n      setData1(null);\r\n      setData2(null);\r\n    }\r\n  }, []);\r\n\r\n  function insertIntoApproveList(data) {\r\n    setData2([data, ...data2]);\r\n  }\r\n  function insertIntoUnapproveList(data) {\r\n    setData1([data, ...data1]);\r\n  }\r\n  function deleteFromApprove(idx) {\r\n    let dataset = [...data2];\r\n    dataset.splice(idx, 1);\r\n    setData2(dataset);\r\n  }\r\n  function deleteFromUnapprove(idx) {\r\n    let dataset = [...data2];\r\n    dataset.splice(idx, 1);\r\n    setData2(dataset);\r\n  }\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container xs spacing={3}>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Unapproved Courses\"\r\n          data={data1}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            },\r\n            {\r\n              icon: \"checkcircle\",\r\n              tooltip: 'approve course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                CourseApprovalService.approveCourse(rowData.id)\r\n                  .then(response => {\r\n                    getApprovedCourses()\r\n                    getUnapprovedCourses()\r\n                    // deleteFromUnapprove(rowData.tableData.id);\r\n                    // insertIntoApproveList(rowData);\r\n                  }\r\n                  )\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Approved Courses\"\r\n          data={data2}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            },\r\n            {\r\n              icon: 'cancel',\r\n              tooltip: 'unapprove course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                CourseApprovalService.unapproveCourse(rowData.id)\r\n                  .then(response => {\r\n                    getApprovedCourses()\r\n                    getUnapprovedCourses()\r\n                  }\r\n                  )\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CourseApproval","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js",["778"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction TeacherInfoComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Username', field: 'username', editable: false },\r\n    { title: 'Course Created', field: 'courseCreated', editable: false },\r\n    { title: 'Course purchased', field: 'coursePurchased', editable: false },\r\n    { title: 'Total Income', field: 'totalIncome', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n\r\n  function getTeacherInfo() {\r\n    InfoService.getTeacherInfo()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => { getTeacherInfo() }, []);\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Teacher Information\"\r\n          data={data}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default TeacherInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js",["779"],"\r\nimport { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction StudentInfoComponent(props) {\r\n    const { useState } = React;\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Username', field: 'username', editable: false },\r\n        { title: 'Course Owned', field: 'courseOwned', editable: false },\r\n        { title: 'Money Spent', field: 'moneySpent', editable: false }\r\n    ])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    function getStudentInfo() {\r\n        InfoService.getStudentInfo()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                //callData(response.data)          \r\n                setData(response.data);\r\n                //setData(response.data)\r\n            }\r\n            )\r\n    }\r\n\r\n    useEffect(() => { getStudentInfo() }, []);\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n            <Grid item container>\r\n                <MaterialTable\r\n                    style={{ width: \"100%\" }}\r\n                    columns={columns}\r\n                    title=\"Student Information\"\r\n                    data={data}\r\n                    options={{\r\n                        actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default StudentInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js",["780"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass CourseApprovalService {\r\n\r\n    getApprovedCourses() {\r\n        return axios.get(GLOBAL.HOST + '/get-approved-courses', authHeaders())\r\n    }\r\n\r\n    getUnapprovedCourses() {\r\n        return axios.get(GLOBAL.HOST + '/get-unapproved-courses', authHeaders())\r\n    }\r\n\r\n    approveCourse(courseId) {\r\n        return axios.post(GLOBAL.HOST + `/approve-course/${courseId}`, {}, authHeaders())\r\n    }\r\n    unapproveCourse(courseId) {\r\n        return axios.post(GLOBAL.HOST + `/unapprove-course/${courseId}`, {}, authHeaders())\r\n    }\r\n\r\n    // deleteCountry(id){\r\n    //     return axios.delete(global.HOST + `/delete-country/${id}`)\r\n    // }\r\n\r\n\r\n    // updateCountry(country) {\r\n    //     return axios.put(global.HOST + '/update-country',country)\r\n    // }\r\n\r\n    // addCountry(country) {\r\n    //     return axios.post(global.HOST + '/add-country',country)\r\n    // }\r\n\r\n}\r\n\r\nexport default new CourseApprovalService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx",["781","782"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js",["783","784","785"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx",["786"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport { Files } from \"classes/Files\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport { ErrorMessage } from \"tools/Tools\";\r\n\r\nexport function ImageUploader({\r\n  imageDestination,\r\n  title,\r\n  onSetClick,\r\n  onDeleteClick,\r\n}) {\r\n  const [upload, setUpload] = useState(false);\r\n  const [files, setFiles] = useState<FileObject[]>([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  console.log(imageDestination);\r\n  useEffect(() => {\r\n    if (!imageDestination) {\r\n      setUpload(true);\r\n    } else {\r\n      setUpload(false);\r\n    }\r\n  }, [imageDestination]);\r\n  return (\r\n    <>\r\n      <ErrorMessage\r\n        open={showErrorMessage}\r\n        message={errorMessage}\r\n        onClose={setShowErrorMessage}\r\n      />\r\n      {upload && (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item>\r\n            <FileUploader\r\n              fileObjects={files}\r\n              type=\"picture\"\r\n              filesLimit={1}\r\n              onChange={(files) => setFiles(files)}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={(event) => {\r\n                  if (files[0]) {\r\n                    let file = new Files(\"PICTURE\", title)\r\n                      .setFile(files[0])\r\n                      .setId(imageDestination?.id);\r\n                    onSetClick(file);\r\n                    setUpload(false);\r\n                  } else {\r\n                    setErrorMessage(\"Please upload a photo!!\");\r\n                    setShowErrorMessage(true);\r\n                  }\r\n                }}\r\n              >\r\n                Set\r\n              </Button>\r\n            </Grid>\r\n            {imageDestination && (\r\n              <Grid item>\r\n                <Button color=\"secondary\" onClick={(event) => setUpload(false)}>\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {!upload && (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          <Grid item container justifyContent=\"center\">\r\n            {console.log(imageDestination)}\r\n            <img\r\n              src={\r\n                imageDestination?.content?.file\r\n                  ? URL.createObjectURL(imageDestination?.content?.file)\r\n                  : imageDestination?.content\r\n              }\r\n              style={{\r\n                width: \"90%\",\r\n                boxShadow: \"rgb(0 0 0 / 12%) 0 1px 6px\",\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item>\r\n              <Button color=\"primary\" onClick={(event) => setUpload(true)}>\r\n                Change\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={(event) => {\r\n                  onDeleteClick(event);\r\n                  setFiles([]);\r\n                  setUpload(true);\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx",["787"],"import { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextEditor({\r\n  value,\r\n  onChange,\r\n  readOnly = false,\r\n}: {\r\n  value?: string;\r\n  onChange?: (value: string) => void;\r\n  readOnly?: boolean;\r\n}) {\r\n  const [content, setContent] = useState(value ? value : \"\");\r\n  const [key, setKey] = useState(100);\r\n  function handleBodyChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n  return (\r\n    <MUIRichTextEditor\r\n      toolbar={!readOnly}\r\n      key={key}\r\n      label=\"Start typing here...\"\r\n      defaultValue={value}\r\n      onChange={handleBodyChange}\r\n      readOnly={readOnly}\r\n      onBlur={() => {\r\n        console.log(content);\r\n        if (onChange) onChange(content);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx",["788","789","790"],"import { Grid } from \"@material-ui/core\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\n\r\nexport default function VideoPlayer({ url }: { url: string }) {\r\n  return (\r\n    <Grid container>\r\n      <ReactPlayer\r\n        style={{ width: \"100%\", height: \"auto\" }}\r\n        url={url}\r\n        controls={true}\r\n        volume={1}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\n// \"Authorization\",\r\n// \"Bearer \" +\r\n//   JSON.parse(localStorage.getItem(\"user\") + \"\")?.token\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx",["791"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass TeacherService {\r\n  getPerson(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/get-person`, authHeaders());\r\n  }\r\n  getCreateCourseByUsername(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-created-courses/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getMiniInfo(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-teacher-mini/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getCreateCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-created-courses`, authHeaders());\r\n  }\r\n  getEnrolledStudentList() {\r\n    return axios.get(GLOBAL.HOST + `/get-student-list-teacher`, authHeaders());\r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-teacher`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n    return axios.get(GLOBAL.HOST + `/get-review-teacher`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-teacher`,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new TeacherService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx",["792"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass StudentService {\r\n  getPurchaseCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-purchased-courses`, authHeaders());\r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-student`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n    return axios.get(GLOBAL.HOST + `/get-review-student`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-student`,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new StudentService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx",["793","794"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Looks, RateReview } from \"@material-ui/icons\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport React from \"react\";\r\nimport { FaChalkboardTeacher, FaDollarSign, FaQq } from \"react-icons/fa\";\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport IncomePerCourseChart from \"../teacher/IncomePerCourseChart\";\r\nimport { OverviewBarChart } from \"../teacher/Overview\";\r\nimport { CoursePopularityPieChart } from \"../teacher/PopularityPieChart\";\r\nimport { RatingLineChart } from \"../teacher/RatingLIneChart\";\r\nimport { EnrolledStudentListView } from \"./EnrolledStudentListView\";\r\nimport { FaqView } from \"./FAQview\";\r\nimport { PurchaseHistoryListView } from \"./PurchaseHistoryLIstView\";\r\nimport { ReviewListView } from \"./ReviewListView\";\r\n\r\nexport function ContentHeader({\r\n  courseId,\r\n  courseTitle,\r\n  courseSubtitle,\r\n  courseImage,\r\n  children,\r\n}) {\r\n  const history = useHistory();\r\n  return (\r\n    <Card style={{ width: \"100%\" }}>\r\n      <CardActionArea onClick={() => history.push(`/course/${courseId}`)}>\r\n        <Grid container direction=\"row\" wrap=\"nowrap\" spacing={2}>\r\n          <Grid item>\r\n            <img src={courseImage} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            spacing={1}\r\n            style={{ paddingRight: 20 }}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{courseTitle}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">{courseSubtitle}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n      </CardActionArea>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface PurchaseHistory {\r\n  image: JSX.Element;\r\n  courseName: string;\r\n  studentImage: JSX.Element;\r\n  studentName: string;\r\n  time: Date;\r\n  amount: number;\r\n}\r\n\r\nconst Overview = {\r\n  label: \"Overview\",\r\n  urlShort: \"overview\",\r\n  icon: <Looks />,\r\n  content: (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <OverviewBarChart />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <RatingLineChart />\r\n      </Grid>\r\n      <Grid item md={6} xs={12}>\r\n        <CoursePopularityPieChart />\r\n      </Grid>\r\n      <Grid item md={6} xs={12}>\r\n        <IncomePerCourseChart />\r\n      </Grid>\r\n    </Grid>\r\n  ),\r\n};\r\nconst PurchaseHistory = {\r\n  label: \"Purchase History\",\r\n  urlShort: \"purchase-history\",\r\n  icon: <FaDollarSign />,\r\n  content: <PurchaseHistoryListView />,\r\n};\r\nconst Review = {\r\n  label: \"Reviews\",\r\n  urlShort: \"review\",\r\n  icon: <RateReview />,\r\n  content: <ReviewListView />,\r\n};\r\nconst FAQ = {\r\n  label: \"FAQ\",\r\n  urlShort: \"faq\",\r\n  icon: <FaQq />,\r\n  content: <FaqView />,\r\n};\r\nconst StudentList = {\r\n  label: \"Enrolled Students\",\r\n  urlShort: \"enrolled-student\",\r\n  icon: <FaChalkboardTeacher />,\r\n  content: <EnrolledStudentListView />,\r\n};\r\nfunction Dashboard() {\r\n  const StudentObject: Array<IDrawerLayoutObject> = [\r\n    Review,\r\n    FAQ,\r\n    PurchaseHistory,\r\n  ];\r\n  const TeacherObject: Array<IDrawerLayoutObject> = [\r\n    Overview,\r\n    PurchaseHistory,\r\n    Review,\r\n    FAQ,\r\n    StudentList,\r\n  ];\r\n  const objects =\r\n    AuthService.getCurrentAccountType() === \"Teacher\"\r\n      ? TeacherObject\r\n      : StudentObject;\r\n  const route = useRouteMatch();\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route\r\n            exact\r\n            path={`${route.path}/${item.urlShort}`}\r\n            key={item.urlShort}\r\n          >\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx",["795"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { StudentList } from \"classes/Person\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function EnrolledStudentListView() {\r\n  const history = useHistory();\r\n  const [studentsWithCourses, setStudentsWithCourses] = useState<StudentList[]>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    TeacherService.getEnrolledStudentList().then((response) => {\r\n      console.log(\"Enrolled Student List\", response.data);\r\n      setStudentsWithCourses(response.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {studentsWithCourses?.map((studentsWithCourse) => (\r\n        <ContentHeader\r\n          key={studentsWithCourse.courseId}\r\n          courseId={studentsWithCourse.courseId}\r\n          courseTitle={studentsWithCourse.courseName}\r\n          courseSubtitle={studentsWithCourse.courseSubtitle}\r\n          courseImage={studentsWithCourse.courseImage}\r\n        >\r\n          <CustomPagination type=\"calculate-by-width\">\r\n            {studentsWithCourse?.studentInfoList?.map((student) => (\r\n              <Card key={student.studentUsername}>\r\n                <CardActionArea\r\n                  onClick={(event) =>\r\n                    history.push(`/profile/${student.studentUsername}`)\r\n                  }\r\n                >\r\n                  <CardMedia>\r\n                    <img src={student.studentImage} />\r\n                  </CardMedia>\r\n                  <CardContent>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"h6\">\r\n                          {student.studentName}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\">\r\n                          {new Date(student.enrolledDate).toLocaleDateString()}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx",["796"],"import { Grid } from \"@material-ui/core\";\r\nimport { FaqList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { FAQBox } from \"components/course/courseView/FAQ\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function FaqView() {\r\n  const [faqWithCourses, setFaqWithCourses] = useState<FaqList[]>([]);\r\n  useEffect(() => {\r\n    handleLoadData();\r\n  }, []);\r\n  function handleLoadData() {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getFAQList().then((response) => {\r\n          console.log(\"faq list\", response.data);\r\n          setFaqWithCourses(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getFAQList().then((response) => {\r\n          console.log(\"faq list\", response.data);\r\n          setFaqWithCourses(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {faqWithCourses?.map((faqWithCourse) => (\r\n        <ContentHeader\r\n          key={faqWithCourse.courseId}\r\n          courseId={faqWithCourse.courseId}\r\n          courseTitle={faqWithCourse.courseTitle}\r\n          courseSubtitle={faqWithCourse.courseSubtitle}\r\n          courseImage={faqWithCourse.courseImage}\r\n        >\r\n          <CustomPagination objectsPerPage={3} divider>\r\n            {faqWithCourse?.faqInfos?.map((faq) => (\r\n              <FAQBox faq={faq} onSubmit={handleLoadData} key={faq.id} />\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx",["797"],"import { ReviewList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { ReviewBox } from \"components/course/courseView/Review\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nexport function ReviewListView() {\r\n  const history = useHistory();\r\n  const [reviewsWithCourses, setReviewsWithCourses] = useState<ReviewList[]>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getReviewList().then((response) => {\r\n          console.log(\"Review List\", response.data);\r\n          setReviewsWithCourses(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getReviewList().then((response) => {\r\n          console.log(\"Review List\", response.data);\r\n          setReviewsWithCourses(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }, []);\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {reviewsWithCourses?.map((reviewsWithCourse) => (\r\n        <ContentHeader\r\n          key={reviewsWithCourse.courseId}\r\n          courseId={reviewsWithCourse.courseId}\r\n          courseTitle={reviewsWithCourse.courseTitle}\r\n          courseSubtitle={reviewsWithCourse.courseSubtitle}\r\n          courseImage={reviewsWithCourse.courseImage}\r\n        >\r\n          <CustomPagination objectsPerPage={3} divider>\r\n            {reviewsWithCourse?.reviewInfos?.map((review) => (\r\n              <ReviewBox review={review} key={review.id} />\r\n            ))}\r\n          </CustomPagination>\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx",["798","799"],"import { Avatar, Grid, IconButton, Link } from \"@material-ui/core\";\r\nimport { PurchaseHistoryList } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport CustomPagination from \"layout/Pagination\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport StudentService from \"../api/StudentService\";\r\nimport TeacherService from \"../api/TeacherService\";\r\nimport { ContentHeader } from \"./Dashboard\";\r\n\r\nfunction PurchaseHistoryTable({ data }) {\r\n  const history = useHistory();\r\n  data = data.map((item) => ({\r\n    person:\r\n      AuthService.getCurrentAccountType() === \"Teacher\"\r\n        ? {\r\n            name: item.studentName,\r\n            image: item.studentImage,\r\n            username: item.studentUsername,\r\n          }\r\n        : {\r\n            name: item.teacherName,\r\n            image: item.teacherImage,\r\n            username: item.teacherUsername,\r\n          },\r\n    time: new Date(item.purchaseTime).toLocaleString(),\r\n    amount: item.purchaseAmount,\r\n  }));\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      title:\r\n        AuthService.getCurrentAccountType() === \"Teacher\"\r\n          ? \"Student\"\r\n          : \"Teacher\",\r\n      field: \"student\",\r\n      render: (rowData) => (\r\n        <Grid container direction=\"row\" spacing={1} alignItems=\"center\">\r\n          <Grid item>\r\n            <IconButton\r\n              onClick={() =>\r\n                history.push(`/profile/${rowData.person.username}`)\r\n              }\r\n            >\r\n              <Avatar src={rowData.person.image} />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link variant=\"h6\" href={`/profile/${rowData.person.username}`}>\r\n              {rowData.person.name}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n  ]);\r\n  return (\r\n    <MaterialTable\r\n      // @ts-ignore\r\n      columns={columns}\r\n      title=\"\"\r\n      data={data}\r\n      options={{ search: false, toolbar: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function PurchaseHistoryListView() {\r\n  const history = useHistory();\r\n  const [purchaseHistories, setPurchaseHistories] = useState<\r\n    PurchaseHistoryList[]\r\n  >([]);\r\n  useEffect(() => {\r\n    switch (AuthService.getCurrentAccountType()) {\r\n      case \"Student\":\r\n        StudentService.getPurchaseHistory().then((response) => {\r\n          console.log(\"Purchase History List\", response.data);\r\n          setPurchaseHistories(response.data);\r\n        });\r\n        break;\r\n      case \"Teacher\":\r\n        TeacherService.getPurchaseHistory().then((response) => {\r\n          console.log(\"Purchase History List\", response.data);\r\n          setPurchaseHistories(response.data);\r\n        });\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CustomPagination objectsPerPage={3}>\r\n      {purchaseHistories?.map((purchaseHistory) => (\r\n        <ContentHeader\r\n          key={purchaseHistory.courseId}\r\n          courseId={purchaseHistory.courseId}\r\n          courseTitle={purchaseHistory.courseTitle}\r\n          courseSubtitle={purchaseHistory.courseSubtitle}\r\n          courseImage={purchaseHistory.courseImage}\r\n        >\r\n          <PurchaseHistoryTable data={purchaseHistory.purchaseHistoryInfos} />\r\n          {/* {AuthService.getCurrentAccountType() === \"Student\" && (\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-around\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item container justifyContent=\"flex-start\">\r\n                <Grid item>\r\n                  <Avatar src={\"\"} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">{}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>{\"Date\"}</Grid>\r\n              <Grid item>{\"Cost\"}</Grid>\r\n            </Grid>\r\n          )} */}\r\n        </ContentHeader>\r\n      ))}\r\n    </CustomPagination>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx",["800","801","802","803"],"import { Grid, CardContent, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport input from \"postcss/lib/input\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\nimport { UserRegistrationChart } from \"./charts/UserRegistrationChart\";\r\n\r\ninterface ShowCard {\r\n  totalVisitor: number;\r\n  newCourse: number;\r\n  totalCourse: number;\r\n  newUser: number;\r\n  totalUser: number;\r\n  todayIncome: number;\r\n  totalIncome: number;\r\n}\r\n\r\nexport function Cards() {\r\n  const [data, setData] = useState<ShowCard>();\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-show-card-admin\", authHeaders())\r\n      .then((response) => {\r\n        setData(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Visitors\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalVisitor}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Today Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NotificationPopUp.tsx",["804","805","806","807","808","809","810"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\SimpleBackdrop.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\api\\SearchService.tsx",["811"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass SearchService {\r\n  getDataForFilter() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-data-for-filter`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getFilteredCourses(object) {\r\n    return axios.post(\r\n      GLOBAL.HOST + `/public/get-filtered-courses`,\r\n      object,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new SearchService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\SliderComponent.tsx",["812"],{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","replacedBy":"816"},{"ruleId":"817","severity":1,"message":"818","line":9,"column":10,"nodeType":"819","messageId":"820","endLine":9,"endColumn":14},{"ruleId":"817","severity":1,"message":"821","line":10,"column":10,"nodeType":"819","messageId":"820","endLine":10,"endColumn":23},{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","replacedBy":"816"},{"ruleId":"822","severity":1,"message":"823","line":74,"column":5,"nodeType":"824","messageId":"825","endLine":74,"endColumn":20},{"ruleId":"817","severity":1,"message":"826","line":23,"column":10,"nodeType":"819","messageId":"820","endLine":23,"endColumn":17},{"ruleId":"817","severity":1,"message":"827","line":23,"column":19,"nodeType":"819","messageId":"820","endLine":23,"endColumn":29},{"ruleId":"817","severity":1,"message":"828","line":37,"column":10,"nodeType":"819","messageId":"820","endLine":37,"endColumn":14},{"ruleId":"817","severity":1,"message":"829","line":37,"column":16,"nodeType":"819","messageId":"820","endLine":37,"endColumn":23},{"ruleId":"817","severity":1,"message":"830","line":50,"column":6,"nodeType":"819","messageId":"820","endLine":50,"endColumn":12},{"ruleId":"831","severity":1,"message":"832","line":134,"column":6,"nodeType":"833","endLine":134,"endColumn":16,"suggestions":"834"},{"ruleId":"835","severity":1,"message":"836","line":143,"column":27,"nodeType":"837","messageId":"825","endLine":143,"endColumn":29},{"ruleId":"835","severity":1,"message":"836","line":178,"column":43,"nodeType":"837","messageId":"825","endLine":178,"endColumn":45},{"ruleId":"835","severity":1,"message":"836","line":179,"column":40,"nodeType":"837","messageId":"825","endLine":179,"endColumn":42},{"ruleId":"838","severity":1,"message":"839","line":333,"column":23,"nodeType":"840","endLine":333,"endColumn":59},{"ruleId":"838","severity":1,"message":"839","line":386,"column":15,"nodeType":"840","endLine":386,"endColumn":51},{"ruleId":"831","severity":1,"message":"841","line":132,"column":6,"nodeType":"833","endLine":132,"endColumn":34,"suggestions":"842"},{"ruleId":"835","severity":1,"message":"843","line":141,"column":42,"nodeType":"837","messageId":"825","endLine":141,"endColumn":44},{"ruleId":"844","severity":1,"message":"845","line":170,"column":21,"nodeType":"846","messageId":"847","endLine":170,"endColumn":23},{"ruleId":"835","severity":1,"message":"843","line":173,"column":32,"nodeType":"837","messageId":"825","endLine":173,"endColumn":34},{"ruleId":"844","severity":1,"message":"845","line":175,"column":21,"nodeType":"846","messageId":"847","endLine":175,"endColumn":23},{"ruleId":"835","severity":1,"message":"843","line":178,"column":32,"nodeType":"837","messageId":"825","endLine":178,"endColumn":34},{"ruleId":"844","severity":1,"message":"845","line":180,"column":21,"nodeType":"846","messageId":"847","endLine":180,"endColumn":23},{"ruleId":"835","severity":1,"message":"843","line":183,"column":32,"nodeType":"837","messageId":"825","endLine":183,"endColumn":34},{"ruleId":"835","severity":1,"message":"836","line":13,"column":45,"nodeType":"837","messageId":"825","endLine":13,"endColumn":47},{"ruleId":"835","severity":1,"message":"836","line":19,"column":52,"nodeType":"837","messageId":"825","endLine":19,"endColumn":54},{"ruleId":"817","severity":1,"message":"848","line":11,"column":7,"nodeType":"819","messageId":"820","endLine":11,"endColumn":14},{"ruleId":"817","severity":1,"message":"849","line":397,"column":7,"nodeType":"819","messageId":"820","endLine":397,"endColumn":12},{"ruleId":"817","severity":1,"message":"850","line":398,"column":9,"nodeType":"819","messageId":"820","endLine":398,"endColumn":16},{"ruleId":"817","severity":1,"message":"828","line":41,"column":7,"nodeType":"819","messageId":"820","endLine":41,"endColumn":11},{"ruleId":"831","severity":1,"message":"851","line":101,"column":6,"nodeType":"833","endLine":101,"endColumn":8,"suggestions":"852"},{"ruleId":"817","severity":1,"message":"853","line":95,"column":10,"nodeType":"819","messageId":"820","endLine":95,"endColumn":15},{"ruleId":"817","severity":1,"message":"854","line":95,"column":17,"nodeType":"819","messageId":"820","endLine":95,"endColumn":25},{"ruleId":"817","severity":1,"message":"855","line":102,"column":9,"nodeType":"819","messageId":"820","endLine":102,"endColumn":14},{"ruleId":"817","severity":1,"message":"856","line":110,"column":10,"nodeType":"819","messageId":"820","endLine":110,"endColumn":19},{"ruleId":"817","severity":1,"message":"857","line":110,"column":21,"nodeType":"819","messageId":"820","endLine":110,"endColumn":33},{"ruleId":"817","severity":1,"message":"858","line":115,"column":10,"nodeType":"819","messageId":"820","endLine":115,"endColumn":28},{"ruleId":"817","severity":1,"message":"859","line":116,"column":10,"nodeType":"819","messageId":"820","endLine":116,"endColumn":24},{"ruleId":"835","severity":1,"message":"843","line":129,"column":52,"nodeType":"837","messageId":"825","endLine":129,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":130,"column":47,"nodeType":"837","messageId":"825","endLine":130,"endColumn":49},{"ruleId":"835","severity":1,"message":"836","line":144,"column":54,"nodeType":"837","messageId":"825","endLine":144,"endColumn":56},{"ruleId":"835","severity":1,"message":"836","line":165,"column":28,"nodeType":"837","messageId":"825","endLine":165,"endColumn":30},{"ruleId":"835","severity":1,"message":"836","line":169,"column":35,"nodeType":"837","messageId":"825","endLine":169,"endColumn":37},{"ruleId":"835","severity":1,"message":"836","line":179,"column":30,"nodeType":"837","messageId":"825","endLine":179,"endColumn":32},{"ruleId":"835","severity":1,"message":"836","line":183,"column":37,"nodeType":"837","messageId":"825","endLine":183,"endColumn":39},{"ruleId":"831","severity":1,"message":"860","line":204,"column":6,"nodeType":"833","endLine":204,"endColumn":8,"suggestions":"861"},{"ruleId":"835","severity":1,"message":"843","line":209,"column":23,"nodeType":"837","messageId":"825","endLine":209,"endColumn":25},{"ruleId":"835","severity":1,"message":"836","line":234,"column":28,"nodeType":"837","messageId":"825","endLine":234,"endColumn":30},{"ruleId":"835","severity":1,"message":"836","line":243,"column":35,"nodeType":"837","messageId":"825","endLine":243,"endColumn":37},{"ruleId":"835","severity":1,"message":"836","line":256,"column":28,"nodeType":"837","messageId":"825","endLine":256,"endColumn":30},{"ruleId":"835","severity":1,"message":"836","line":268,"column":35,"nodeType":"837","messageId":"825","endLine":268,"endColumn":37},{"ruleId":"835","severity":1,"message":"836","line":317,"column":25,"nodeType":"837","messageId":"825","endLine":317,"endColumn":27},{"ruleId":"835","severity":1,"message":"836","line":390,"column":33,"nodeType":"837","messageId":"825","endLine":390,"endColumn":35},{"ruleId":"835","severity":1,"message":"836","line":398,"column":34,"nodeType":"837","messageId":"825","endLine":398,"endColumn":36},{"ruleId":"835","severity":1,"message":"836","line":506,"column":29,"nodeType":"837","messageId":"825","endLine":506,"endColumn":31},{"ruleId":"835","severity":1,"message":"836","line":517,"column":29,"nodeType":"837","messageId":"825","endLine":517,"endColumn":31},{"ruleId":"835","severity":1,"message":"836","line":530,"column":29,"nodeType":"837","messageId":"825","endLine":530,"endColumn":31},{"ruleId":"835","severity":1,"message":"843","line":25,"column":18,"nodeType":"837","messageId":"825","endLine":25,"endColumn":20},{"ruleId":"831","severity":1,"message":"862","line":55,"column":6,"nodeType":"833","endLine":55,"endColumn":8,"suggestions":"863"},{"ruleId":"835","severity":1,"message":"836","line":88,"column":52,"nodeType":"837","messageId":"825","endLine":88,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":119,"column":60,"nodeType":"837","messageId":"825","endLine":119,"endColumn":62},{"ruleId":"835","severity":1,"message":"836","line":137,"column":72,"nodeType":"837","messageId":"825","endLine":137,"endColumn":74},{"ruleId":"835","severity":1,"message":"836","line":174,"column":29,"nodeType":"837","messageId":"825","endLine":174,"endColumn":31},{"ruleId":"835","severity":1,"message":"836","line":181,"column":35,"nodeType":"837","messageId":"825","endLine":181,"endColumn":37},{"ruleId":"864","severity":1,"message":"865","line":4,"column":10,"nodeType":"819","messageId":"820","endLine":4,"endColumn":16},{"ruleId":"864","severity":1,"message":"827","line":10,"column":19,"nodeType":"819","messageId":"820","endLine":10,"endColumn":29},{"ruleId":"864","severity":1,"message":"865","line":4,"column":10,"nodeType":"819","messageId":"820","endLine":4,"endColumn":16},{"ruleId":"864","severity":1,"message":"827","line":10,"column":19,"nodeType":"819","messageId":"820","endLine":10,"endColumn":29},{"ruleId":"813","replacedBy":"866"},{"ruleId":"815","replacedBy":"867"},{"ruleId":"817","severity":1,"message":"868","line":4,"column":3,"nodeType":"819","messageId":"820","endLine":4,"endColumn":14},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"873"},{"ruleId":"817","severity":1,"message":"849","line":14,"column":7,"nodeType":"819","messageId":"820","endLine":14,"endColumn":12},{"ruleId":"817","severity":1,"message":"874","line":20,"column":10,"nodeType":"819","messageId":"820","endLine":20,"endColumn":17},{"ruleId":"817","severity":1,"message":"875","line":20,"column":19,"nodeType":"819","messageId":"820","endLine":20,"endColumn":29},{"ruleId":"835","severity":1,"message":"843","line":35,"column":20,"nodeType":"837","messageId":"825","endLine":35,"endColumn":22},{"ruleId":"835","severity":1,"message":"836","line":49,"column":19,"nodeType":"837","messageId":"825","endLine":49,"endColumn":21},{"ruleId":"835","severity":1,"message":"836","line":59,"column":19,"nodeType":"837","messageId":"825","endLine":59,"endColumn":21},{"ruleId":"835","severity":1,"message":"843","line":72,"column":14,"nodeType":"837","messageId":"825","endLine":72,"endColumn":16},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"876"},{"ruleId":"817","severity":1,"message":"877","line":29,"column":9,"nodeType":"819","messageId":"820","endLine":29,"endColumn":16},{"ruleId":"817","severity":1,"message":"878","line":30,"column":10,"nodeType":"819","messageId":"820","endLine":30,"endColumn":15},{"ruleId":"817","severity":1,"message":"879","line":30,"column":17,"nodeType":"819","messageId":"820","endLine":30,"endColumn":25},{"ruleId":"817","severity":1,"message":"880","line":15,"column":8,"nodeType":"819","messageId":"820","endLine":15,"endColumn":13},{"ruleId":"817","severity":1,"message":"881","line":144,"column":12,"nodeType":"819","messageId":"820","endLine":144,"endColumn":30},{"ruleId":"817","severity":1,"message":"882","line":5,"column":10,"nodeType":"819","messageId":"820","endLine":5,"endColumn":23},{"ruleId":"817","severity":1,"message":"883","line":8,"column":8,"nodeType":"819","messageId":"820","endLine":8,"endColumn":19},{"ruleId":"835","severity":1,"message":"836","line":31,"column":22,"nodeType":"837","messageId":"825","endLine":31,"endColumn":24},{"ruleId":"835","severity":1,"message":"836","line":54,"column":27,"nodeType":"837","messageId":"825","endLine":54,"endColumn":29},{"ruleId":"831","severity":1,"message":"884","line":48,"column":6,"nodeType":"833","endLine":48,"endColumn":15,"suggestions":"885"},{"ruleId":"864","severity":1,"message":"886","line":49,"column":7,"nodeType":"819","messageId":"820","endLine":49,"endColumn":19},{"ruleId":"835","severity":1,"message":"836","line":63,"column":35,"nodeType":"837","messageId":"825","endLine":63,"endColumn":37},{"ruleId":"835","severity":1,"message":"836","line":88,"column":94,"nodeType":"837","messageId":"825","endLine":88,"endColumn":96},{"ruleId":"835","severity":1,"message":"843","line":91,"column":17,"nodeType":"837","messageId":"825","endLine":91,"endColumn":19},{"ruleId":"831","severity":1,"message":"887","line":100,"column":6,"nodeType":"833","endLine":100,"endColumn":8,"suggestions":"888"},{"ruleId":"835","severity":1,"message":"836","line":119,"column":62,"nodeType":"837","messageId":"825","endLine":119,"endColumn":64},{"ruleId":"838","severity":1,"message":"839","line":36,"column":13,"nodeType":"840","endLine":36,"endColumn":75},{"ruleId":"838","severity":1,"message":"839","line":62,"column":23,"nodeType":"840","endLine":62,"endColumn":59},{"ruleId":"835","severity":1,"message":"836","line":128,"column":14,"nodeType":"837","messageId":"825","endLine":128,"endColumn":16},{"ruleId":"838","severity":1,"message":"839","line":300,"column":23,"nodeType":"840","endLine":300,"endColumn":59},{"ruleId":"835","severity":1,"message":"836","line":201,"column":27,"nodeType":"837","messageId":"825","endLine":201,"endColumn":29},{"ruleId":"835","severity":1,"message":"836","line":253,"column":27,"nodeType":"837","messageId":"825","endLine":253,"endColumn":29},{"ruleId":"817","severity":1,"message":"889","line":302,"column":10,"nodeType":"819","messageId":"820","endLine":302,"endColumn":33},{"ruleId":"838","severity":1,"message":"839","line":36,"column":19,"nodeType":"840","endLine":36,"endColumn":54},{"ruleId":"817","severity":1,"message":"874","line":25,"column":10,"nodeType":"819","messageId":"820","endLine":25,"endColumn":17},{"ruleId":"817","severity":1,"message":"875","line":25,"column":19,"nodeType":"819","messageId":"820","endLine":25,"endColumn":29},{"ruleId":"835","severity":1,"message":"836","line":29,"column":15,"nodeType":"837","messageId":"825","endLine":29,"endColumn":17},{"ruleId":"869","severity":1,"message":"890","line":14,"column":3,"nodeType":"871","messageId":"872","endLine":14,"endColumn":29,"fix":"891"},{"ruleId":"817","severity":1,"message":"892","line":24,"column":7,"nodeType":"819","messageId":"820","endLine":24,"endColumn":21},{"ruleId":"831","severity":1,"message":"893","line":55,"column":6,"nodeType":"833","endLine":55,"endColumn":8,"suggestions":"894"},{"ruleId":"835","severity":1,"message":"836","line":71,"column":25,"nodeType":"837","messageId":"825","endLine":71,"endColumn":27},{"ruleId":"835","severity":1,"message":"836","line":39,"column":19,"nodeType":"837","messageId":"825","endLine":39,"endColumn":21},{"ruleId":"835","severity":1,"message":"836","line":39,"column":43,"nodeType":"837","messageId":"825","endLine":39,"endColumn":45},{"ruleId":"835","severity":1,"message":"836","line":39,"column":69,"nodeType":"837","messageId":"825","endLine":39,"endColumn":71},{"ruleId":"835","severity":1,"message":"843","line":44,"column":45,"nodeType":"837","messageId":"825","endLine":44,"endColumn":47},{"ruleId":"817","severity":1,"message":"895","line":3,"column":3,"nodeType":"819","messageId":"820","endLine":3,"endColumn":8},{"ruleId":"817","severity":1,"message":"896","line":17,"column":8,"nodeType":"819","messageId":"820","endLine":17,"endColumn":25},{"ruleId":"835","severity":1,"message":"836","line":87,"column":45,"nodeType":"837","messageId":"825","endLine":87,"endColumn":47},{"ruleId":"835","severity":1,"message":"836","line":100,"column":52,"nodeType":"837","messageId":"825","endLine":100,"endColumn":54},{"ruleId":"831","severity":1,"message":"897","line":246,"column":6,"nodeType":"833","endLine":246,"endColumn":8,"suggestions":"898"},{"ruleId":"838","severity":1,"message":"839","line":253,"column":11,"nodeType":"840","endLine":256,"endColumn":13},{"ruleId":"835","severity":1,"message":"836","line":289,"column":37,"nodeType":"837","messageId":"825","endLine":289,"endColumn":39},{"ruleId":"813","replacedBy":"899"},{"ruleId":"815","replacedBy":"900"},{"ruleId":"835","severity":1,"message":"836","line":29,"column":30,"nodeType":"837","messageId":"825","endLine":29,"endColumn":32},{"ruleId":"835","severity":1,"message":"836","line":29,"column":60,"nodeType":"837","messageId":"825","endLine":29,"endColumn":62},{"ruleId":"817","severity":1,"message":"901","line":55,"column":28,"nodeType":"819","messageId":"820","endLine":55,"endColumn":41},{"ruleId":"831","severity":1,"message":"902","line":66,"column":6,"nodeType":"833","endLine":66,"endColumn":38,"suggestions":"903"},{"ruleId":"835","severity":1,"message":"836","line":80,"column":20,"nodeType":"837","messageId":"825","endLine":80,"endColumn":22},{"ruleId":"835","severity":1,"message":"836","line":80,"column":40,"nodeType":"837","messageId":"825","endLine":80,"endColumn":42},{"ruleId":"835","severity":1,"message":"836","line":97,"column":22,"nodeType":"837","messageId":"825","endLine":97,"endColumn":24},{"ruleId":"835","severity":1,"message":"836","line":122,"column":20,"nodeType":"837","messageId":"825","endLine":122,"endColumn":22},{"ruleId":"835","severity":1,"message":"836","line":224,"column":52,"nodeType":"837","messageId":"825","endLine":224,"endColumn":54},{"ruleId":"835","severity":1,"message":"836","line":237,"column":51,"nodeType":"837","messageId":"825","endLine":237,"endColumn":53},{"ruleId":"835","severity":1,"message":"843","line":302,"column":34,"nodeType":"837","messageId":"825","endLine":302,"endColumn":36},{"ruleId":"904","severity":1,"message":"905","line":14,"column":3,"nodeType":"906","messageId":"907","endLine":16,"endColumn":4},{"ruleId":"908","severity":1,"message":"909","line":50,"column":21,"nodeType":"840","messageId":"910","endLine":55,"endColumn":22,"fix":"911"},{"ruleId":"908","severity":1,"message":"909","line":79,"column":17,"nodeType":"840","messageId":"910","endLine":83,"endColumn":18,"fix":"912"},{"ruleId":"908","severity":1,"message":"909","line":93,"column":17,"nodeType":"840","messageId":"910","endLine":97,"endColumn":18,"fix":"913"},{"ruleId":"908","severity":1,"message":"909","line":107,"column":17,"nodeType":"840","messageId":"910","endLine":111,"endColumn":18,"fix":"914"},{"ruleId":"908","severity":1,"message":"909","line":121,"column":17,"nodeType":"840","messageId":"910","endLine":125,"endColumn":18,"fix":"915"},{"ruleId":"908","severity":1,"message":"909","line":135,"column":17,"nodeType":"840","messageId":"910","endLine":139,"endColumn":18,"fix":"916"},{"ruleId":"908","severity":1,"message":"909","line":149,"column":17,"nodeType":"840","messageId":"910","endLine":153,"endColumn":18,"fix":"917"},{"ruleId":"813","replacedBy":"899"},{"ruleId":"815","replacedBy":"900"},{"ruleId":"817","severity":1,"message":"918","line":131,"column":5,"nodeType":"819","messageId":"820","endLine":131,"endColumn":6},{"ruleId":"835","severity":1,"message":"836","line":158,"column":55,"nodeType":"837","messageId":"825","endLine":158,"endColumn":57},{"ruleId":"835","severity":1,"message":"836","line":170,"column":55,"nodeType":"837","messageId":"825","endLine":170,"endColumn":57},{"ruleId":"835","severity":1,"message":"836","line":17,"column":46,"nodeType":"837","messageId":"825","endLine":17,"endColumn":48},{"ruleId":"831","severity":1,"message":"919","line":21,"column":6,"nodeType":"833","endLine":21,"endColumn":20,"suggestions":"920"},{"ruleId":"817","severity":1,"message":"921","line":8,"column":9,"nodeType":"819","messageId":"820","endLine":8,"endColumn":19},{"ruleId":"817","severity":1,"message":"922","line":9,"column":10,"nodeType":"819","messageId":"820","endLine":9,"endColumn":18},{"ruleId":"817","severity":1,"message":"923","line":10,"column":9,"nodeType":"819","messageId":"820","endLine":10,"endColumn":17},{"ruleId":"817","severity":1,"message":"924","line":12,"column":10,"nodeType":"819","messageId":"820","endLine":12,"endColumn":18},{"ruleId":"817","severity":1,"message":"925","line":13,"column":10,"nodeType":"819","messageId":"820","endLine":13,"endColumn":20},{"ruleId":"817","severity":1,"message":"926","line":13,"column":22,"nodeType":"819","messageId":"820","endLine":13,"endColumn":35},{"ruleId":"817","severity":1,"message":"927","line":15,"column":12,"nodeType":"819","messageId":"820","endLine":15,"endColumn":33},{"ruleId":"817","severity":1,"message":"928","line":1,"column":8,"nodeType":"819","messageId":"820","endLine":1,"endColumn":25},{"ruleId":"817","severity":1,"message":"929","line":6,"column":10,"nodeType":"819","messageId":"820","endLine":6,"endColumn":22},{"ruleId":"817","severity":1,"message":"930","line":186,"column":9,"nodeType":"819","messageId":"820","endLine":186,"endColumn":30},{"ruleId":"817","severity":1,"message":"929","line":3,"column":10,"nodeType":"819","messageId":"820","endLine":3,"endColumn":22},{"ruleId":"817","severity":1,"message":"928","line":4,"column":8,"nodeType":"819","messageId":"820","endLine":4,"endColumn":25},{"ruleId":"864","severity":1,"message":"827","line":10,"column":19,"nodeType":"819","messageId":"820","endLine":10,"endColumn":29},{"ruleId":"864","severity":1,"message":"865","line":4,"column":10,"nodeType":"819","messageId":"820","endLine":4,"endColumn":16},{"ruleId":"864","severity":1,"message":"827","line":10,"column":19,"nodeType":"819","messageId":"820","endLine":10,"endColumn":29},{"ruleId":"835","severity":1,"message":"836","line":52,"column":31,"nodeType":"837","messageId":"825","endLine":52,"endColumn":33},{"ruleId":"835","severity":1,"message":"843","line":148,"column":46,"nodeType":"837","messageId":"825","endLine":148,"endColumn":48},{"ruleId":"835","severity":1,"message":"836","line":152,"column":47,"nodeType":"837","messageId":"825","endLine":152,"endColumn":49},{"ruleId":"931","severity":1,"message":"932","line":229,"column":1,"nodeType":"933","messageId":"934","endLine":270,"endColumn":2},{"ruleId":"835","severity":1,"message":"836","line":67,"column":47,"nodeType":"837","messageId":"825","endLine":67,"endColumn":49},{"ruleId":"817","severity":1,"message":"828","line":102,"column":9,"nodeType":"819","messageId":"820","endLine":102,"endColumn":13},{"ruleId":"844","severity":1,"message":"935","line":102,"column":34,"nodeType":"846","messageId":"936","endLine":102,"endColumn":36},{"ruleId":"835","severity":1,"message":"836","line":103,"column":42,"nodeType":"837","messageId":"825","endLine":103,"endColumn":44},{"ruleId":"831","severity":1,"message":"937","line":140,"column":6,"nodeType":"833","endLine":140,"endColumn":8,"suggestions":"938"},{"ruleId":"838","severity":1,"message":"839","line":256,"column":23,"nodeType":"840","endLine":256,"endColumn":81},{"ruleId":"817","severity":1,"message":"939","line":14,"column":8,"nodeType":"819","messageId":"820","endLine":14,"endColumn":15},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"940"},{"ruleId":"817","severity":1,"message":"941","line":19,"column":11,"nodeType":"819","messageId":"820","endLine":19,"endColumn":18},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"942"},{"ruleId":"864","severity":1,"message":"943","line":2,"column":10,"nodeType":"819","messageId":"820","endLine":2,"endColumn":21},{"ruleId":"838","severity":1,"message":"839","line":43,"column":5,"nodeType":"840","endLine":43,"endColumn":36},{"ruleId":"817","severity":1,"message":"944","line":20,"column":7,"nodeType":"819","messageId":"820","endLine":20,"endColumn":11},{"ruleId":"835","severity":1,"message":"843","line":62,"column":40,"nodeType":"837","messageId":"825","endLine":62,"endColumn":42},{"ruleId":"817","severity":1,"message":"945","line":81,"column":12,"nodeType":"819","messageId":"820","endLine":81,"endColumn":19},{"ruleId":"817","severity":1,"message":"946","line":89,"column":12,"nodeType":"819","messageId":"820","endLine":89,"endColumn":22},{"ruleId":"835","severity":1,"message":"836","line":55,"column":47,"nodeType":"837","messageId":"825","endLine":55,"endColumn":49},{"ruleId":"844","severity":1,"message":"935","line":81,"column":34,"nodeType":"846","messageId":"936","endLine":81,"endColumn":36},{"ruleId":"835","severity":1,"message":"836","line":82,"column":42,"nodeType":"837","messageId":"825","endLine":82,"endColumn":44},{"ruleId":"831","severity":1,"message":"947","line":116,"column":6,"nodeType":"833","endLine":116,"endColumn":8,"suggestions":"948"},{"ruleId":"835","severity":1,"message":"843","line":44,"column":42,"nodeType":"837","messageId":"825","endLine":44,"endColumn":44},{"ruleId":"835","severity":1,"message":"836","line":45,"column":40,"nodeType":"837","messageId":"825","endLine":45,"endColumn":42},{"ruleId":"835","severity":1,"message":"843","line":86,"column":46,"nodeType":"837","messageId":"825","endLine":86,"endColumn":48},{"ruleId":"835","severity":1,"message":"836","line":87,"column":44,"nodeType":"837","messageId":"825","endLine":87,"endColumn":46},{"ruleId":"835","severity":1,"message":"836","line":102,"column":33,"nodeType":"837","messageId":"825","endLine":102,"endColumn":35},{"ruleId":"835","severity":1,"message":"836","line":102,"column":53,"nodeType":"837","messageId":"825","endLine":102,"endColumn":55},{"ruleId":"835","severity":1,"message":"836","line":102,"column":73,"nodeType":"837","messageId":"825","endLine":102,"endColumn":75},{"ruleId":"835","severity":1,"message":"843","line":104,"column":37,"nodeType":"837","messageId":"825","endLine":104,"endColumn":39},{"ruleId":"835","severity":1,"message":"843","line":104,"column":57,"nodeType":"837","messageId":"825","endLine":104,"endColumn":59},{"ruleId":"835","severity":1,"message":"843","line":106,"column":37,"nodeType":"837","messageId":"825","endLine":106,"endColumn":39},{"ruleId":"835","severity":1,"message":"836","line":106,"column":56,"nodeType":"837","messageId":"825","endLine":106,"endColumn":58},{"ruleId":"835","severity":1,"message":"836","line":111,"column":33,"nodeType":"837","messageId":"825","endLine":111,"endColumn":35},{"ruleId":"835","severity":1,"message":"836","line":111,"column":53,"nodeType":"837","messageId":"825","endLine":111,"endColumn":55},{"ruleId":"835","severity":1,"message":"836","line":111,"column":73,"nodeType":"837","messageId":"825","endLine":111,"endColumn":75},{"ruleId":"835","severity":1,"message":"843","line":113,"column":37,"nodeType":"837","messageId":"825","endLine":113,"endColumn":39},{"ruleId":"835","severity":1,"message":"843","line":113,"column":57,"nodeType":"837","messageId":"825","endLine":113,"endColumn":59},{"ruleId":"835","severity":1,"message":"843","line":115,"column":37,"nodeType":"837","messageId":"825","endLine":115,"endColumn":39},{"ruleId":"835","severity":1,"message":"836","line":115,"column":56,"nodeType":"837","messageId":"825","endLine":115,"endColumn":58},{"ruleId":"817","severity":1,"message":"949","line":2,"column":3,"nodeType":"819","messageId":"820","endLine":2,"endColumn":9},{"ruleId":"817","severity":1,"message":"950","line":3,"column":3,"nodeType":"819","messageId":"820","endLine":3,"endColumn":16},{"ruleId":"817","severity":1,"message":"951","line":4,"column":3,"nodeType":"819","messageId":"820","endLine":4,"endColumn":16},{"ruleId":"817","severity":1,"message":"952","line":5,"column":3,"nodeType":"819","messageId":"820","endLine":5,"endColumn":20},{"ruleId":"817","severity":1,"message":"953","line":6,"column":3,"nodeType":"819","messageId":"820","endLine":6,"endColumn":14},{"ruleId":"817","severity":1,"message":"954","line":21,"column":17,"nodeType":"819","messageId":"820","endLine":21,"endColumn":26},{"ruleId":"817","severity":1,"message":"955","line":27,"column":10,"nodeType":"819","messageId":"820","endLine":27,"endColumn":19},{"ruleId":"817","severity":1,"message":"956","line":84,"column":7,"nodeType":"819","messageId":"820","endLine":84,"endColumn":21},{"ruleId":"835","severity":1,"message":"836","line":95,"column":21,"nodeType":"837","messageId":"825","endLine":95,"endColumn":23},{"ruleId":"835","severity":1,"message":"843","line":95,"column":50,"nodeType":"837","messageId":"825","endLine":95,"endColumn":52},{"ruleId":"835","severity":1,"message":"843","line":213,"column":42,"nodeType":"837","messageId":"825","endLine":213,"endColumn":44},{"ruleId":"835","severity":1,"message":"836","line":13,"column":23,"nodeType":"837","messageId":"825","endLine":13,"endColumn":25},{"ruleId":"835","severity":1,"message":"836","line":16,"column":28,"nodeType":"837","messageId":"825","endLine":16,"endColumn":30},{"ruleId":"835","severity":1,"message":"836","line":19,"column":25,"nodeType":"837","messageId":"825","endLine":19,"endColumn":27},{"ruleId":"817","severity":1,"message":"955","line":17,"column":10,"nodeType":"819","messageId":"820","endLine":17,"endColumn":19},{"ruleId":"835","severity":1,"message":"836","line":75,"column":18,"nodeType":"837","messageId":"825","endLine":75,"endColumn":20},{"ruleId":"835","severity":1,"message":"836","line":80,"column":18,"nodeType":"837","messageId":"825","endLine":80,"endColumn":20},{"ruleId":"817","severity":1,"message":"955","line":18,"column":10,"nodeType":"819","messageId":"820","endLine":18,"endColumn":19},{"ruleId":"835","severity":1,"message":"836","line":80,"column":18,"nodeType":"837","messageId":"825","endLine":80,"endColumn":20},{"ruleId":"835","severity":1,"message":"836","line":96,"column":44,"nodeType":"837","messageId":"825","endLine":96,"endColumn":46},{"ruleId":"835","severity":1,"message":"843","line":108,"column":18,"nodeType":"837","messageId":"825","endLine":108,"endColumn":20},{"ruleId":"835","severity":1,"message":"843","line":237,"column":41,"nodeType":"837","messageId":"825","endLine":237,"endColumn":43},{"ruleId":"835","severity":1,"message":"843","line":242,"column":36,"nodeType":"837","messageId":"825","endLine":242,"endColumn":38},{"ruleId":"817","severity":1,"message":"957","line":16,"column":10,"nodeType":"819","messageId":"820","endLine":16,"endColumn":31},{"ruleId":"817","severity":1,"message":"958","line":1,"column":8,"nodeType":"819","messageId":"820","endLine":1,"endColumn":16},{"ruleId":"817","severity":1,"message":"959","line":1,"column":20,"nodeType":"819","messageId":"820","endLine":1,"endColumn":30},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"960"},{"ruleId":"961","severity":1,"message":"962","line":11,"column":43,"nodeType":"963","messageId":"964","endLine":11,"endColumn":44,"suggestions":"965"},{"ruleId":"961","severity":1,"message":"962","line":15,"column":43,"nodeType":"963","messageId":"964","endLine":15,"endColumn":44,"suggestions":"966"},{"ruleId":"961","severity":1,"message":"962","line":19,"column":43,"nodeType":"963","messageId":"964","endLine":19,"endColumn":44,"suggestions":"967"},{"ruleId":"961","severity":1,"message":"962","line":23,"column":29,"nodeType":"963","messageId":"964","endLine":23,"endColumn":30,"suggestions":"968"},{"ruleId":"961","severity":1,"message":"962","line":27,"column":39,"nodeType":"963","messageId":"964","endLine":27,"endColumn":40,"suggestions":"969"},{"ruleId":"835","severity":1,"message":"836","line":74,"column":18,"nodeType":"837","messageId":"825","endLine":74,"endColumn":20},{"ruleId":"831","severity":1,"message":"970","line":104,"column":6,"nodeType":"833","endLine":104,"endColumn":8,"suggestions":"971"},{"ruleId":"864","severity":1,"message":"865","line":4,"column":10,"nodeType":"819","messageId":"820","endLine":4,"endColumn":16},{"ruleId":"864","severity":1,"message":"972","line":5,"column":8,"nodeType":"819","messageId":"820","endLine":5,"endColumn":22},{"ruleId":"864","severity":1,"message":"973","line":6,"column":8,"nodeType":"819","messageId":"820","endLine":6,"endColumn":23},{"ruleId":"864","severity":1,"message":"974","line":7,"column":8,"nodeType":"819","messageId":"820","endLine":7,"endColumn":18},{"ruleId":"864","severity":1,"message":"827","line":14,"column":19,"nodeType":"819","messageId":"820","endLine":14,"endColumn":29},{"ruleId":"864","severity":1,"message":"975","line":54,"column":12,"nodeType":"819","messageId":"820","endLine":54,"endColumn":33},{"ruleId":"864","severity":1,"message":"976","line":57,"column":12,"nodeType":"819","messageId":"820","endLine":57,"endColumn":35},{"ruleId":"864","severity":1,"message":"977","line":60,"column":12,"nodeType":"819","messageId":"820","endLine":60,"endColumn":29},{"ruleId":"864","severity":1,"message":"978","line":65,"column":12,"nodeType":"819","messageId":"820","endLine":65,"endColumn":31},{"ruleId":"864","severity":1,"message":"827","line":10,"column":19,"nodeType":"819","messageId":"820","endLine":10,"endColumn":29},{"ruleId":"864","severity":1,"message":"827","line":11,"column":21,"nodeType":"819","messageId":"820","endLine":11,"endColumn":31},{"ruleId":"869","severity":1,"message":"870","line":3,"column":10,"nodeType":"871","messageId":"872","endLine":3,"endColumn":36,"fix":"979"},{"ruleId":"831","severity":1,"message":"980","line":74,"column":6,"nodeType":"833","endLine":74,"endColumn":25,"suggestions":"981"},{"ruleId":"835","severity":1,"message":"843","line":109,"column":58,"nodeType":"837","messageId":"825","endLine":109,"endColumn":60},{"ruleId":"838","severity":1,"message":"839","line":18,"column":9,"nodeType":"840","endLine":18,"endColumn":173},{"ruleId":"835","severity":1,"message":"836","line":23,"column":36,"nodeType":"837","messageId":"825","endLine":23,"endColumn":38},{"ruleId":"835","severity":1,"message":"843","line":32,"column":24,"nodeType":"837","messageId":"825","endLine":32,"endColumn":26},{"ruleId":"838","severity":1,"message":"839","line":83,"column":13,"nodeType":"840","endLine":93,"endColumn":15},{"ruleId":"817","severity":1,"message":"982","line":13,"column":15,"nodeType":"819","messageId":"820","endLine":13,"endColumn":21},{"ruleId":"817","severity":1,"message":"943","line":2,"column":10,"nodeType":"819","messageId":"820","endLine":2,"endColumn":21},{"ruleId":"817","severity":1,"message":"954","line":3,"column":17,"nodeType":"819","messageId":"820","endLine":3,"endColumn":26},{"ruleId":"817","severity":1,"message":"983","line":3,"column":28,"nodeType":"819","messageId":"820","endLine":3,"endColumn":36},{"ruleId":"869","severity":1,"message":"870","line":2,"column":10,"nodeType":"871","messageId":"872","endLine":2,"endColumn":36,"fix":"984"},{"ruleId":"869","severity":1,"message":"870","line":2,"column":10,"nodeType":"871","messageId":"872","endLine":2,"endColumn":36,"fix":"985"},{"ruleId":"838","severity":1,"message":"839","line":38,"column":13,"nodeType":"840","endLine":38,"endColumn":38},{"ruleId":"986","severity":1,"message":"987","line":92,"column":7,"nodeType":"819","messageId":"988","endLine":92,"endColumn":22},{"ruleId":"838","severity":1,"message":"839","line":46,"column":21,"nodeType":"840","endLine":46,"endColumn":55},{"ruleId":"817","severity":1,"message":"989","line":1,"column":10,"nodeType":"819","messageId":"820","endLine":1,"endColumn":14},{"ruleId":"817","severity":1,"message":"850","line":12,"column":9,"nodeType":"819","messageId":"820","endLine":12,"endColumn":16},{"ruleId":"817","severity":1,"message":"827","line":30,"column":19,"nodeType":"819","messageId":"820","endLine":30,"endColumn":29},{"ruleId":"817","severity":1,"message":"850","line":71,"column":9,"nodeType":"819","messageId":"820","endLine":71,"endColumn":16},{"ruleId":"817","severity":1,"message":"880","line":5,"column":8,"nodeType":"819","messageId":"820","endLine":5,"endColumn":13},{"ruleId":"817","severity":1,"message":"990","line":8,"column":8,"nodeType":"819","messageId":"820","endLine":8,"endColumn":28},{"ruleId":"817","severity":1,"message":"991","line":9,"column":10,"nodeType":"819","messageId":"820","endLine":9,"endColumn":33},{"ruleId":"817","severity":1,"message":"992","line":10,"column":10,"nodeType":"819","messageId":"820","endLine":10,"endColumn":31},{"ruleId":"817","severity":1,"message":"993","line":59,"column":5,"nodeType":"819","messageId":"820","endLine":59,"endColumn":9},{"ruleId":"817","severity":1,"message":"994","line":61,"column":5,"nodeType":"819","messageId":"820","endLine":61,"endColumn":9},{"ruleId":"817","severity":1,"message":"995","line":66,"column":5,"nodeType":"819","messageId":"820","endLine":66,"endColumn":16},{"ruleId":"838","severity":1,"message":"839","line":124,"column":15,"nodeType":"840","endLine":124,"endColumn":34},{"ruleId":"838","severity":1,"message":"839","line":136,"column":15,"nodeType":"840","endLine":136,"endColumn":34},{"ruleId":"838","severity":1,"message":"839","line":194,"column":15,"nodeType":"840","endLine":194,"endColumn":34},{"ruleId":"838","severity":1,"message":"839","line":206,"column":15,"nodeType":"840","endLine":206,"endColumn":34},{"ruleId":"869","severity":1,"message":"870","line":2,"column":10,"nodeType":"871","messageId":"872","endLine":2,"endColumn":36,"fix":"996"},{"ruleId":"838","severity":1,"message":"839","line":63,"column":13,"nodeType":"840","endLine":63,"endColumn":57},"no-native-reassign",["997"],"no-negated-in-lhs",["998"],"@typescript-eslint/no-unused-vars","'Fade' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-dupe-keys","Duplicate key 'MuiDropzoneArea'.","ObjectExpression","unexpected","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'course' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCourseContent'. Either include it or remove the dependency array.","ArrayExpression",["999"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchCourses', 'filteredData', and 'sortType'. Either include them or remove the dependency array.",["1000"],"Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'courses' is assigned a value but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["1001"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'theme' is assigned a value but never used.","'tempFiles' is assigned a value but never used.","'setTempFiles' is assigned a value but never used.","'showSuccessMessage' is assigned a value but never used.","'successMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'person.accountType', 'person.card', 'person.country', 'person.dob', and 'props.location.state'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDob' needs the current value of 'person.dob'.",["1002"],"React Hook useEffect has missing dependencies: 'course', 'courseId', and 'history.location?.state?.duplicate'. Either include them or remove the dependency array. You can also do a functional update 'setCourse(c => ...)' if you only need 'course' in the 'setCourse' call.",["1003"],"no-unused-vars","'Drawer' is defined but never used.",["997"],["998"],"'CardActions' is defined but never used.","no-useless-rename","Import authHeaders unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1004","text":"1005"},"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",{"range":"1006","text":"1005"},"'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'input' is defined but never used.","'handleFilterChange' is defined but never used.","'ReactSortable' is defined but never used.","'AuthService' is defined but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["1007"],"'languageItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'objects'. Either include it or remove the dependency array. If 'setLanguages' needs the current value of 'objects', you can also switch to useReducer instead of useState and read 'objects' in the reducer.",["1008"],"'FAQOutputQuestionDialog' is defined but never used.","Import IFilterType unnecessarily renamed.",{"range":"1009","text":"1010"},"'defaultLecture' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'week.title'. Either include it or remove the dependency array. If 'setFieldValue' needs the current value of 'week.title', you can also switch to useReducer instead of useState and read 'week.title' in the reducer.",["1011"],"'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'popUpNavProperty.admin', 'popUpNavProperty.student', and 'popUpNavProperty.teacher'. Either include them or remove the dependency array.",["1012"],["997"],["998"],"'closeSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editable' and 'lecture?.file?.type'. Either include them or remove the dependency array. If 'setBody' needs the current value of 'lecture.file.type', you can also switch to useReducer instead of useState and read 'lecture.file.type' in the reducer.",["1013"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1014","text":"1015"},{"range":"1016","text":"1015"},{"range":"1017","text":"1015"},{"range":"1018","text":"1015"},{"range":"1019","text":"1015"},{"range":"1020","text":"1015"},{"range":"1021","text":"1015"},"'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'videoFetch'. Either include it or remove the dependency array.",["1022"],"'onFileLoad' is assigned a value but never used.","'pictures' is assigned a value but never used.","'onChange' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'convertToRaw' is defined but never used.","'handleMouseEnterLeave' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'loadCourseName'. Either include it or remove the dependency array.",["1023"],"'Popover' is defined but never used.",{"range":"1024","text":"1005"},"'ISource' is defined but never used.",{"range":"1025","text":"1005"},"'authHeaders' is defined but never used.","'icon' is assigned a value but never used.","'timeout' is defined but never used.","'DrawerList' is defined but never used.","React Hook useEffect has a missing dependency: 'viewType'. Either include it or remove the dependency array.",["1026"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'useEffect' is defined but never used.","'Copyright' is defined but never used.","'person' is defined but never used.","'onEnterPressFocusNext' is defined but never used.","'MuiAlert' is defined but never used.","'AlertProps' is defined but never used.",{"range":"1027","text":"1005"},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["1028","1029"],["1030","1031"],["1032","1033"],["1034","1035"],["1036","1037"],"React Hook useEffect has a missing dependency: 'pattern'. Either include it or remove the dependency array.",["1038"],"'VisibilityIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CancelIcon' is defined but never used.","'insertIntoApproveList' is defined but never used.","'insertIntoUnapproveList' is defined but never used.","'deleteFromApprove' is defined but never used.","'deleteFromUnapprove' is defined but never used.",{"range":"1039","text":"1005"},"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1040"],"'setKey' is assigned a value but never used.","'useState' is defined but never used.",{"range":"1041","text":"1005"},{"range":"1042","text":"1005"},"@typescript-eslint/no-redeclare","'PurchaseHistory' is already defined.","redeclared","'Grid' is defined but never used.","'PopularCategoryChart' is defined but never used.","'PopularCourseAdminChart' is defined but never used.","'UserRegistrationChart' is defined but never used.","'type' is assigned a value but never used.","'time' is assigned a value but never used.","'accountType' is assigned a value but never used.",{"range":"1043","text":"1005"},"no-global-assign","no-unsafe-negation",{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1048","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},[75,101],"authHeaders",[75,101],{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},[312,338],"IFilterType",{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},[1762,1762]," rel=\"noreferrer\"",[2770,2770],[3261,3261],[3751,3751],[4236,4236],[4731,4731],[5230,5230],{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},[75,101],[75,101],{"desc":"1068","fix":"1069"},[79,105],{"messageId":"1070","fix":"1071","desc":"1072"},{"messageId":"1073","fix":"1074","desc":"1075"},{"messageId":"1070","fix":"1076","desc":"1072"},{"messageId":"1073","fix":"1077","desc":"1075"},{"messageId":"1070","fix":"1078","desc":"1072"},{"messageId":"1073","fix":"1079","desc":"1075"},{"messageId":"1070","fix":"1080","desc":"1072"},{"messageId":"1073","fix":"1081","desc":"1075"},{"messageId":"1070","fix":"1082","desc":"1072"},{"messageId":"1073","fix":"1083","desc":"1075"},{"desc":"1084","fix":"1085"},[75,101],{"desc":"1086","fix":"1087"},[37,63],[37,63],[37,63],"Update the dependencies array to be: [courseId, loadCourseContent]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [fetchCourses, filteredData, history.location.state.key, sortType]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [username]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [history, person.accountType, person.card, person.country, person.dob, props.location.state]",{"range":"1094","text":"1095"},"Update the dependencies array to be: [course, courseId, history.location?.state?.duplicate]",{"range":"1096","text":"1097"},"Update the dependencies array to be: [courseId, reviews]",{"range":"1098","text":"1099"},"Update the dependencies array to be: [objects]",{"range":"1100","text":"1101"},"Update the dependencies array to be: [week.title]",{"range":"1102","text":"1103"},"Update the dependencies array to be: [popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",{"range":"1104","text":"1105"},"Update the dependencies array to be: [lecture.title, lecture.preview, lecture?.file?.type, editable]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [file?.content, videoFetch]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [loadCourseName]",{"range":"1110","text":"1111"},"Update the dependencies array to be: [viewType]",{"range":"1112","text":"1113"},"removeEscape",{"range":"1114","text":"1115"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1116","text":"1117"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1118","text":"1115"},{"range":"1119","text":"1117"},{"range":"1120","text":"1115"},{"range":"1121","text":"1117"},{"range":"1122","text":"1115"},{"range":"1123","text":"1117"},{"range":"1124","text":"1115"},{"range":"1125","text":"1117"},"Update the dependencies array to be: [pattern]",{"range":"1126","text":"1127"},"Update the dependencies array to be: [type, fileObjects, state]",{"range":"1128","text":"1129"},[4419,4429],"[courseId, loadCourseContent]",[3025,3053],"[fetchCourses, filteredData, history.location.state.key, sortType]",[3474,3476],"[username]",[6996,6998],"[history, person.accountType, person.card, person.country, person.dob, props.location.state]",[2186,2188],"[course, courseId, history.location?.state?.duplicate]",[1340,1349],"[courseId, reviews]",[2431,2433],"[objects]",[1191,1193],"[week.title]",[6414,6416],"[popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",[1741,1773],"[lecture.title, lecture.preview, lecture?.file?.type, editable]",[886,900],"[file?.content, videoFetch]",[4075,4077],"[loadCourseName]",[3347,3349],"[viewType]",[257,258],"",[257,257],"\\",[414,415],[414,414],[578,579],[578,578],[716,717],[716,716],[852,853],[852,852],[3260,3262],"[pattern]",[1793,1812],"[type, fileObjects, state]"]