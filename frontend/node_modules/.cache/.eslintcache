[{"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js":"1","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js":"2","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx":"3","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js":"4","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx":"5","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx":"6","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx":"7","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx":"8","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx":"9","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx":"10","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx":"11","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx":"12","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx":"13","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js":"14","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js":"15","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js":"16","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx":"17","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx":"18","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx":"19","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx":"20","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js":"21","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js":"22","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx":"23","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx":"24","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js":"25","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx":"26","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx":"27","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx":"28","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx":"29","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx":"30","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx":"31","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx":"32","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js":"33","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx":"34","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx":"35","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx":"36","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx":"37","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx":"38","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx":"39","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx":"40","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js":"41","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx":"42","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js":"43","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx":"44","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx":"45","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx":"46","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx":"47","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx":"48","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx":"49","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx":"50","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js":"51","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx":"52","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx":"53","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx":"54","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx":"55","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx":"56","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx":"57","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx":"58","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx":"59","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx":"60","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx":"61","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx":"62","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx":"63","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js":"64","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js":"65","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js":"66","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js":"67","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx":"68","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx":"69","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx":"70","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js":"71","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx":"72","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx":"73","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js":"74","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js":"75","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js":"76","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx":"77","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx":"78","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx":"79","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx":"80","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx":"81","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx":"82","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx":"83","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx":"84","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx":"85","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx":"86","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx":"87","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx":"88","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js":"89","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js":"90","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js":"91","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js":"92","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js":"93","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx":"94","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx":"95","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx":"96","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js":"97","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx":"98","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx":"99","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx":"100","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx":"101","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx":"102","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx":"103","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx":"104","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx":"105","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx":"106","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx":"107","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx":"108","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx":"109","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NotificationPopUp.tsx":"110","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\SimpleBackdrop.tsx":"111","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\api\\SearchService.tsx":"112","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\SliderComponent.tsx":"113","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\SaveButton.tsx":"114","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ShadowText.tsx":"115","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageVeiw.tsx":"116"},{"size":1296,"mtime":1629086192290,"results":"117","hashOfConfig":"118"},{"size":375,"mtime":1623403118146,"results":"119","hashOfConfig":"118"},{"size":2205,"mtime":1629083999166,"results":"120","hashOfConfig":"118"},{"size":2707,"mtime":1629556193956,"results":"121","hashOfConfig":"118"},{"size":3588,"mtime":1629537515874,"results":"122","hashOfConfig":"118"},{"size":4764,"mtime":1629458653127,"results":"123","hashOfConfig":"118"},{"size":23292,"mtime":1629618874900,"results":"124","hashOfConfig":"118"},{"size":7647,"mtime":1629570122938,"results":"125","hashOfConfig":"118"},{"size":1210,"mtime":1629051509115,"results":"126","hashOfConfig":"118"},{"size":20600,"mtime":1629300070446,"results":"127","hashOfConfig":"118"},{"size":11998,"mtime":1629529690983,"results":"128","hashOfConfig":"118"},{"size":23534,"mtime":1629636029335,"results":"129","hashOfConfig":"118"},{"size":8463,"mtime":1629295338534,"results":"130","hashOfConfig":"118"},{"size":3375,"mtime":1628263362814,"results":"131","hashOfConfig":"118"},{"size":3467,"mtime":1628263362813,"results":"132","hashOfConfig":"118"},{"size":5906,"mtime":1623403109731,"results":"133","hashOfConfig":"118"},{"size":2843,"mtime":1629102274713,"results":"134","hashOfConfig":"118"},{"size":1898,"mtime":1628777390688,"results":"135","hashOfConfig":"118"},{"size":1407,"mtime":1629299434667,"results":"136","hashOfConfig":"118"},{"size":8968,"mtime":1629568105869,"results":"137","hashOfConfig":"118"},{"size":1918,"mtime":1629280179468,"results":"138","hashOfConfig":"118"},{"size":678,"mtime":1629474075946,"results":"139","hashOfConfig":"118"},{"size":703,"mtime":1629278395665,"results":"140","hashOfConfig":"118"},{"size":3296,"mtime":1629570045509,"results":"141","hashOfConfig":"118"},{"size":693,"mtime":1629474005986,"results":"142","hashOfConfig":"118"},{"size":2260,"mtime":1629433208860,"results":"143","hashOfConfig":"118"},{"size":7144,"mtime":1629556398949,"results":"144","hashOfConfig":"118"},{"size":2778,"mtime":1629398165707,"results":"145","hashOfConfig":"118"},{"size":5297,"mtime":1629396591208,"results":"146","hashOfConfig":"118"},{"size":2545,"mtime":1629220389923,"results":"147","hashOfConfig":"118"},{"size":6691,"mtime":1629567454065,"results":"148","hashOfConfig":"118"},{"size":9276,"mtime":1629556193930,"results":"149","hashOfConfig":"118"},{"size":3759,"mtime":1629537008673,"results":"150","hashOfConfig":"118"},{"size":11185,"mtime":1629256857130,"results":"151","hashOfConfig":"118"},{"size":10482,"mtime":1629573839199,"results":"152","hashOfConfig":"118"},{"size":3571,"mtime":1629620254613,"results":"153","hashOfConfig":"118"},{"size":4523,"mtime":1629298332374,"results":"154","hashOfConfig":"118"},{"size":2081,"mtime":1629088337116,"results":"155","hashOfConfig":"118"},{"size":2337,"mtime":1629570012095,"results":"156","hashOfConfig":"118"},{"size":4084,"mtime":1629400023867,"results":"157","hashOfConfig":"118"},{"size":68,"mtime":1628777285516,"results":"158","hashOfConfig":"118"},{"size":6219,"mtime":1629220770540,"results":"159","hashOfConfig":"118"},{"size":1204,"mtime":1629519156786,"results":"160","hashOfConfig":"118"},{"size":1619,"mtime":1628796343912,"results":"161","hashOfConfig":"118"},{"size":12836,"mtime":1629640763779,"results":"162","hashOfConfig":"118"},{"size":2264,"mtime":1626876167123,"results":"163","hashOfConfig":"118"},{"size":4001,"mtime":1629397249320,"results":"164","hashOfConfig":"118"},{"size":616,"mtime":1627731256092,"results":"165","hashOfConfig":"118"},{"size":2054,"mtime":1629085843571,"results":"166","hashOfConfig":"118"},{"size":11190,"mtime":1629262652865,"results":"167","hashOfConfig":"118"},{"size":6552,"mtime":1626876263511,"results":"168","hashOfConfig":"118"},{"size":6331,"mtime":1629396694064,"results":"169","hashOfConfig":"118"},{"size":1038,"mtime":1628746724495,"results":"170","hashOfConfig":"118"},{"size":1421,"mtime":1629258082449,"results":"171","hashOfConfig":"118"},{"size":1382,"mtime":1629555131816,"results":"172","hashOfConfig":"118"},{"size":1099,"mtime":1628747369633,"results":"173","hashOfConfig":"118"},{"size":4721,"mtime":1628593399654,"results":"174","hashOfConfig":"118"},{"size":813,"mtime":1629258042624,"results":"175","hashOfConfig":"118"},{"size":881,"mtime":1628577672587,"results":"176","hashOfConfig":"118"},{"size":751,"mtime":1629221308272,"results":"177","hashOfConfig":"118"},{"size":1107,"mtime":1628710101727,"results":"178","hashOfConfig":"118"},{"size":1174,"mtime":1628742737789,"results":"179","hashOfConfig":"118"},{"size":525,"mtime":1629221279682,"results":"180","hashOfConfig":"118"},{"size":4886,"mtime":1629276154752,"results":"181","hashOfConfig":"118"},{"size":3666,"mtime":1628577666779,"results":"182","hashOfConfig":"118"},{"size":3520,"mtime":1628263362812,"results":"183","hashOfConfig":"118"},{"size":6703,"mtime":1626451200167,"results":"184","hashOfConfig":"118"},{"size":9566,"mtime":1628796382949,"results":"185","hashOfConfig":"118"},{"size":8484,"mtime":1629141224566,"results":"186","hashOfConfig":"118"},{"size":2714,"mtime":1629099781755,"results":"187","hashOfConfig":"118"},{"size":672,"mtime":1629471002539,"results":"188","hashOfConfig":"118"},{"size":2214,"mtime":1629099864072,"results":"189","hashOfConfig":"118"},{"size":1495,"mtime":1628777390645,"results":"190","hashOfConfig":"118"},{"size":720,"mtime":1629473995492,"results":"191","hashOfConfig":"118"},{"size":611,"mtime":1629470992873,"results":"192","hashOfConfig":"118"},{"size":1166,"mtime":1623403117368,"results":"193","hashOfConfig":"118"},{"size":5329,"mtime":1629574168903,"results":"194","hashOfConfig":"118"},{"size":5255,"mtime":1629133006606,"results":"195","hashOfConfig":"118"},{"size":5383,"mtime":1628791594637,"results":"196","hashOfConfig":"118"},{"size":8493,"mtime":1629532505299,"results":"197","hashOfConfig":"118"},{"size":1636,"mtime":1628793437249,"results":"198","hashOfConfig":"118"},{"size":6354,"mtime":1629537515875,"results":"199","hashOfConfig":"118"},{"size":10160,"mtime":1629532683779,"results":"200","hashOfConfig":"118"},{"size":5705,"mtime":1628699594726,"results":"201","hashOfConfig":"118"},{"size":2420,"mtime":1628868452462,"results":"202","hashOfConfig":"118"},{"size":64,"mtime":1628404368032,"results":"203","hashOfConfig":"118"},{"size":1679,"mtime":1629549138026,"results":"204","hashOfConfig":"118"},{"size":4074,"mtime":1629634996948,"results":"205","hashOfConfig":"118"},{"size":4397,"mtime":1629353659556,"results":"206","hashOfConfig":"118"},{"size":2273,"mtime":1629060636163,"results":"207","hashOfConfig":"118"},{"size":2474,"mtime":1629060635976,"results":"208","hashOfConfig":"118"},{"size":1066,"mtime":1629349163419,"results":"209","hashOfConfig":"118"},{"size":747,"mtime":1629307297725,"results":"210","hashOfConfig":"118"},{"size":3098,"mtime":1629458098956,"results":"211","hashOfConfig":"118"},{"size":307,"mtime":1628323877068,"results":"212","hashOfConfig":"118"},{"size":2697,"mtime":1628592157591,"results":"213","hashOfConfig":"118"},{"size":1431,"mtime":1628603372487,"results":"214","hashOfConfig":"118"},{"size":3811,"mtime":1629620677393,"results":"215","hashOfConfig":"118"},{"size":924,"mtime":1629027820139,"results":"216","hashOfConfig":"118"},{"size":565,"mtime":1629554946033,"results":"217","hashOfConfig":"118"},{"size":4247,"mtime":1629297626904,"results":"218","hashOfConfig":"118"},{"size":1340,"mtime":1629520862254,"results":"219","hashOfConfig":"118"},{"size":1094,"mtime":1629528189337,"results":"220","hashOfConfig":"118"},{"size":4318,"mtime":1629571078357,"results":"221","hashOfConfig":"118"},{"size":2516,"mtime":1629566227850,"results":"222","hashOfConfig":"118"},{"size":1908,"mtime":1629566360516,"results":"223","hashOfConfig":"118"},{"size":2003,"mtime":1629566290355,"results":"224","hashOfConfig":"118"},{"size":4742,"mtime":1629572337706,"results":"225","hashOfConfig":"118"},{"size":3539,"mtime":1629102081438,"results":"226","hashOfConfig":"118"},{"size":8665,"mtime":1629640117110,"results":"227","hashOfConfig":"118"},{"size":662,"mtime":1629278932034,"results":"228","hashOfConfig":"118"},{"size":503,"mtime":1629398829049,"results":"229","hashOfConfig":"118"},{"size":2874,"mtime":1629458480801,"results":"230","hashOfConfig":"118"},{"size":2612,"mtime":1629550876123,"results":"231","hashOfConfig":"118"},{"size":656,"mtime":1629553914993,"results":"232","hashOfConfig":"118"},{"size":839,"mtime":1629618956908,"results":"233","hashOfConfig":"118"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"1broz17",{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"242"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"242"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"242"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"242"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"242"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"236"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"236"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"289","usedDeprecatedRules":"236"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"242"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"297","usedDeprecatedRules":"236"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"242"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"242"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"236"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"242"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"332","usedDeprecatedRules":"242"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"242"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"242"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"242"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"242"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"360","usedDeprecatedRules":"361"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"242"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"242"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"242"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"242"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"242"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"236"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"236"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"242"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"242"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"242"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"412","usedDeprecatedRules":"236"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"242"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"420","usedDeprecatedRules":"236"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"236"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"236"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"242"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"242"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"242"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"242"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"242"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"242"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"242"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"456","usedDeprecatedRules":"242"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"236"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"236"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"236"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"470","usedDeprecatedRules":"236"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"242"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"242"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"493","usedDeprecatedRules":"242"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"496","usedDeprecatedRules":"242"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"242"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"516","usedDeprecatedRules":"242"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"242"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\index.js",[],["526","527"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\reportWebVitals.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\App.tsx",["528","529"],"import { CourseView } from \"components/course/courseView/CoursePage\";\r\nimport CreateCourse from \"components/course/createCourse/CreateCoursePage\";\r\nimport { Home } from \"components/Home\";\r\nimport Profile from \"components/person/Profile\";\r\nimport ProfileDetails from \"components/person/ProfileDetails\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport React from \"react\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport AdminDashboard from \"components/AdminPanel/AdminDashboard\";\r\nimport Dashboard from \"components/person/dashboard/Dashboard\";\r\nimport MyCourse from \"components/person/MyCourse\";\r\nimport Search from \"components/search/SearchPage\";\r\nimport Auth from \"layout/Auth\";\r\n\r\n// export const RouteAddress = {\r\n//   home: { route: \"/home\", child: [] },\r\n//   search: { route: \"/search\", child: [] },\r\n//   admin: {\r\n//     route: \"/admin\",\r\n//     child: [\r\n//       { country: { route: \"/country\" }, child: [] },\r\n//       { language: { route: \"/language\" }, child: [] },\r\n//     ],\r\n//   },\r\n//   search: \"/search\",\r\n//   admin: \"/admin\",\r\n// };\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/profile/:username\" component={Profile} />\r\n        <Route path=\"/profile-details\" component={ProfileDetails} />\r\n        <Route path=\"/create-course\" exact component={CreateCourse} />\r\n        <Route path=\"/create-course/:courseId\" component={CreateCourse} />\r\n        <Route path=\"/course/:courseId\" component={CourseView} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/my-course\" component={MyCourse} />\r\n        <Route path=\"/admin\" component={AdminDashboard} />\r\n\r\n        <Route path=\"/file-upload\" component={FileUploader} />\r\n        <Route path=\"/test\" component={Auth} />\r\n        <Redirect from=\"/\" to=\"/test\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["530","531"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Theme.js",["532"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Auth.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\AdminDashboard.tsx",["533","534","535","536"],"import { Grid } from \"@material-ui/core\";\r\nimport { Category, Image, Language, Looks } from \"@material-ui/icons\";\r\nimport { UserRegistrationChart } from \"components/AdminPanel/charts/UserRegistrationChart\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useState } from \"react\";\r\nimport { ImEarth } from \"react-icons/im\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { Cards } from \"./Cards\";\r\nimport MultiSelectTreeView from \"./CategoryComponent\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\nimport CountryComponent from \"./CountryComponent\";\r\nimport CourseApprovalComponent from \"./CourseApprovalComponent\";\r\nimport DesignationComponent from \"./DesignationComponent\";\r\nimport EduStatusComponent from \"./EduStatusComponent\";\r\nimport LanguageComponent from \"./LanguageComponent\";\r\nimport SliderComponent from \"./SliderComponent\";\r\nimport StudentInfoComponent from \"./StudentInfoComponent\";\r\nimport TeacherInfoComponent from \"./TeacherInfoComponent\";\r\n\r\nfunction AdminDashboard() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Course Image\", field: \"image\" },\r\n    { title: \"Course Name\", field: \"courseName\" },\r\n    { title: \"Student Image\", field: \"studentImage\" },\r\n    { title: \"Student Name\", field: \"studentName\" },\r\n    { title: \"Purchase time\", field: \"time\" },\r\n    { title: \"Purchase Amount\", field: \"amount\" },\r\n    // { title: \"Course Image\", field: \"image\", editable: \"never\" },\r\n    // { title: \"Course Name\", field: \"courseName\", editable: \"never\" },\r\n    // { title: \"Student Image\", field: \"studentImage\", editable: \"never\" },\r\n    // { title: \"Student Name\", field: \"studentName\", editable: \"never\" },\r\n    // { title: \"Purchase time\", field: \"time\", editable: \"never\" },\r\n    // { title: \"Purchase Amount\", field: \"amount\", editable: \"never\" },\r\n  ]);\r\n  const [data, setData] = useState([\r\n    {\r\n      image: <Image />,\r\n      courseName: \"Course Name Course Name Course Name Course Name Course Name\",\r\n      studentImage: <Image />,\r\n      studentName: \"StudentName\",\r\n      time: new Date().toDateString(),\r\n      amount: 3000,\r\n    },\r\n  ]);\r\n  const objects: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Overview\",\r\n      urlShort: \"overview\",\r\n      icon: <Looks />,\r\n      content: (\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <Cards />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <UserRegistrationChart />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCourseAdminChart />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <PopularCategoryChart />\r\n          </Grid>\r\n        </Grid>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Homepage Slider\",\r\n      urlShort: \"slider-manager\",\r\n      icon: <Language />,\r\n      content: <SliderComponent />,\r\n    },\r\n    {\r\n      label: \"Student Info\",\r\n      urlShort: \"student-info\",\r\n      icon: <Language />,\r\n      content: <StudentInfoComponent />,\r\n    },\r\n    {\r\n      label: \"Teacher Info\",\r\n      urlShort: \"teacher-info\",\r\n      icon: <Language />,\r\n      content: <TeacherInfoComponent />,\r\n    },\r\n    {\r\n      label: \"Course Approval\",\r\n      urlShort: \"course-approval\",\r\n      icon: <Language />,\r\n      content: <CourseApprovalComponent />,\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      urlShort: \"category\",\r\n      icon: <Category />,\r\n      content: <MultiSelectTreeView />,\r\n    },\r\n    {\r\n      label: \"Country\",\r\n      urlShort: \"country\",\r\n      icon: <ImEarth />,\r\n      content: <CountryComponent />,\r\n    },\r\n    {\r\n      label: \"Language\",\r\n      urlShort: \"language\",\r\n      icon: <Language />,\r\n      content: <LanguageComponent />,\r\n    },\r\n    {\r\n      label: \"Designation\",\r\n      urlShort: \"designation\",\r\n      icon: <Language />,\r\n      content: <DesignationComponent />,\r\n    },\r\n    {\r\n      label: \"Educational Status\",\r\n      urlShort: \"educational-status\",\r\n      icon: <Language />,\r\n      content: <EduStatusComponent />,\r\n    },\r\n  ];\r\n\r\n  const route = useRouteMatch();\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {objects.map((item, idx) => (\r\n          <Route key={idx} exact path={`${route.path}/${item.urlShort}`}>\r\n            <DrawerLayout objects={objects} defaultTabIndex={idx} />\r\n          </Route>\r\n        ))}\r\n        <Route path={`${route.path}/**`}>\r\n          <Redirect to={`${route.path}`} />\r\n        </Route>\r\n        <Route path={`${route.path}`}>\r\n          <DrawerLayout objects={objects} defaultTabIndex={0} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\CoursePage.tsx",["537","538","539","540","541","542"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\SearchPage.tsx",["543","544","545","546","547","548","549","550"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\MyCourse.tsx",["551","552"],"import { MiniCourse } from \"classes/Course\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentService from \"./api/StudentService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nfunction MyCourse() {\r\n  const [courses, setCourses] = useState<MiniCourse>();\r\n  const [title, setTitle] = useState(\"\");\r\n  useEffect(() => {\r\n    if (AuthService.getCurrentAccountType() == \"Student\") {\r\n      StudentService.getPurchaseCourse().then((response) => {\r\n        console.log(\"Purchased course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"Purchased Courses\");\r\n      });\r\n    } else if (AuthService.getCurrentAccountType() == \"Teacher\") {\r\n      TeacherService.getCreateCourse().then((response) => {\r\n        console.log(\"Created course fetched\", response.data);\r\n        setCourses(response.data);\r\n        setTitle(\"My Courses\");\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <User>\r\n      <CoursePagination courses={courses} title={title} />\r\n    </User>\r\n  );\r\n}\r\n\r\nexport default MyCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\Home.tsx",["553","554","555"],"import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport ImageSlider from \"components/ImageCarousel\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { CarouselCourse } from \"./../classes/Course\";\r\nimport CourseService from \"./course/api/CourseService\";\r\nimport { CourseCarousel } from \"./course/CourseCarousel\";\r\n\r\nconst courses = [\r\n  {\r\n    title: \"Free courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Premium courses\",\r\n    courses: [\r\n      {\r\n        title: \"Cyber Security A-Z™: Masterclass Course for Non-Techies\",\r\n        teacherName: \"SecuritaxX Training\",\r\n        description: \"description\",\r\n        price: 15.34,\r\n        off: 10,\r\n        rating: 4.7,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3999038_774b_3.jpg?0O6mWh_G8l9pF1oR_dGMPstU0RmR5gFUMv-vboXFLJolt16D-xtvP4Mt33KoSimt-0DNu7uEBu4A9NXepzIONkw9_uRAXpp2KJyfGhuckXI-uok6cMVFmkoBMAgGQ9cT\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/3982702_080f.jpg?XhzgbicwFbp0aNwJnXU-vv9KTtW_2TNMYJPizj1oaLkASEAujVd9OHVJmsY8aBDibofLoBkpKNsWAiZtYEY8Pqk-dF3UaoPV3vC8jQQX2g3DfKDmKr7NhNTMBWewVg\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1236568_5ada_11.jpg?e_0Sx-UPqDJvyS2H1Q1pkqzWtQxIfolLpKyI-NJXKWubdn9EIQ9FRyuBCOnSmGpL8fhlaq4mEUM0A2HcR3w4jSNYTH3oDouIFqPvxqedilXccrDNZlDgHnIAgZ6PJj8YTw\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1973756_9eda_75.jpg?9T1i30Gg2W6jwGwByAQF_3UT4LRlkjLFSSExrFLHRaJiN1HLQKlCLEHOb5xBFEnts2xNbztVlgKTOU0kw2forcA2mvMSaqp1RsLmBN1MuACyFZrQmSoUhgaPEeYgufmWQQ\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/383250_6c28_10.jpg?JCCHILYNhk_gz28VD0TtBcbUSnaf6FDfTDcTfyCS1oNrAn44_HdndKVJodaBJWyiRdPA-TL--LVhaR5gHN1zUNIGUQbEwz0S_QOK9Taii8zNT2Go4vKFzitVY6CMiAhf\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-b.udemycdn.com/course/240x135/2755896_0718_2.jpg?secure=uqsrFIDRBc0b-6zV3mMT1A%3D%3D%2C1620852240\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-c.udemycdn.com/course/240x135/1496052_f94e_3.jpg?Expires=1620843373&Signature=aeYgd-08tRLBMr8iaCzC~jetXQUM7O~O004Qm1NkPUAzbkhg6VERxOqp7UmdRus8OII8Ohhn24it1gVgWTFvTf7wlaM5HAQS2QyMLhWceNfqzG7pMsOSGzatUp7ahFX~0C8Bq~Gx5FGIlrQir~XfNLFZIvxLztw1H-~s7hH-TeFvb77kbgTVqWxmQVoPCbMb37IYbLEs6ECqVWPHZQKdO~JnpE-jc5DUooKommkyut6tqHgrFpUf5SApMEHv7pjdtOJA7WtR6XDsTm8cqVznJYCltnBrE7Fn3bO9tyryKHTgGodiI07HeUAE6Q3bwY9Z0PWHpv3dBplGu5aP9NuGIQ__&Key-Pair-Id=APKAITJV77WS5ZT7262A\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/281138_ccf8_11.jpg?TprpjJMm8IQos4lS1CQffJPeyOwGOnN9CghuG5hNCt4LWMpR9aAQw9x5Oen1RAjY33HrgEKyRHODVoeoO3adz75AljciuiH3t0sifE98UVyYismSn8GUBLy-aY6Blypp\",\r\n      },\r\n      {\r\n        title:\r\n          \"Machine Learning A-Z™: Hands-On Python & R In Data Science Machine Learning A-Z™: Hands-On Python & R In Data Science\",\r\n        teacherName: \"Md. Mehedi Hasan\",\r\n        description: \"description\",\r\n        price: 150,\r\n        off: 10,\r\n        rating: 2.5,\r\n        numOfRating: 100,\r\n        image:\r\n          \"https://img-a.udemycdn.com/course/240x135/1391482_1971_3.jpg?K524xlWzp_YC_-b670oyuKh3laRy_FmOilbl-FImB3Ps8omHpDejMT-vQsWlYnInYTEei_j9Oa4vtU9K0nyaY7MlloXYdMKbbgLWLpiPJqvlhPd8rSiDSaALcIKn5w_I#\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  homeContainer: {\r\n    padding: theme.spacing(0, 4),\r\n  },\r\n}));\r\n\r\nexport const Home = (props) => {\r\n  const [carouselCourses, setCarouselCourses] = useState<CarouselCourse>(\r\n    new CarouselCourse()\r\n  );\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  let match = useRouteMatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  async function fetchData() {\r\n    await CourseService.getCarouselCourses().then((response) => {\r\n      console.log(response);\r\n      if (response.status === 200) setCarouselCourses(response.data);\r\n    });\r\n    await setLoading(false);\r\n    console.log(\"carousels loaded\");\r\n  }\r\n  return (\r\n    <User loading={loading}>\r\n      <Grid container className={classes.homeContainer} direction=\"column\">\r\n        <Grid item>\r\n          <ImageSlider />\r\n        </Grid>\r\n        <Grid item container direction=\"column\" spacing={2}>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Most Rated\"}\r\n              courses={carouselCourses.mostRated}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Most Reviewed\"}\r\n              courses={carouselCourses.mostReviewed}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"Best Seller\"}\r\n              courses={carouselCourses.bestSeller}\r\n            />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel title={\"Free\"} courses={carouselCourses.free} />\r\n          </Grid>\r\n          <Grid item container>\r\n            <CourseCarousel\r\n              title={\"New Released\"}\r\n              courses={carouselCourses.newReleased}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\Profile.tsx",["556","557","558","559","560"],"import {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { LinkedIn, WorkOutlined } from \"@material-ui/icons\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { MiniCourse } from \"classes/Course\";\r\nimport { Person, Student, Teacher } from \"classes/Person\";\r\nimport CoursePagination from \"components/course/CustomPagination\";\r\nimport User from \"layout/User\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TeacherMiniInfo } from \"./../../classes/Person\";\r\nimport PersonService from \"./api/PersonService\";\r\nimport StudentService from \"./api/StudentService\";\r\nimport TeacherService from \"./api/TeacherService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n  },\r\n  cardHeader: {\r\n    fontSize: \"2.5rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  general: [\r\n    {\r\n      type: \"Name\",\r\n      value: \"Md. Mehedi Hasan\",\r\n    },\r\n    {\r\n      type: \"Institution\",\r\n      value: \"Bangladesh University of Engineering and Technology\",\r\n    },\r\n    {\r\n      type: \"About\",\r\n      value:\r\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam? Lorem ipsum dolor sit amet consectetur, adipisicing elit.Ex reprehenderit aut similique ut nostrum, repellat iusto beatae eum, est sed impedit assumenda molestiae accusamus cum voluptatum ab minima quaerat nam?\",\r\n    },\r\n  ],\r\n  socialMediaData: [\r\n    {\r\n      type: \"Email\",\r\n      link: \"66.mehedi@gmail.com\",\r\n      icon: \"<EmailIcon/>\",\r\n    },\r\n    {\r\n      type: \"Facebook\",\r\n      link: \"66.mehedi\",\r\n      icon: \"FacebookIcon\",\r\n    },\r\n    {\r\n      type: \"YouTube\",\r\n      link: \"66.mehedi\",\r\n      icon: \"YoutubeIcon\",\r\n    },\r\n    {\r\n      type: \"Twitter\",\r\n      link: \"66.mehedi\",\r\n      icon: \"TwitterIcon\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const { username } = useParams();\r\n  const [person, setPerson] = useState<Student | Teacher | Person>();\r\n  const [courses, setCourses] = useState<Array<MiniCourse>>();\r\n  const [miniInfo, setMiniInfo] = useState<TeacherMiniInfo>();\r\n  const [status, setStatus] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [username]);\r\n\r\n  async function loadData() {\r\n    await PersonService.getPersonToShow(username).then(async (response) => {\r\n      console.log(\"Fetched person\", response.data);\r\n      setPerson(response.data);\r\n      switch (response.data.accountType) {\r\n        case \"Teacher\":\r\n          await TeacherService.getCreateCourseByUsername(username).then(\r\n            (response) => {\r\n              console.log(\"Fetched created course list\", response.data);\r\n              setCourses(response.data);\r\n            }\r\n          );\r\n          await TeacherService.getMiniInfo(username).then((response) => {\r\n            console.log(\"Teacher mini info \", response.data);\r\n            setMiniInfo(response.data);\r\n          });\r\n          await TeacherService.getDesignation(username).then((response) => {\r\n            setStatus(response.data.type);\r\n          });\r\n          break;\r\n        case \"Student\":\r\n          await StudentService.getPurchaseCourseByUsername(username).then(\r\n            (response) => {\r\n              setCourses(response.data);\r\n            }\r\n          );\r\n          await StudentService.getEduStatus(username).then((response) => {\r\n            setStatus(response.data.type);\r\n          });\r\n          await StudentService.getStudentMiniInfo(username).then((response) => {\r\n            setMiniInfo(response.data);\r\n          });\r\n          break;\r\n      }\r\n    });\r\n\r\n    setLoading(false);\r\n  }\r\n  function LeftComponent() {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Grid container direction=\"column\" spacing={3}>\r\n            <Grid item container justifyContent=\"center\">\r\n              <Avatar className={classes.avatar} src={person?.photo?.content} />\r\n            </Grid>\r\n            <Grid item container>\r\n              <Details />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  function RightComponent() {\r\n    function InfoCard({\r\n      title,\r\n      value,\r\n      renderTitle,\r\n    }: {\r\n      title?: string;\r\n      value?: string | number;\r\n      renderTitle?: JSX.Element | JSX.Element[];\r\n    }) {\r\n      return (\r\n        <Card>\r\n          <CardHeader title={value} classes={{ title: classes.cardHeader }} />\r\n          <CardContent classes={{ root: classes.cardContent }}>\r\n            {renderTitle ? renderTitle : title}\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n    return (\r\n      <Grid container direction=\"column\" spacing={2}>\r\n        <Grid item container justifyContent=\"space-around\" spacing={2}>\r\n          {person?.accountType === \"Teacher\" ? (\r\n            <>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard title=\"Course\" value={miniInfo?.courseCount} />\r\n              </Grid>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard title=\"Students\" value={miniInfo?.studentCount} />\r\n              </Grid>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard title=\"Review\" value={miniInfo?.reviewCount} />\r\n              </Grid>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard\r\n                  renderTitle={\r\n                    <Rating value={miniInfo?.rating} precision={0.1} readOnly />\r\n                  }\r\n                  value={miniInfo?.ratingCount}\r\n                />\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard\r\n                  title=\"Purchased Course\"\r\n                  value={miniInfo?.courseCount}\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} xs={12}>\r\n                <InfoCard title=\"Reviewed\" value={miniInfo?.reviewCount} />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item container>\r\n          <CoursePagination\r\n            courses={courses}\r\n            title={\r\n              person?.accountType === \"Student\"\r\n                ? \"Purchased Courses\"\r\n                : \"Created Courses\"\r\n            }\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  // const SocialMedia = () => {\r\n  //   return (\r\n  //     <Grid item container direction=\"row\" justifyContent=\"space-around\">\r\n  //       {data.socialMediaData.map((item) => (\r\n  //         <Link href=\"#\">\r\n  //           <IconButton>\r\n  //             <Icon iconName={item.type} />\r\n  //           </IconButton>\r\n  //         </Link>\r\n  //       ))}\r\n  //     </Grid>\r\n  //   );\r\n  // };\r\n\r\n  // function Icon({ iconName }) {\r\n  //   if (iconName === \"Email\") return <EmailIcon />;\r\n  //   else if (iconName === \"Facebook\") return <FacebookIcon />;\r\n  //   else if (iconName === \"Twitter\") return <TwitterIcon />;\r\n  //   else if (iconName === \"YouTube\") return <YouTubeIcon />;\r\n  //   return null;\r\n  // }\r\n  function Details() {\r\n    function CreateItem({\r\n      attribute,\r\n      value = undefined,\r\n      children = undefined,\r\n    }: {\r\n      attribute: string;\r\n      value?: string | number;\r\n      children?: JSX.Element | JSX.Element[];\r\n    }) {\r\n      return (\r\n        <>\r\n          {((value != undefined && value != \"\") || children != undefined) && (\r\n            <Grid item container direction=\"column\" alignItems=\"flex-start\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\">{attribute}</Typography>\r\n              </Grid>\r\n              <Grid item container>\r\n                <Typography variant=\"body1\">{value}</Typography>\r\n                {children}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    function ContactChip({ url, icon, text }) {\r\n      return (\r\n        <Chip\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          clickable\r\n          icon={icon}\r\n          label={text}\r\n          onClick={(event) => window.open(url, \"_blank\")}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Grid item container direction=\"column\" spacing={2}>\r\n        <CreateItem\r\n          attribute=\"Name\"\r\n          value={person?.firstName + \" \" + person?.lastName}\r\n        />\r\n        <CreateItem attribute=\"Country\" value={person?.country?.name} />\r\n        <CreateItem attribute=\"Languages\">\r\n          <Grid container spacing={1}>\r\n            {person?.languages?.map((lang) => (\r\n              <Grid item key={lang.id}>\r\n                <Chip variant=\"outlined\" color=\"primary\" label={lang?.name} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CreateItem>\r\n        <CreateItem attribute=\"Institution\" value={person?.institution} />\r\n        <CreateItem\r\n          attribute={\r\n            person?.accountType === \"Student\"\r\n              ? \"Educational Status\"\r\n              : \"Designation\"\r\n          }\r\n          value={status}\r\n        />\r\n        <CreateItem attribute=\"About\" value={person?.about} />\r\n        <CreateItem attribute=\"Contact\">\r\n          <Grid container direction=\"column\" spacing={1}>\r\n            <Grid item container>\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Send Message\r\n              </Button>\r\n            </Grid>\r\n            {person?.fbURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.fb.com/\" + person?.fbURL}\r\n                  icon={<FacebookIcon />}\r\n                  text={`/${person?.fbURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.youtubeURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.youtube.com/channel/\" + person?.fbURL}\r\n                  icon={<YouTubeIcon />}\r\n                  text={`/${person?.youtubeURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.linkedInURL && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={\"http://www.linkedin.com/\" + person?.fbURL}\r\n                  icon={<LinkedIn />}\r\n                  text={`/${person?.linkedInURL}`}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {person?.website && (\r\n              <Grid item>\r\n                <ContactChip\r\n                  url={person?.website}\r\n                  icon={<WorkOutlined />}\r\n                  text={person?.website}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </CreateItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <User loading={loading}>\r\n      <Grid container>\r\n        <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={2}>\r\n          <Grid item xs={12} sm={4} lg={3}>\r\n            <LeftComponent />\r\n          </Grid>\r\n          <Grid item xs={12} sm={8} lg={9}>\r\n            <RightComponent />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </User>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\ProfileDetails.tsx",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CreateCoursePage.tsx",["588","589","590","591","592","593","594"],"import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Course } from \"classes/Course\";\r\nimport { Files } from \"classes/Files\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\nimport { CoursePrice } from \"components/course/createCourse/CoursePrice\";\r\nimport { Curriculum } from \"components/course/createCourse/Curriculum/Curriculum\";\r\nimport { TargetStudent } from \"components/course/createCourse/TargetStudent\";\r\nimport DrawerLayout, { IDrawerLayoutObject } from \"layout/DrawerLayout\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport CourseService from \"../api/CourseService\";\r\nimport { LandingPage } from \"./Landing\";\r\n\r\nfunction CreateCourse(props) {\r\n  let { courseId } = useParams();\r\n  let history = useHistory();\r\n  const icon = <InboxIcon />;\r\n  const [course, setCourse] = useState(new Course());\r\n  console.log(course);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (courseId != undefined) {\r\n      CourseService.getCourseForUpdate(courseId).then((response) => {\r\n        console.log(\"Course fetched\", response.data);\r\n        if (history.location?.state?.duplicate) {\r\n          removeId(response.data);\r\n          console.log(\"after removing id\", response.data);\r\n        }\r\n        let cover = response.data.cover;\r\n        response.data.cover = new Files(cover.type, cover.title)\r\n          .setId(cover.id)\r\n          .setContent(cover.content);\r\n        response.data.weeks = response.data.weeks.map((week) => {\r\n          week.lectures = week.lectures.map((lecture) => {\r\n            let file: Files = lecture.file;\r\n            file = new Files(file.type, file.title)\r\n              .setId(file.id)\r\n              .setContent(file.content);\r\n            lecture.file = file;\r\n            return lecture;\r\n          });\r\n          return week;\r\n        });\r\n        setCourse(response.data);\r\n      });\r\n    } else {\r\n      setCourse({\r\n        ...course,\r\n        teacherUsername: AuthService.getCurrentUsername(),\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function removeId(course: any) {\r\n    course.id = undefined;\r\n    course.cover.id = undefined;\r\n    course.properties = course.properties.map((item) => ({\r\n      ...item,\r\n      id: undefined,\r\n      icon: { ...item.icon, id: undefined },\r\n    }));\r\n    course.weeks = course.weeks.map((week) => ({\r\n      ...week,\r\n      id: undefined,\r\n      lectures: week.lectures.map((lecture) => ({\r\n        ...lecture,\r\n        id: undefined,\r\n        file: { ...lecture.file, id: undefined },\r\n      })),\r\n    }));\r\n  }\r\n\r\n  function handleOnSave() {\r\n    let error = false;\r\n    if (!course.title) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Title\", { variant: \"warning\" });\r\n    }\r\n    if (!course.subTitle) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Course Subtitle\", { variant: \"warning\" });\r\n    }\r\n    if (\r\n      !course.languages ||\r\n      (course.languages && course.languages.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate at least one language\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.description) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set Description\", { variant: \"warning\" });\r\n    }\r\n    if (!course.mainCategory || !course.subCategory) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate a Category and Sub-Category\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (!course.cover) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please associate an attractive cover photo\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (course.mainPrice < 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set a price or set to 0 for FREE\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    if (\r\n      !course.prerequisites ||\r\n      (course.prerequisites && course.prerequisites.length == 0)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one prerequisite\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.prerequisites &&\r\n      course.prerequisites.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up prerequisite field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (!course.outcomes || (course.outcomes && course.outcomes.length == 0)) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one outcome\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.outcomes &&\r\n      course.outcomes.forEach((element) => {\r\n        if (!element) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up outcome field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (\r\n      !course.properties ||\r\n      (course.properties && course.properties.length < 3)\r\n    ) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least three short properties\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.properties &&\r\n      course.properties.forEach((element) => {\r\n        if (!element.text) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            \"Please set up properties field properly or remove empty field\",\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    if (course.weeks.length == 0) {\r\n      error = true;\r\n      enqueueSnackbar(\"Please set at least one week with lecture\", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n    course.weeks.forEach((element) => {\r\n      if (element.lectures.length == 0) {\r\n        error = true;\r\n        enqueueSnackbar(\r\n          \"Please set up at least one lecture in week: \" + element.weekNo,\r\n          { variant: \"warning\" }\r\n        );\r\n        return;\r\n      }\r\n      element.lectures.forEach((lecture) => {\r\n        if (!lecture.file) {\r\n          error = true;\r\n          enqueueSnackbar(\r\n            `Please set up lecture properly in week: ${element.weekNo} and lecture: ${lecture.lectureNo}`,\r\n            { variant: \"warning\" }\r\n          );\r\n          return;\r\n        }\r\n      });\r\n    });\r\n    if (error) return;\r\n\r\n    if (course.id) {\r\n      CourseService.updateCourse(course).then((response) => {\r\n        if (response.status === 200) {\r\n          enqueueSnackbar(\"Course updated successfully\", {\r\n            variant: \"success\",\r\n          });\r\n          history.push(`/course/${courseId}`);\r\n        }\r\n      });\r\n    } else {\r\n      CourseService.addCourse(course).then((response) => {\r\n        if (response.status === 200) {\r\n          enqueueSnackbar(\"Course uploaded successfully\", {\r\n            variant: \"success\",\r\n          });\r\n          history.push(`/course/${response.data}`);\r\n        }\r\n      });\r\n    }\r\n    //   .then((response) => {\r\n    //   if (response.status == 200) {\r\n    //     enqueueSnackbar(\"Successfully uploaded\", { variant: \"success\" });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  function handleOnCancel() {}\r\n\r\n  function handleCourseAttrChange(attribute) {\r\n    setCourse({ ...course, ...attribute });\r\n    console.log(course);\r\n  }\r\n\r\n  const topics: Array<IDrawerLayoutObject> = [\r\n    {\r\n      label: \"Landing Page\",\r\n      icon: icon,\r\n      content: (\r\n        <LandingPage\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Target Your Student\",\r\n      icon: <InboxIcon />,\r\n      content: (\r\n        <TargetStudent\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set your curriculum\",\r\n      icon: icon,\r\n      content: (\r\n        <Curriculum\r\n          editable={true}\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"Set a price\",\r\n      icon: icon,\r\n      content: (\r\n        <CoursePrice\r\n          course={course}\r\n          onCourseAttrChange={handleCourseAttrChange}\r\n          onSave={handleOnSave}\r\n          onCancel={handleOnCancel}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return <DrawerLayout objects={topics} />;\r\n}\r\n\r\nexport default CreateCourse;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\LanguageComponent.js",["595","596"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages() {\r\n    LanguageService.getAllLanguages()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteLanguage(id) {\r\n\r\n    LanguageService.deleteLanguage(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Language\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                CalladdLanguage(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateLanguage(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteLanguage(oldData.id)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\EduStatusComponent.js",["597","598"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus() }, [])\r\n  }\r\n\r\n  function CallupdateEduStatus(edustatus) {\r\n\r\n    EduStatusService.updateEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus(id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container >\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Educational Status\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdEduStatus(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateEduStatus(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteEdustatus(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Data.js",[],["599","600"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopurlarCourseAdminChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\PopularCategoryChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseCarousel.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CourseBox.tsx",["601","602","603","604"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\Responsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\LanguageService.js",["605"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass LanguageService {\r\n\r\n    getAllLanguages() {\r\n        return axios.get(GLOBAL.HOST + '/get-languages')\r\n    }\r\n\r\n    deleteLanguage(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-language/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateLanguage(language) {\r\n        return axios.put(GLOBAL.HOST + '/update-language', language,authHeaders())\r\n    }\r\n\r\n    addLanguage(language) {\r\n        return axios.post(GLOBAL.HOST + '/add-language', language, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new LanguageService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\User.tsx",["606"],"// components\r\nimport { Header } from \"components/header/Header\";\r\nimport React from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport SimpleBackdrop from \"tools/SimpleBackdrop\";\r\n\r\nexport default function User({\r\n  loading = false,\r\n  children,\r\n}: {\r\n  loading?: boolean;\r\n  children: any;\r\n}) {\r\n  let match = useRouteMatch();\r\n  console.log(\"in user loading\", loading);\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <Header />\r\n          <div style={{ margin: \"0 auto\", maxWidth: \"1400px\", padding: 20 }}>\r\n            {loading ? <SimpleBackdrop /> : children}\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\Pagination.tsx",["607","608","609","610","611","612","613","614"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\EduStatusService.js",["615"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass EduStatusService {\r\n\r\n    getAllEduStatus() {\r\n        return axios.get(GLOBAL.HOST + '/get-edustatus')\r\n    }\r\n\r\n    deleteEduStatus(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-edustatus/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateEduStatus(edustatus) {\r\n        return axios.put(GLOBAL.HOST + '/update-edustatus', edustatus, authHeaders())\r\n    }\r\n\r\n    addEduStatus(edustatus) {\r\n        return axios.post(GLOBAL.HOST + '/add-edustatus', edustatus, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new EduStatusService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Sort.tsx",["616","617","618"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nconst CustomSelect = ({ data, title, open, selected, onClose, onChange }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(selected);\r\n\r\n  function handleChange(event) {\r\n    onChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={onClose} open={open} style={{ padding: 10 }}>\r\n      <DialogTitle style={{ textAlign: \"center\" }}>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl component=\"fieldset\">\r\n          <RadioGroup>\r\n            {data.map((item, index) => (\r\n              <FormControlLabel\r\n                key={index}\r\n                checked={item === selected}\r\n                value={item}\r\n                control={<Radio />}\r\n                label={item}\r\n                onClick={handleChange}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <Button color=\"primary\" onClick={onClose}>\r\n        Cancel\r\n      </Button>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nfunction Sort({ sortTypes, sortType, setSortType }) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleChange = (value) => {\r\n    setSortType(value);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Grid item sm={12} xs={6} container>\r\n      <Grid container justifyContent=\"space-between\" onClick={handleOpen}>\r\n        <Typography variant=\"h6\">Sort by</Typography>\r\n        <SortIcon />\r\n      </Grid>\r\n      <CustomSelect\r\n        title={\"Set sort type\"}\r\n        selected={sortType}\r\n        open={open}\r\n        data={sortTypes}\r\n        onClose={handleClose}\r\n        onChange={handleChange}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\Filter.tsx",["619","620"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\Chips.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Category.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\Curriculum.tsx",["621","622","623"],"import { Button, Grid } from \"@material-ui/core\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { WeekView } from \"./WeekView\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport AuthService from \"components/auth/api/AuthService\";\r\n\r\nexport function Curriculum({ editable, course, onCourseAttrChange }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [weeks, setWeeks] = useState(course.weeks);\r\n\r\n  useEffect(() => {\r\n    // handleOnWeekAdd();\r\n  }, []);\r\n\r\n  function onWeekChange(index, week) {\r\n    let updWeeks = [...weeks];\r\n    updWeeks[index] = week;\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n  function handleOnWeekAdd() {\r\n    let updWeeks = [...weeks, new Week().setWeekNo(weeks.length + 1)];\r\n    setWeeks(updWeeks);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n  }\r\n\r\n  function handleOnWeekRemove(index) {\r\n    if (weeks.length == 1) {\r\n      enqueueSnackbar(\"There must be at least a week\", { variant: \"warning\" });\r\n      return;\r\n    }\r\n    let updWeeks = [...weeks];\r\n    updWeeks.splice(index, 1);\r\n    onCourseAttrChange({ weeks: updWeeks });\r\n    setWeeks([...updWeeks]);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={1}>\r\n      {/*      <ReactSortable\r\n        list={weeks}\r\n        setList={setWeeks}\r\n      > */}\r\n\r\n      {/* <ReactSortable list={weeks} setList={setWeeks} style={{ width: \"100%\" }}> */}\r\n      {weeks.map((item, index) => (\r\n        // <div key={item.id}>\r\n        <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n          <WeekView\r\n            editable={editable}\r\n            week={item}\r\n            onWeekChange={(week) => onWeekChange(index, week)}\r\n            onWeekRemove={() => handleOnWeekRemove(index)}\r\n            weekNo={index + 1}\r\n            // setWeek={(week) => onWeekChange(index, week)}\r\n            // onWeekAdd={() => handleOnWeekAdd(index)}\r\n          />\r\n        </Grid>\r\n      ))}\r\n      {/* </ReactSortable> */}\r\n      {editable && (\r\n        <Grid item container justifyContent=\"center\" style={{ marginTop: 10 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddCircle />}\r\n            onClick={handleOnWeekAdd}\r\n          >\r\n            ADD WEEK\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n      {/* </div> */}\r\n      {/* </ReactSortable> */}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Rating.tsx",["624"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Review.tsx",["625"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\LanguageField.js",["626","627","628","629","630","631"],"import {\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  useTheme\r\n} from \"@material-ui/core\";\r\nimport LanguageService from \"components/AdminPanel/api/LanguageService\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1, 0),\r\n    width: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n// const languageItem = [\r\n//   \"Bangla\", \"English\", \"Hindi\", \"Arabic\", \"Persian\",\r\n// ]\r\n\r\nconst languageItem = [\r\n  { id: 1, name: \"Bengali\", adminId: \"Mehedi\" },\r\n  { id: 2, name: \"English\", adminId: \"Mehedi\" },\r\n  { id: 3, name: \"Hindi\", adminId: \"Mehedi\" },\r\n  { id: 4, name: \"Arabic\", adminId: \"Mehedi\" },\r\n  { id: 5, name: \"Persian\", adminId: \"Mehedi\" },\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nfunction getStyles(id, languages, theme) {\r\n  return {\r\n    fontWeight:\r\n      languages.some(item => item == id)\r\n        ? theme.typography.fontWeightMedium\r\n        :\r\n        theme.typography.fontWeightRegular,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport function LanguageField({\r\n  objects,\r\n  onObjectsChange = (languages) => console.log(languages),\r\n}) {\r\n  const [languageItem, setLanguageItem] = useState([]);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [languages, setLanguages] = useState([]);\r\n  const onLanguagesChange = (event) => {\r\n    setLanguages(event.target.value);\r\n    onObjectsChange(event.target.value.map(item => languageItem.find(langItem => langItem.id == item)));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let abort = new AbortController();\r\n    loadLanguages();\r\n    return () => abort.abort();\r\n  }, [])\r\n\r\n  async function loadLanguages() {\r\n    await LanguageService.getAllLanguages().then(async response => {\r\n      await setLanguageItem(response.data);\r\n    });\r\n    if (objects != undefined)\r\n      await setLanguages(objects.map(item => item.id));\r\n  }\r\n  // if (objects == undefined) return null;\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-multiple-chip-label\">Language</InputLabel>\r\n      <Select\r\n        label=\"Language\"\r\n        labelId=\"demo-multiple-chip-label\"\r\n        id=\"demo-multiple-chip\"\r\n        multiple\r\n        value={languages}\r\n        onChange={onLanguagesChange}\r\n        // input={<Input />}\r\n        renderValue={(selected) => (\r\n          <div className={classes.chips}>\r\n            {\r\n              selected.map((id) => (\r\n                <Chip\r\n                  key={id}\r\n                  label={languageItem.filter(item => item.id == id)[0]?.name}\r\n                  className={classes.chip}\r\n                />\r\n              )\r\n              )\r\n            }\r\n          </div>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {languageItem.map((item) => {\r\n          // @ts-ignore\r\n          return (\r\n            <MenuItem\r\n              key={item.id}\r\n              value={item.id}\r\n              style={getStyles(item.id, languages, theme)}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\Checkout.tsx",["632","633","634","635"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Course } from \"classes/Course\";\r\nimport { CreditCard } from \"classes/Person\";\r\nimport PersonService from \"components/person/api/PersonService\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SlidingUpTransition } from \"tools/Tools\";\r\n\r\nexport function CongratulationDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n}) {\r\n  return (\r\n    <Dialog open={open} keepMounted onClose={onClose}>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <img src={require(\"assets/img/congratulation.jpg\").default} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h4\">You successfully purchased</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course?.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice &&\r\n                          course.off &&\r\n                          course.mainPrice -\r\n                            (course.mainPrice * course.off) / 100}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function CheckoutDialog({\r\n  open,\r\n  course,\r\n  onClose,\r\n  onPurchase,\r\n}: {\r\n  open: boolean;\r\n  course: Course;\r\n  onClose: () => void;\r\n  onPurchase: () => void;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [creditCard, setCreditCard] = useState<CreditCard | undefined>();\r\n  useEffect(() => {\r\n    PersonService.getCreditCardDetails().then((response) => {\r\n      console.log(\"Credit card fetched\", response.data);\r\n      setCreditCard(response.data);\r\n    });\r\n    return () => {\r\n      setCreditCard(undefined);\r\n    };\r\n  }, []);\r\n  let offeredPrice =\r\n    course?.mainPrice - (course?.mainPrice * course?.off) / 100;\r\n  let expDate = new Date(creditCard?.expireDate + \"\");\r\n\r\n  if (course == undefined) return <></>;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={SlidingUpTransition}\r\n      keepMounted\r\n      onClose={onClose}\r\n    >\r\n      <DialogTitle>Checkout</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item container direction=\"row\" wrap=\"nowrap\" xs spacing={4}>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Card details</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Name on card\"\r\n                  value={creditCard?.nameOnCard ? creditCard.nameOnCard : \"\"}\r\n                  onChange={(event) =>\r\n                    setCreditCard({\r\n                      ...creditCard,\r\n                      nameOnCard: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={creditCard?.cardNo ? creditCard.cardNo : \"\"}\r\n                  label=\"Card number\"\r\n                  onChange={(event) =>\r\n                    setCreditCard({ ...creditCard, cardNo: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <KeyboardDatePicker\r\n                  // disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MMM/yyyy\"\r\n                  label=\"Expire Date\"\r\n                  inputVariant=\"outlined\"\r\n                  value={creditCard?.expireDate}\r\n                  onChange={(date) => {\r\n                    setCreditCard({ ...creditCard, expireDate: date as Date });\r\n                  }}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" xs spacing={1}>\r\n              <Grid item>\r\n                <Typography variant=\"h5\">Summary</Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Original price</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">{course?.mainPrice}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">Discount</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\">\r\n                    {course.mainPrice &&\r\n                      course.off &&\r\n                      (course?.mainPrice * course?.off) / 100}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                wrap=\"nowrap\"\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">Total</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h6\">\r\n                    {course.mainPrice && course.off && offeredPrice}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    let error = false;\r\n                    if (!creditCard?.cardNo) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide a credit card no\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.nameOnCard) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide name on card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    }\r\n                    if (!creditCard?.expireDate) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Please provide expire date of card\", {\r\n                        variant: \"warning\",\r\n                      });\r\n                    } else if (expDate.getTime() < new Date().getTime()) {\r\n                      error = true;\r\n                      enqueueSnackbar(\"Your credit card is expired\", {\r\n                        variant: \"error\",\r\n                      });\r\n                    }\r\n                    if (error) return;\r\n                    onPurchase();\r\n                  }}\r\n                >\r\n                  Complete payment\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card>\r\n              <CardHeader>\r\n                <Typography variant=\"h5\">Order details</Typography>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  wrap=\"nowrap\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    wrap=\"nowrap\"\r\n                    xs\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={course?.cover?.content} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h6\">{course.title}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    style={{ width: \"auto\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        style={{ textDecoration: \"line-through\" }}\r\n                      >\r\n                        {course?.mainPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body1\">\r\n                        {course.mainPrice && course.off && offeredPrice}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\FAQ.tsx",["636","637","638"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\courseView\\InstructorShortDetails.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Course.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Person.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\CustomPagination.tsx",["639","640","641","642","643"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\MakeList.tsx",["644"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport React, { useState } from \"react\";\r\nimport { CategorySelector } from \"tools/customDesign/CategorySelector\";\r\nimport {\r\n  ICategoryFilter,\r\n  IFilteredValue,\r\n  IFilterType as IFilterType,\r\n  IListFilter,\r\n  ISliderFilter,\r\n} from \"../SearchPage\";\r\nimport { FilterCheckBox } from \"./FilterCheckbox\";\r\nimport { FilterSlider } from \"./FilterSlider\";\r\n\r\nexport function MakeList({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  console.log(\"filter in makelist\", filter);\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <ListItem key={filter.title} button onClick={() => setOpen(!open)}>\r\n        <ListItemText primary={filter.title} />\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <GenerateFilterValue\r\n          filteredData={filteredData}\r\n          filter={filter}\r\n          onFilterValueChange={onFilterValueChange}\r\n        />\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function GenerateFilterValue({\r\n  filteredData,\r\n  filter,\r\n  onFilterValueChange,\r\n}: {\r\n  filteredData: Array<IFilteredValue>;\r\n  filter: IFilterType;\r\n  onFilterValueChange: (value: IFilteredValue, type: \"ADD\" | \"REMOVE\") => void;\r\n}) {\r\n  if (filter.type === \"CATEGORY\") {\r\n    return (\r\n      <CategorySelector\r\n        categories={(filter as ICategoryFilter).items}\r\n        selectedCategories={filteredData.map(\r\n          (filterValue) =>\r\n            new Category(filterValue.id as number, filterValue.value as string)\r\n        )}\r\n        onCategorySelectionChange={(category, type) => {\r\n          onFilterValueChange(\r\n            {\r\n              type: filter.type,\r\n              title: filter.title,\r\n              value: category.name,\r\n              id: category.id,\r\n            },\r\n            type\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  } else if (filter.type === \"LIST\") {\r\n    return (\r\n      <List>\r\n        {(filter as IListFilter).items.map((item, index) => (\r\n          <ListItem\r\n            key={item.id}\r\n            // @ts-ignore\r\n            value={item}\r\n          >\r\n            <FilterCheckBox\r\n              checked={filteredData.some(\r\n                (data) => data.title === filter.title && data.id === item.id\r\n              )}\r\n              label={item.title}\r\n              onChange={(state) =>\r\n                onFilterValueChange(\r\n                  {\r\n                    type: filter.type,\r\n                    title: filter.title,\r\n                    value: item.title,\r\n                    id: item.id,\r\n                  },\r\n                  state ? \"ADD\" : \"REMOVE\"\r\n                )\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  } else if (filter.type === \"SLIDER\") {\r\n    return (\r\n      <Grid\r\n        style={{ height: \"100%\" }}\r\n        container\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <FilterSlider\r\n          //@ts-ignore\r\n          sliderData={{\r\n            ...filter,\r\n            // @ts-ignore\r\n            value: filteredData.some((item) => item.title === filter.title)\r\n              ? filteredData.find((item) => item.title === filter.title)?.value\r\n              : [(filter as ISliderFilter).min, (filter as ISliderFilter).max],\r\n          }}\r\n          onChange={(value, isClear) =>\r\n            onFilterValueChange(\r\n              {\r\n                type: filter.type,\r\n                title: filter.title,\r\n                value: value,\r\n                valueType: (filter as ISliderFilter).valueType,\r\n              },\r\n              isClear ? \"REMOVE\" : \"ADD\"\r\n            )\r\n          }\r\n          // handleSliderCommitFunc={handleSliderCommit}\r\n          // changeFilteredArrayFunc={handleFilterSliderChange}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\Configure.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\WeekView.tsx",["645","646","647"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n} from \"@material-ui/icons\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport { Lecture, Week } from \"classes/Course\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { LectureView } from \"./LectureView\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst defaultLecture = {\r\n  id: 0,\r\n  name: \"Lecture name is here...\",\r\n  type: \"\",\r\n  file: {\r\n    title: \"Title\",\r\n    body: \"\",\r\n  },\r\n};\r\n\r\nexport function WeekView({\r\n  editable,\r\n  week,\r\n  onWeekChange,\r\n  onWeekRemove,\r\n  weekNo,\r\n}: {\r\n  editable: boolean;\r\n  week: Week;\r\n  onWeekChange: (Week) => void;\r\n  onWeekRemove: () => void;\r\n  weekNo: number;\r\n}) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [lectures, setLectures] = useState(week.lectures);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(week.title);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(week.title);\r\n    // handleOnLectureAdd;\r\n  }, []);\r\n\r\n  function handleOnLectureChange(index, lecture) {\r\n    week.lectures.splice(index, 1, lecture);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n  function handleOnLectureAdd() {\r\n    let lectures = [\r\n      ...week.lectures,\r\n      new Lecture().setLectureNo(week.lectures.length + 1),\r\n    ];\r\n    onWeekChange({ ...week, lectures: lectures });\r\n    setLectures(lectures);\r\n  }\r\n  function handleOnLectureRemove(index) {\r\n    if (lectures.length == 1) {\r\n      enqueueSnackbar(\"There must be at least one lecture in a week\", {\r\n        variant: \"warning\",\r\n      });\r\n      return;\r\n    }\r\n    week.lectures.splice(index, 1);\r\n    onWeekChange({ ...week, lectures: week.lectures });\r\n    setLectures(week.lectures);\r\n  }\r\n\r\n  return (\r\n    <Accordion style={{ width: \"100%\" }}>\r\n      <AccordionSummary expandIcon={<ExpandMore />}>\r\n        {/* <IconButton>\r\n          <ImportExport />\r\n        </IconButton> */}\r\n        {!editMode && (\r\n          <Grid container alignItems=\"center\" direction=\"row\" wrap=\"nowrap\">\r\n            {editable && (\r\n              <>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      event.stopPropagation();\r\n                      setEditMode(true);\r\n                    }}\r\n                  >\r\n                    <Edit />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      onWeekRemove();\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            )}\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Week {weekNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography> {fieldValue}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container wrap=\"nowrap\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={fieldValue}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Week name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onWeekChange({ ...week, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(week.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container direction=\"column\" spacing={1}>\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n          > */}\r\n\r\n          {/* <ReactSortable\r\n            list={lectures}\r\n            setList={setLectures}\r\n            style={{ width: \"100%\" }}\r\n          > */}\r\n          {lectures.map((item, index) => (\r\n            <Grid item container key={index} style={{ marginBottom: 12 }}>\r\n              <LectureView\r\n                editable={editable}\r\n                lecture={item}\r\n                lectureNo={index + 1}\r\n                onLectureChange={(lecture) =>\r\n                  handleOnLectureChange(index, lecture)\r\n                }\r\n                onLectureRemove={() => handleOnLectureRemove(index)}\r\n              />\r\n            </Grid>\r\n          ))}\r\n          {/* </ReactSortable> */}\r\n          {editable && (\r\n            <Grid\r\n              item\r\n              container\r\n              justifyContent=\"center\"\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<AddCircle />}\r\n                onClick={handleOnLectureAdd}\r\n              >\r\n                ADD LECTURE\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          {/* </ReactSortable> */}\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CustomCarousel.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\classes\\Files.tsx",["648","649","650","651"],"import axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\n\r\nexport class Files {\r\n  id: number;\r\n  type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\";\r\n  title: string;\r\n  content: any;\r\n  uploadTime: Date;\r\n  lastUpdateTime: Date;\r\n\r\n  constructor(\r\n    type: \"ICON\" | \"VIDEO\" | \"PICTURE\" | \"PDF\" | \"ARTICLE\" | \"LINK\",\r\n    title: string = \"\"\r\n  ) {\r\n    this.type = type;\r\n    this.title = title;\r\n  }\r\n  setFile(file: FileObject): Files {\r\n    console.log(\"In File: \", file);\r\n    this.content = file;\r\n    return this;\r\n  }\r\n  setTitle(title: string): Files {\r\n    this.title = title;\r\n    return this;\r\n  }\r\n  setContent(content: string): Files {\r\n    this.content = content;\r\n    return this;\r\n  }\r\n  setId(id: number): Files {\r\n    this.id = id;\r\n    return this;\r\n  }\r\n  async upload() {\r\n    if (this.type == \"VIDEO\" || this.type == \"PICTURE\" || this.type == \"PDF\") {\r\n      if (this.content.file) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", this.content.file);\r\n        formData.append(\"type\", this.type);\r\n        formData.append(\"secure\", this.type != \"PICTURE\" ? \"true\" : \"false\");\r\n        await axios\r\n          .put(GLOBAL.HOST + `/resources/upload`, formData, authHeaders())\r\n          .then((response) => {\r\n            this.content = response.data.uri;\r\n            console.log(1);\r\n            console.log(\"File url: \", response.data);\r\n          });\r\n      }\r\n    }\r\n    return await Promise.resolve();\r\n  }\r\n}\r\n\r\nexport {};\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\Header.tsx",["652","653","654","655","656"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\Footer.tsx",[],["657","658"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterSlider.tsx",["659","660"],"import { Grid, InputAdornment, Slider, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { ISliderFilter } from \"../SearchPage\";\r\n\r\nexport function FilterSlider({\r\n  sliderData,\r\n  onChange,\r\n}: {\r\n  sliderData: ISliderFilter;\r\n  onChange: (value: number[], isClear: boolean) => void;\r\n}) {\r\n  const [value, setValue] = React.useState(sliderData.value);\r\n  useEffect(() => {\r\n    setValue(sliderData.value);\r\n  }, [sliderData.value]);\r\n\r\n  async function handleSliderChange(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    // changeFilteredArrayFunc({ filterType: filterType, min: newValue[0], max: newValue[1] });\r\n  }\r\n  function handleSliderCommit(newValue) {\r\n    setValue([\r\n      Math.min(newValue[0], newValue[1]),\r\n      Math.max(newValue[0], newValue[1]),\r\n    ]);\r\n    onChange(value, value[0] == sliderData.min && value[1] == sliderData.max);\r\n    // let newObject = object;\r\n    // newObject.value = newValue;\r\n    // onObjectChange(newObject);\r\n  }\r\n\r\n  function handleInputChangeMin(minValue) {\r\n    setValue([Math.min(minValue, value[1]), Math.max(minValue, value[1])]);\r\n  }\r\n  function handleInputChangeMax(maxValue) {\r\n    setValue([Math.min(value[0], maxValue), Math.max(value[0], maxValue)]);\r\n  }\r\n  function handleOnBlurMin(minValue) {\r\n    var newVal = Number(minValue);\r\n    minValue = minValue === \"\" ? 0 : newVal;\r\n    var maxValue = value[1];\r\n\r\n    if (newVal < sliderData.min) minValue = sliderData.min;\r\n    if (newVal > sliderData.max) minValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  }\r\n  const handleOnBlurMax = (maxValue) => {\r\n    var newVal = Number(maxValue);\r\n    var minValue = value[0];\r\n    maxValue = maxValue === \"\" ? 0 : newVal;\r\n\r\n    if (newVal < sliderData.min) maxValue = sliderData.min;\r\n    if (newVal > sliderData.max) maxValue = sliderData.max;\r\n\r\n    handleSliderCommit([minValue, maxValue]);\r\n  };\r\n  function generateMarks() {\r\n    var ara: Array<{ value: number; label: string }> = [];\r\n    for (\r\n      var i = sliderData.min;\r\n      i <= sliderData.max;\r\n      i = i + (sliderData.max - sliderData.min) / 5\r\n    ) {\r\n      ara.push({ value: i, label: \"\" + i + sliderData.valueType });\r\n    }\r\n    return ara;\r\n  }\r\n\r\n  return (\r\n    <Grid item container xs spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          min={sliderData.min}\r\n          max={sliderData.max}\r\n          step={sliderData.step}\r\n          value={value}\r\n          onChange={(event, newValue) => handleSliderChange(newValue)}\r\n          onChangeCommitted={(event, newValue) => handleSliderCommit(newValue)}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"range-slider\"\r\n          marks={generateMarks()}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Min value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[0]}\r\n          onChange={(event) => handleInputChangeMin(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMin(event.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Max value\"\r\n          id=\"outlined-start-adornment\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                {sliderData.valueType}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          variant=\"outlined\"\r\n          value={value[1]}\r\n          onChange={(event) => handleInputChangeMax(event.target.value)}\r\n          onBlur={(event) => handleOnBlurMax(event.target.value)}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\filter\\FilterCheckbox.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\Tools.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LectureView.tsx",["661","662","663","664","665","666","667","668","669"],"import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cancel,\r\n  CheckCircle,\r\n  DeleteForever,\r\n  Edit,\r\n  ExpandMore,\r\n  PictureAsPdf,\r\n  TextFields,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { Lecture } from \"classes/Course\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ArticleInput } from \"./ArticleInput\";\r\nimport { ArticleOutput } from \"./ArticleOutput\";\r\nimport { LinkInput } from \"./LinkInput\";\r\nimport { LinkOutput } from \"./LinkOutput\";\r\nimport { PDFInput } from \"./PDFInput\";\r\nimport { PDFOutput } from \"./PDFOutput\";\r\nimport { VideoInput } from \"./VideoInput\";\r\nimport { VideoOutput } from \"./VideoOutput\";\r\n\r\nexport function LectureView({\r\n  editable,\r\n  lecture,\r\n  lectureNo,\r\n  onLectureChange,\r\n  onLectureRemove,\r\n}: {\r\n  editable: boolean;\r\n  lecture: Lecture;\r\n  lectureNo: number;\r\n  onLectureChange: (Lecture) => void;\r\n  onLectureRemove: () => void;\r\n}) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [fieldValue, setFieldValue] = useState(lecture.title);\r\n  const [body, setBody] = useState(editable ? \"LECTURE_TYPE\" : \"\");\r\n  const [preview, setPreview] = useState(lecture ? lecture.preview : false);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    setBody(\r\n      lecture?.file?.type\r\n        ? lecture?.file?.type + \"_OUTPUT\"\r\n        : editable\r\n        ? \"LECTURE_TYPE\"\r\n        : \"\"\r\n    );\r\n    setPreview(lecture.preview);\r\n  }, [lecture.title, lecture.preview]);\r\n\r\n  // function handleBodyChange(body) {\r\n  //   setState({ ...state, body: body });\r\n  // }\r\n  // function handleContentClick(panel) {\r\n  //   setState({\r\n  //     ...state,\r\n  //     expanded: state.contentClicked ? '' : panel\r\n  //   })\r\n  // }\r\n  function handleOnSave(file) {\r\n    console.log(file);\r\n    let error = false;\r\n    if (file.title == \"\" || file.title == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Title is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"Lecture body is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (file.content == undefined) {\r\n      error = true;\r\n      switch (file.type) {\r\n        case \"ARTICLE\":\r\n          enqueueSnackbar(\"Content is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"VIDEO\":\r\n          enqueueSnackbar(\"VIDEO file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"PDF\":\r\n          enqueueSnackbar(\"PDF file is missing\", { variant: \"error\" });\r\n          break;\r\n        case \"LINK\":\r\n          enqueueSnackbar(\"Link details is missing\", { variant: \"error\" });\r\n          break;\r\n      }\r\n    }\r\n    if (error) {\r\n      return;\r\n    }\r\n    onLectureChange({ ...lecture, file: file });\r\n    setBody(file.type + \"_OUTPUT\");\r\n  }\r\n  function handleOnCancel() {\r\n    setBody(\r\n      lecture.file == undefined ? \"LECTURE_TYPE\" : lecture.file.type + \"_OUTPUT\"\r\n    );\r\n  }\r\n  function handleOnUpdate() {\r\n    setBody(lecture.file.type + \"_INPUT\");\r\n  }\r\n  function handlePreviewChange(event) {\r\n    setPreview(!preview);\r\n    onLectureChange({ ...lecture, preview: !preview });\r\n  }\r\n\r\n  function LectureType() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <IconButton onClick={(event) => setBody(\"ARTICLE_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <TextFields />\r\n            <Typography>Article</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"VIDEO_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <VideoCall />\r\n            <Typography>Video</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"PDF_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <PictureAsPdf />\r\n            <Typography>PDF</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n        <IconButton onClick={(event) => setBody(\"LINK_INPUT\")}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <LinkIcon />\r\n            <Typography>Link</Typography>\r\n          </Grid>\r\n        </IconButton>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function LectureRow() {\r\n    return (\r\n      <>\r\n        {!editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            {editable && (\r\n              <>\r\n                <Grid item>\r\n                  <Tooltip\r\n                    title={\r\n                      preview\r\n                        ? \"This lecture is set as preview\"\r\n                        : \"Do you want to set this lecture as preview?\"\r\n                    }\r\n                    TransitionComponent={Zoom}\r\n                    arrow\r\n                  >\r\n                    <span onClick={(event) => event.stopPropagation()}>\r\n                      <Checkbox\r\n                        checked={preview}\r\n                        onChange={handlePreviewChange}\r\n                      />\r\n                    </span>\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      setEditMode(true);\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <Edit />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    onClick={(event) => {\r\n                      onLectureRemove();\r\n                      event.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <DeleteForever />\r\n                  </IconButton>\r\n                </Grid>\r\n              </>\r\n            )}\r\n            <Grid item>\r\n              <Typography style={{ whiteSpace: \"nowrap\", marginRight: 10 }}>\r\n                Lecture {lectureNo} :\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item container>\r\n              <Typography> {lecture.title}</Typography>\r\n            </Grid>\r\n            {!expanded && editable && lecture.file == undefined && (\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  <Typography style={{ whiteSpace: \"nowrap\" }}>\r\n                    Content +\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            {expanded && editable && lecture.file == undefined && (\r\n              <Grid item>\r\n                <IconButton\r\n                  onClick={(event) => {\r\n                    setBody(\"LECTURE_TYPE\");\r\n                  }}\r\n                >\r\n                  <Cancel />\r\n                </IconButton>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        )}\r\n        {editMode && (\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n            <Grid item container>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                defaultValue={lecture.title}\r\n                onBlur={(event) => setFieldValue(event.target.value)}\r\n                onClick={(event) => event.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  if (!fieldValue) {\r\n                    enqueueSnackbar(\"Lecture name can not be empty\", {\r\n                      variant: \"warning\",\r\n                    });\r\n                    return;\r\n                  }\r\n                  onLectureChange({ ...lecture, title: fieldValue });\r\n                  setEditMode(false);\r\n                }}\r\n              >\r\n                <CheckCircle />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  setEditMode(false);\r\n                  setFieldValue(lecture.title);\r\n                  event.stopPropagation();\r\n                }}\r\n              >\r\n                <Cancel />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Accordion\r\n      key={lecture.id}\r\n      expanded={expanded}\r\n      style={{ backgroundColor: \"pink\", width: \"100%\" }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={lecture.file != undefined && <ExpandMore />}\r\n        onClick={() => {\r\n          if (editable || lecture?.file?.content) setExpanded(!expanded);\r\n        }}\r\n      >\r\n        <LectureRow />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        {body === \"LECTURE_TYPE\" && <LectureType />}\r\n\r\n        {body === \"ARTICLE_INPUT\" && (\r\n          <ArticleInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"ARTICLE_OUTPUT\" && (\r\n          <ArticleOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"LINK_INPUT\" && (\r\n          <LinkInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"LINK_OUTPUT\" && (\r\n          <LinkOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_INPUT\" && (\r\n          <VideoInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"VIDEO_OUTPUT\" && (\r\n          <VideoOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n        {body === \"PDF_INPUT\" && (\r\n          <PDFInput\r\n            file={lecture.file}\r\n            onSave={handleOnSave}\r\n            onCancel={handleOnCancel}\r\n          />\r\n        )}\r\n        {body === \"PDF_OUTPUT\" && (\r\n          <PDFOutput\r\n            editable={editable}\r\n            file={lecture.file}\r\n            onUpdate={handleOnUpdate}\r\n          />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\footer\\SimpleReactFooter.js",["670","671","672","673","674","675","676","677"],"import { Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FaPinterestSquare, FaTwitterSquare } from \"react-icons/fa\";\r\nimport {\r\n  ImFacebook2,\r\n  ImInstagram,\r\n  ImLinkedin,\r\n  ImYoutube,\r\n} from \"react-icons/im\";\r\nimport \"./SimpleReactFooter.sass\";\r\n\r\nclass SimpleReactFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ backgroundColor: this.props.backgroundColor || \"bisque\" }}\r\n        className=\"footer-container\"\r\n      >\r\n        <Grid container>\r\n          <Grid className=\"grid-item\" item md={6} sm={12}>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"first-title\"\r\n            >\r\n              {this.props.title}\r\n            </div>\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"description\"\r\n            >\r\n              {this.props.description}\r\n            </div>\r\n          </Grid>\r\n          <Grid container md={6}>\r\n            {this.props.columns.map((column) => (\r\n              <Grid className=\"grid-item\" item sm={3} xs={6}>\r\n                <div\r\n                  style={{ color: this.props.fontColor || \"black\" }}\r\n                  className=\"second-title\"\r\n                >\r\n                  {column.title}\r\n                </div>\r\n                {column.resources.map((resource) => (\r\n                  <div key={resource.id}>\r\n                    <a\r\n                      href={`${resource.link}`}\r\n                      target=\"_blank\"\r\n                      style={{ color: this.props.fontColor || \"black\" }}\r\n                      className=\"resources\"\r\n                    >\r\n                      {resource.name}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        {this.props.facebook !== undefined ||\r\n        this.props.linkedin !== undefined ||\r\n        this.props.instagram !== undefined ||\r\n        this.props.twitter !== undefined ||\r\n        this.props.pinterest !== undefined ||\r\n        this.props.youtube !== undefined ? (\r\n          <div className=\"social-media-col\">\r\n            <div\r\n              style={{ color: this.props.fontColor || \"black\" }}\r\n              className=\"stay-connected-title\"\r\n            >\r\n              Stay connected\r\n            </div>\r\n            <div className=\"social-media\">\r\n              {this.props.facebook !== undefined ? (\r\n                <a\r\n                  href={`https://www.facebook.com/${this.props.facebook}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImFacebook2\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.linkedin !== undefined ? (\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${this.props.linkedin}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImLinkedin\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.instagram !== undefined ? (\r\n                <a\r\n                  href={`https://www.instagram.com/${this.props.instagram}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImInstagram\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.twitter !== undefined ? (\r\n                <a\r\n                  href={`https://www.twitter.com/${this.props.twitter}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaTwitterSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.pinterest !== undefined ? (\r\n                <a\r\n                  href={`https://www.pinterest.com/${this.props.pinterest}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <FaPinterestSquare\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.props.youtube !== undefined ? (\r\n                <a\r\n                  href={`https://www.youtube.com/channel/${this.props.youtube}`}\r\n                  target=\"_blank\"\r\n                  className=\"socialMediaLogo\"\r\n                >\r\n                  <ImYoutube\r\n                    color={`${this.props.iconColor || \"black\"}`}\r\n                    size={25}\r\n                  />{\" \"}\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div>\r\n          <div\r\n            style={{ color: this.props.copyrightColor || \"grey\" }}\r\n            className=\"copyright\"\r\n          >\r\n            Copyright &copy; {this.props.copyright}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleReactFooter.propTypes = {\r\n  description: PropTypes.string,\r\n  linkedin: PropTypes.string,\r\n  instagram: PropTypes.string,\r\n  facebook: PropTypes.string,\r\n  youtube: PropTypes.string,\r\n  pinterest: PropTypes.string,\r\n  title: PropTypes.string,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      resources: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string,\r\n          link: PropTypes.string,\r\n        })\r\n      ),\r\n    })\r\n  ),\r\n  copyright: PropTypes.string,\r\n  iconColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  copyrightColor: PropTypes.string,\r\n};\r\n\r\nexport default SimpleReactFooter;\r\n",["678","679"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\CategorySelector.tsx",["680","681","682"],"import { Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport { alpha, makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport { Category } from \"classes/Category\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\"; // web.cjs is required for IE 11 support\r\n\r\nfunction MinusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction PlusSquare(props) {\r\n  return (\r\n    <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction CloseSquare(props) {\r\n  return (\r\n    <SvgIcon\r\n      className=\"close\"\r\n      fontSize=\"inherit\"\r\n      style={{ width: 14, height: 14 }}\r\n      {...props}\r\n    >\r\n      {/* tslint:disable-next-line: max-line-length */}\r\n      <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nfunction TransitionComponent(props) {\r\n  const style = useSpring({\r\n    from: { opacity: 0, transform: \"translate3d(20px,0,0)\" },\r\n    to: {\r\n      opacity: props.in ? 1 : 0,\r\n      transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div style={style}>\r\n      <Collapse {...props} />\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nTransitionComponent.propTypes = {\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n};\r\n\r\nconst StyledTreeItem = withStyles((theme) => ({\r\n  iconContainer: {\r\n    \"& .close\": {\r\n      opacity: 0.3,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 7,\r\n    paddingLeft: 18,\r\n    borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n  },\r\n}))(\r\n  (props: {\r\n    label: string;\r\n    checked: boolean;\r\n    onChange: (checked: boolean) => void;\r\n    nodeId: number;\r\n    children?: any;\r\n    key: number;\r\n  }) => {\r\n    const [checked, setChecked] = useState(false);\r\n    useEffect(() => {\r\n      setChecked(props.checked);\r\n    }, [props.checked]);\r\n\r\n    return (\r\n      <TreeItem\r\n        key={props.key}\r\n        children={props.children}\r\n        nodeId={props.nodeId + \"\"}\r\n        onLabelClick={(event) => {\r\n          // @ts-ignore\r\n          if (event.target.type === \"checkbox\") {\r\n            event.preventDefault();\r\n          }\r\n        }}\r\n        label={\r\n          <>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={checked}\r\n                  onChange={(event) => {\r\n                    props.onChange(!checked);\r\n                    setChecked(!checked);\r\n                  }}\r\n                />\r\n              }\r\n              label=\"\"\r\n            />\r\n            <Typography display=\"inline\">{props.label}</Typography>\r\n          </>\r\n        }\r\n        // TransitionComponent={TransitionComponent}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\nlet i = 1;\r\n\r\nexport function CategorySelector({\r\n  categories,\r\n  selectedCategories,\r\n  onCategorySelectionChange,\r\n}: {\r\n  categories: Array<Category>;\r\n  selectedCategories: Array<Category>;\r\n  onCategorySelectionChange: (\r\n    category: Category,\r\n    type: \"ADD\" | \"REMOVE\"\r\n  ) => void;\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function ExploreData({ data }: { data: Array<Category> }): any {\r\n    function handleDataChange(item: Category, checked: boolean) {\r\n      onCategorySelectionChange(item, checked ? \"ADD\" : \"REMOVE\");\r\n    }\r\n    return data.map((item, index) =>\r\n      item.children.length > 0 ? (\r\n        <StyledTreeItem\r\n          key={item.id}\r\n          nodeId={item.id}\r\n          label={item.name}\r\n          checked={selectedCategories.some(\r\n            (selectedCategory) => selectedCategory.id == item.id\r\n          )}\r\n          onChange={(checked) => handleDataChange(item, checked)}\r\n        >\r\n          <ExploreData data={item.children} />\r\n        </StyledTreeItem>\r\n      ) : (\r\n        <StyledTreeItem\r\n          key={item.id}\r\n          nodeId={item.id}\r\n          label={item.name}\r\n          checked={selectedCategories.some(\r\n            (selectedCategory) => selectedCategory.id == item.id\r\n          )}\r\n          onChange={(checked) => handleDataChange(item, checked)}\r\n        />\r\n      )\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<MinusSquare />}\r\n        defaultExpandIcon={<PlusSquare />}\r\n        defaultEndIcon={<CloseSquare />}\r\n      >\r\n        <ExploreData data={categories} />\r\n      </TreeView>\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\VideoOutput.tsx",["683","684"],"import { authHeaders } from \"components/auth/api/AuthService\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport VideoPlayer from \"tools/customDesign/VideoPlayer\";\r\nimport { LectureOutputProps, OutputLayout } from \"./OutputLayout\";\r\n\r\nexport function VideoOutput({ editable, file, onUpdate }: LectureOutputProps) {\r\n  const [videoUrl, setVideoUrl] = useState<string | null>(\"\");\r\n  useEffect(() => {\r\n    // axios.get(url, authHeaders()).then((response) => {\r\n    //   console.log(\"video is loaded\", response.data);\r\n    //   setFile(response.data);\r\n    // });\r\n    // return () => {\r\n    //   setFile(\"\");\r\n    // };\r\n    if (file?.content && file?.content?.file == undefined) videoFetch();\r\n    else if (file?.content?.file)\r\n      setVideoUrl(URL.createObjectURL(file?.content?.file));\r\n    return () => setVideoUrl(null);\r\n  }, [file.content]);\r\n  async function videoFetch() {\r\n    const result = await fetch(\r\n      file.content,\r\n      // @ts-ignore\r\n      authHeaders()\r\n    );\r\n    console.log(\"video fetched\");\r\n    const blob = await result.blob();\r\n    if (blob) {\r\n      setVideoUrl(URL.createObjectURL(blob));\r\n    }\r\n  }\r\n  return (\r\n    <OutputLayout editable={editable} onUpdate={onUpdate}>\r\n      <VideoPlayer url={videoUrl as string} />\r\n      <MUIRichTextEditor readOnly toolbar={false} defaultValue={file.title} />\r\n    </OutputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFOutput.tsx",["685","686","687","688","689","690","691"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\PDFInput.tsx",["692","693"],"import MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\n\r\nexport function PDFInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [title, setTitle] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setTitle(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"PDF\", title).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <FileUploader\r\n        fileObjects={file?.content?.file ? [file.content] : []}\r\n        filesLimit={1}\r\n        type=\"pdf\"\r\n        onChange={(files) => setContent(files[0])}\r\n      />\r\n      <TextEditor value={file?.title} onChange={(value) => setTitle(value)} />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\MenuBar.tsx",["694"],"import {\r\n  Collapse,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport { Category } from \"classes/Category\";\r\nimport React from \"react\";\r\n\r\n// let CSSTransitionGroup = React.addons.CSSTransitionGroup;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    backgroundColor: \"#ffc107\",\r\n    padding: 8,\r\n  },\r\n  menuItemWrapper: {\r\n    height: \"auto\",\r\n  },\r\n  menu: {\r\n    cursor: \"pointer\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"space-between\",\r\n      borderBottom: \"1px solid black\",\r\n    },\r\n  },\r\n  subMenuContainer: {\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fd7e14\",\r\n    zIndex: 100,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"relative\",\r\n      marginLeft: \"20px\",\r\n      // right: \"80%\",\r\n      // width: \"100%\",\r\n    },\r\n  },\r\n  subMenuItem: {\r\n    padding: theme.spacing(1, 3),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"50%\",\r\n    },\r\n  },\r\n  signInBtn: {\r\n    justify: \"start\",\r\n    label: {\r\n      justify: \"start\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const menuItems = {\r\n  defaultExpanded: [],\r\n  data: [\r\n    {\r\n      title: \"Menu 1\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 2\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 1\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 2\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 3\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 3\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 4\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 5\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 6\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 7\",\r\n      items: [],\r\n      checked: false,\r\n    },\r\n    {\r\n      title: \"Menu 8\",\r\n      items: [\r\n        {\r\n          title: \"Sub menu 4\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 5\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n        {\r\n          title: \"Sub menu 6\",\r\n          items: [],\r\n          checked: false,\r\n        },\r\n      ],\r\n      checked: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport function SubMenu({\r\n  subCategories,\r\n  open,\r\n}: {\r\n  subCategories: Category[];\r\n  open: boolean;\r\n}) {\r\n  const classes = useStyles();\r\n  if (!subCategories.length) return <></>;\r\n  else\r\n    return (\r\n      <div className={classes.subMenuContainer}>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {subCategories.map((item) => (\r\n              <ListItem className={classes.subMenuItem} button key={item.id}>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction Menu({ mainCategory }: { mainCategory: Category }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleMouseEnterLeave = (doOpen) => {\r\n    if (mainCategory.children.length) {\r\n      setOpen(doOpen);\r\n    }\r\n  };\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.menuItemWrapper}\r\n      onMouseEnter={() => setOpen(true)}\r\n      onMouseLeave={() => setOpen(false)}\r\n    >\r\n      {mainCategory.name}\r\n      {mainCategory.children.length > 0 && !open ? (\r\n        <ExpandMore />\r\n      ) : (\r\n        <ExpandLess />\r\n      )}\r\n      <SubMenu subCategories={mainCategory.children} open={open} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function MenuBar({ mainCategories }: { mainCategories: Category[] }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-around\" direction=\"row\">\r\n      {mainCategories.map((mainCategory) => (\r\n        <Grid item className={classes.menu} key={mainCategory.id}>\r\n          <Menu mainCategory={mainCategory} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\OutputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\InputLayout.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleInput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\LinkInput.tsx",["695","696"],"import { TextField } from \"@material-ui/core\";\r\nimport { Files } from \"classes/Files\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TextEditor from \"tools/customDesign/TextEditor\";\r\nimport { InputLayout, LectureInputProps } from \"./InputLayout\";\r\n\r\nexport function LinkInput({ file, onSave, onCancel }: LectureInputProps) {\r\n  const [link, setLink] = useState(file?.title);\r\n  const [content, setContent] = useState(file?.content);\r\n\r\n  useEffect(() => {\r\n    setLink(file?.title);\r\n    setContent(file?.content);\r\n  }, [file?.title, file?.content]);\r\n\r\n  return (\r\n    <InputLayout\r\n      onSave={() => onSave(new Files(\"LINK\", link).setContent(content))}\r\n      onCancel={onCancel}\r\n    >\r\n      <TextEditor\r\n        value={file?.content}\r\n        onChange={(value) => setContent(value)}\r\n      />\r\n      <TextField\r\n        label=\"Source Link\"\r\n        variant=\"outlined\"\r\n        defaultValue={link}\r\n        onBlur={(event) => setLink(event.target.value)}\r\n        InputProps={{\r\n          startAdornment: \"http://\",\r\n        }}\r\n      />\r\n    </InputLayout>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Curriculum\\ArticleOutput.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\responsive\\utilResponsive.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CountryComponent.js",["697"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport CountryService from '../AdminPanel/api/CountryService.js';\r\n\r\n\r\nfunction CountryComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Country Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllCountries()\r\n\r\n  function getAllCountries() {\r\n    CountryService.getAllCountries()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCountries() {\r\n    useEffect(() => { getAllCountries() }, []);\r\n  }\r\n\r\n  function CallupdateCountry(country) {\r\n\r\n    CountryService.updateCountry(country)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n  }\r\n  function CalldeleteCountry(id) {\r\n\r\n    CountryService.deleteCountry(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  function CalladdCountry(country) {\r\n\r\n    CountryService.addCountry(country)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllCountries();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        columns={columns}\r\n        title=\"Country\"\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                newData.adminId = 'shammya';\r\n                //console.log(newData.id)\r\n                CalladdCountry(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                //setData([...dataUpdate]);\r\n                CallupdateCountry(newData);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete])\r\n                CalldeleteCountry(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default CountryComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\DesignationComponent.js",["698","699"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport DesignationService from '../AdminPanel/api/DesignationService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction DesignationComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Designation ', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllDesignations()\r\n\r\n\r\n  function getAllDesignations() {\r\n    DesignationService.getAllDesignation()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllDesignations() {\r\n    useEffect(() => { getAllDesignations() }, []);\r\n  }\r\n\r\n  function CallupdateDesignation(designation) {\r\n\r\n    DesignationService.updateDesignation(designation)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteDesignation(id) {\r\n\r\n    DesignationService.deleteDesignation(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdDesignation(designation) {\r\n\r\n    DesignationService.addDesignation(designation)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...countries, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllDesignations();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MaterialTable\r\n        style={{ width: \"100%\" }}\r\n        title=\"Designation\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n\r\n              setTimeout(() => {\r\n                //console.log(newData.id)\r\n                newData.adminId = 'shammya';\r\n                CalladdDesignation(newData)\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // console.log(index)\r\n                // setData([...dataUpdate]);\r\n                CallupdateDesignation(newData)\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                CalldeleteDesignation(oldData.id);\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n        }}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DesignationComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CategoryComponent.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\Landing.tsx",["700","701","702","703"],"import {\r\n  Card,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Category } from \"classes/Category\";\r\nimport { Course } from \"classes/Course\";\r\nimport CategoryService from \"components/AdminPanel/api/CategoryService\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { ImageUploader } from \"tools/customDesign/ImageUploader\";\r\nimport { LanguageField } from \"tools/customDesign/LanguageField\";\r\n\r\nexport function LandingPage({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  const [categories, setCategories] = useState<Category[]>();\r\n  const [subCategories, setSubCategories] = useState<Category[]>();\r\n  const [mainCategoryId, setMainCategoryId] = useState(0);\r\n  const [subCategoryId, setSubCategoryId] = useState(0);\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    subTitle: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  // const [course, setCourse] = useState(course);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      title: course.title,\r\n      subTitle: course.subTitle,\r\n      description: course.description,\r\n    });\r\n    CategoryService.getCategories().then((response) => {\r\n      console.log(response.data);\r\n      setCategories(response.data[0].children);\r\n      console.log(\"Course\", course);\r\n      if (course.mainCategory) {\r\n        setMainCategoryId(course.mainCategory.id);\r\n        setSubCategories(\r\n          response.data[0].children.filter(\r\n            (item) => item.id == course.mainCategory.id\r\n          )[0].children\r\n        );\r\n      }\r\n      if (course.subCategory) setSubCategoryId(course.subCategory.id);\r\n    });\r\n    return () => {\r\n      // setCategories([]);\r\n      // setSubCategories([]);\r\n    };\r\n  }, [course]);\r\n  console.log(\"cover\", course.cover);\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"space-between\" spacing={2}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignContent=\"space-between\"\r\n              spacing={2}\r\n            >\r\n              <Grid item container>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course title\"\r\n                  value={state.title}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    setState({ ...state, title: event.target.value })\r\n                  }\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ title: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course subtitle\"\r\n                  value={state.subTitle}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, subTitle: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ subTitle: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Course description\"\r\n                  value={state.description}\r\n                  onChange={(event) =>\r\n                    setState({ ...state, description: event.target.value })\r\n                  }\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={4}\r\n                  onBlur={(event) =>\r\n                    onCourseAttrChange({ description: event.target.value })\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <LanguageField\r\n                  objects={course.languages}\r\n                  onObjectsChange={(languages) =>\r\n                    onCourseAttrChange({ languages: languages })\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n                  Category\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                {/* <Typography>Category</Typography> */}\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Main Category</InputLabel>\r\n                  <Select\r\n                    value={mainCategoryId}\r\n                    onChange={(event) => {\r\n                      if (event.target.value != 0) {\r\n                        setMainCategoryId(event.target.value as number);\r\n                        setSubCategories(\r\n                          categories?.filter(\r\n                            (item) => item.id == event.target.value\r\n                          )[0].children\r\n                        );\r\n                        setSubCategoryId(0);\r\n                        onCourseAttrChange({\r\n                          mainCategory: categories?.filter(\r\n                            (cat) => cat.id === (event.target.value as number)\r\n                          )[0],\r\n                        });\r\n                      }\r\n                    }}\r\n                    label=\"Main Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {console.log(categories)}\r\n                    {categories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" required fullWidth>\r\n                  <InputLabel>Sub Category</InputLabel>\r\n                  <Select\r\n                    value={subCategoryId}\r\n                    onChange={(event) => {\r\n                      setSubCategoryId(event.target.value as number);\r\n                      onCourseAttrChange({\r\n                        subCategory: subCategories?.filter(\r\n                          (cat) => cat.id === (event.target.value as number)\r\n                        )[0],\r\n                      });\r\n                    }}\r\n                    label=\"Sub Category *\"\r\n                  >\r\n                    <MenuItem key={0} value={0}>\r\n                      {\"--Select--\"}\r\n                    </MenuItem>\r\n                    {subCategories?.map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container>\r\n              <ImageUploader\r\n                title=\"Course Cover\"\r\n                imageDestination={course.cover}\r\n                onSetClick={(file) => {\r\n                  onCourseAttrChange({ cover: file });\r\n                }}\r\n                onDeleteClick={() => {\r\n                  onCourseAttrChange({ cover: undefined });\r\n                }}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n{\r\n  /* <Grid container direction=\"column\" spacing={2}>\r\n                  <Grid item container sm>\r\n                    {categories.map((category, idx) => (\r\n                      <Grid item key={category.id}>\r\n                        <Chip\r\n                          size=\"medium\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                            marginTop: 5,\r\n                            marginRight: 5,\r\n                          }}\r\n                          label={category.name}\r\n                          onDelete={() => {\r\n                            let array = [...categories];\r\n                            array.splice(idx, 1);\r\n                            setCategories(array);\r\n                            onCourseAttrChange({ categories: array });\r\n                          }}\r\n                          color=\"secondary\"\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                  <Grid item container justifyContent=\"center\">\r\n                    {categories.length > 0 && (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setCategories([])}\r\n                      >\r\n                        Clear All\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <CategorySelector\r\n                  categories={categoryList}\r\n                  selectedCategories={categories}\r\n                  onCategorySelectionChange={handleCategoriesChange}\r\n                /> */\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\Overview.tsx",["704","705","706","707","708","709"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport {\r\n  ArgumentAxis,\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TeacherService from \"../api/TeacherService\";\r\n\r\ninterface ISource {\r\n  date: Date | string;\r\n  enrStdCount: number;\r\n  reviewCount: number;\r\n  oneStar: number;\r\n  twoStar: number;\r\n  threeStar: number;\r\n  fourStar: number;\r\n  fiveStar: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\ninterface ICourse {\r\n  id: number;\r\n  title: string;\r\n  image?: string;\r\n}\r\n\r\nfunction convertToDay(date: Date) {\r\n  return date.toLocaleString(\"default\", { weekday: \"short\" });\r\n}\r\nfunction convertToDate(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n}\r\nfunction convertToMonth(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n\r\nfunction generateArrayByDay(\r\n  source: ISource[],\r\n  day: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < day; i++) {\r\n    let date = new Date(\r\n      new Date().setDate(new Date().getDate() - (day - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let data = source.filter(\r\n      (item) => (item.date as Date).getTime() == date.getTime()\r\n    );\r\n    console.log(source[0].date, new Date(source[0].date), date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      enrStdCount: data.length ? data[0].enrStdCount : 0,\r\n      reviewCount: data.length ? data[0].reviewCount : 0,\r\n      oneStar: data.length ? data[0].oneStar : 0,\r\n      twoStar: data.length ? data[0].twoStar : 0,\r\n      threeStar: data.length ? data[0].threeStar : 0,\r\n      fourStar: data.length ? data[0].fourStar : 0,\r\n      fiveStar: data.length ? data[0].fiveStar : 0,\r\n    });\r\n  }\r\n  console.log(day + \" days\", array);\r\n  return array;\r\n}\r\nfunction generateArrayByMonth(\r\n  source: ISource[],\r\n  month: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < month; i++) {\r\n    let date = new Date(\r\n      new Date().setMonth(new Date().getMonth() - (month - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let enrStdCount: number = 0;\r\n    let reviewCount: number = 0;\r\n    let oneStar: number = 0;\r\n    let twoStar: number = 0;\r\n    let threeStar: number = 0;\r\n    let fourStar: number = 0;\r\n    let fiveStar: number = 0;\r\n    let data = source.map((item) => {\r\n      if ((item.date as Date).getMonth() == date.getMonth()) {\r\n        enrStdCount += item.enrStdCount;\r\n        reviewCount += item.reviewCount;\r\n        oneStar += item.oneStar;\r\n        twoStar += item.twoStar;\r\n        threeStar += item.threeStar;\r\n        fourStar += item.fourStar;\r\n        fiveStar += item.fiveStar;\r\n      }\r\n    });\r\n    console.log(\"format\", format(date));\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      enrStdCount: enrStdCount,\r\n      reviewCount: reviewCount,\r\n      oneStar: oneStar,\r\n      twoStar: twoStar,\r\n      threeStar: threeStar,\r\n      fourStar: fourStar,\r\n      fiveStar: fiveStar,\r\n    });\r\n  }\r\n  console.log(month + \" days\", array);\r\n  return array;\r\n}\r\n\r\nexport function OverviewBarChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[0]);\r\n  const [courseArray, setCourseArray] = useState<ICourse[]>([]);\r\n  const [selectedCourse, setSelectedCourse] = useState<ICourse>({\r\n    id: 0,\r\n    title: \"--Select--\",\r\n  });\r\n  const [dataSource, setDataSource] = useState<ISource[]>([]);\r\n  const [temp, setTemp] = useState<ISource[]>([]);\r\n  useEffect(() => {\r\n    loadCourseName();\r\n  }, []);\r\n  async function loadCourseName() {\r\n    await TeacherService.getCreateCourse().then((response) => {\r\n      console.log(\"create course fetched\", response.data);\r\n      let array = response.data.map((item) => ({\r\n        id: item.id,\r\n        title: item.title,\r\n        image: item.coverContent,\r\n      }));\r\n      setCourseArray(array);\r\n      handleCourseChange(array[0]);\r\n    });\r\n  }\r\n  async function handleCourseChange(course) {\r\n    await setSelectedCourse(course);\r\n    await axios\r\n      .get(GLOBAL.HOST + `/get-course-overview/${course.id}`, authHeaders())\r\n      .then((response) => {\r\n        console.log(\"overview fetch for course \" + course.title, response.data);\r\n        let source = response.data.overviewContents.map((item) => ({\r\n          ...item,\r\n          date: new Date(item.date),\r\n        }));\r\n        setDataSource(source);\r\n        handleViewTypeChange(source, viewTypeArray[0]);\r\n      });\r\n  }\r\n  function handleViewTypeChange(source: ISource[], type) {\r\n    console.log(type);\r\n    setViewType(type);\r\n    switch (type) {\r\n      case viewTypeArray[0]:\r\n        setTemp(generateArrayByDay(source, 7, convertToDay));\r\n        break;\r\n      case viewTypeArray[1]:\r\n        setTemp(generateArrayByDay(source, 30, convertToDate));\r\n        break;\r\n      case viewTypeArray[2]:\r\n        setTemp(generateArrayByMonth(source, 12, convertToMonth));\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Overview\" dataSource={temp}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"stackedBar\" />\r\n          <Series\r\n            valueField=\"enrStdCount\"\r\n            name=\"Enrolled Student\"\r\n            stack=\"Enrolled Student\"\r\n          />\r\n          <Series valueField=\"reviewCount\" name=\"Review\" stack=\"Review\" />\r\n          <Series valueField=\"oneStar\" name=\"1 star\" stack=\"Rating\" />\r\n          <Series valueField=\"twoStar\" name=\"2 star\" stack=\"Rating\" />\r\n          <Series valueField=\"threeStar\" name=\"3 star\" stack=\"Rating\" />\r\n          <Series valueField=\"fourStar\" name=\"4 star\" stack=\"Rating\" />\r\n          <Series valueField=\"fiveStar\" name=\"5 star\" stack=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Student number\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ArgumentAxis\r\n          // defaultVisualRange={{ startValue: 300, endValue: 500 }}\r\n          />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container direction=\"row\" justifyContent=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <Select\r\n              value={viewType}\r\n              onChange={(event) =>\r\n                handleViewTypeChange(dataSource, event.target.value as string)\r\n              }\r\n              variant=\"outlined\"\r\n            >\r\n              {viewTypeArray.map((item) => (\r\n                <MenuItem\r\n                  key={item}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  {item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Select\r\n              value={selectedCourse}\r\n              onChange={(event) => handleCourseChange(event.target.value)}\r\n              variant=\"outlined\"\r\n            >\r\n              {courseArray.map((item) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  // @ts-ignore\r\n                  value={item}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    spacing={1}\r\n                    justifyContent=\"flex-start\"\r\n                  >\r\n                    <Grid item>\r\n                      <img src={item.image} style={{ width: 40, height: 25 }} />\r\n                    </Grid>\r\n                    <Grid item>{item.title}</Grid>\r\n                  </Grid>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\PopularityPieChart.tsx",["710"],"import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport { Series } from \"devextreme-react/chart\";\r\nimport PieChart, {\r\n  Connector,\r\n  Export,\r\n  Font,\r\n  Label,\r\n  Legend,\r\n  Tooltip,\r\n} from \"devextreme-react/pie-chart\";\r\nimport Popover from \"devextreme-react/popover\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport function CoursePopularityPieChart() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-course-popularity-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            title: item.courseName,\r\n            rating: item.rating,\r\n            ratingCount: item.ratingCount,\r\n            enrolledStudentCount: item.enrolledStudentCount,\r\n            reviewCount: item.reviewCount,\r\n            value:\r\n              item.rating * 40 +\r\n              item.ratingCount * 10 +\r\n              item.enrolledStudentCount * 30 +\r\n              item.reviewCount * 20,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  function customizeTooltip(arg) {\r\n    const data = arg.point.data;\r\n    console.log(arg);\r\n    return (\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{data.title}</Typography>\r\n        <Typography variant=\"body2\">{`Rating: ${data.rating} (${data.ratingCount})`}</Typography>\r\n        <Typography variant=\"body2\">Review: {data.reviewCount}</Typography>\r\n        <Typography variant=\"body2\">\r\n          Enrolled Student: {data.enrolledStudentCount}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <PieChart\r\n          type=\"doughnut\"\r\n          palette=\"Bright\"\r\n          dataSource={dataSource}\r\n          title=\"Popularity\"\r\n        >\r\n          <Legend\r\n            orientation=\"horizontal\"\r\n            itemTextPosition=\"right\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          />\r\n          <Export enabled={true} />\r\n          <Series argumentField=\"title\" valueField=\"value\">\r\n            <Label\r\n              visible={true}\r\n              position=\"columns\"\r\n              customizeText={(arg) => `${arg.percentText}`}\r\n            >\r\n              <Font size={10} />\r\n              <Connector visible={true} width={0.5} />\r\n            </Label>\r\n          </Series>\r\n          <Tooltip enabled={true} contentRender={customizeTooltip} />\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CountryService.js",["711"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\n\r\nclass CountryService {\r\n\r\n    getAllCountries() {\r\n        return axios.get(GLOBAL.HOST + '/get-countries')\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-country/${id}`, authHeaders())\r\n    }\r\n\r\n\r\n    updateCountry(country) {\r\n        return axios.put(GLOBAL.HOST + '/update-country', country, authHeaders())\r\n    }\r\n\r\n    addCountry(country) {\r\n        return axios.post(GLOBAL.HOST + '/add-country', country, authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new CountryService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\RatingLIneChart.tsx",["712"],"import { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\nimport {\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface ISource {\r\n  state: string;\r\n  rating: number;\r\n}\r\nexport function RatingLineChart() {\r\n  // const dataSource: Array<ISource> = [];\r\n  // function generateRandomData() {\r\n  //   let n = 30;\r\n  //   for (let i = 0; i < n; i++) {\r\n  //     let data;\r\n  //     let date = new Date().setDate(new Date().getDate() - (n - 1 - i));\r\n  //     data = new Date(date).toLocaleString(\"default\", {\r\n  //       day: \"numeric\",\r\n  //       month: \"long\",\r\n  //     });\r\n  //     console.log(data);\r\n  //     dataSource.push({\r\n  //       state: data,\r\n  //       rating: Math.random() * 5,\r\n  //     });\r\n  //   }\r\n  // }\r\n  // generateRandomData();\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-cumulative-rating-teacher\", authHeaders())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setDataSource(\r\n          response.data.map((item) => ({\r\n            date: new Date(item.date).toLocaleString(\"default\", {\r\n              day: \"numeric\",\r\n              month: \"long\",\r\n            }),\r\n            rating: item.rating,\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n  console.log(dataSource);\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Rating\" dataSource={dataSource}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"spline\" />\r\n          <Series valueField=\"rating\" name=\"Rating\" />\r\n          <ValueAxis>\r\n            <Title text=\"Rating\" />\r\n          </ValueAxis>\r\n          <Legend visible={false} />\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\teacher\\IncomePerCourseChart.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\DesignationService.js",["713"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass DesignationService {\r\n\r\n    getAllDesignation() {\r\n        return axios.get(GLOBAL.HOST + '/get-designations')\r\n    }\r\n\r\n    deleteDesignation(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-designation/${id}`,authHeaders())\r\n    }\r\n\r\n\r\n    updateDesignation(designation) {\r\n        return axios.put(GLOBAL.HOST + '/update-designation', designation,authHeaders())\r\n    }\r\n\r\n    addDesignation(designation) {\r\n        return axios.post(GLOBAL.HOST + '/add-designation', designation,authHeaders())\r\n    }\r\n\r\n}\r\n\r\nexport default new DesignationService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CategoryService.js",["714"],"import axios from \"axios\"\r\nimport { authHeaders } from \"components/auth/api/AuthService\"\r\nimport { GLOBAL } from 'Configure.js'\r\n\r\n\r\nclass CategoryService {\r\n    getCategories() {\r\n        return axios.get(GLOBAL.HOST + '/public/get-categories')\r\n    }\r\n    deleteCategory(id) {\r\n        return axios.delete(GLOBAL.HOST + `/delete-category/${id}`)\r\n    }\r\n    updateCategory(category) {\r\n        return axios.put(GLOBAL.HOST + '/update-category', category)\r\n    }\r\n    addCategory(category) {\r\n        return axios.post(GLOBAL.HOST + '/add-category', category);\r\n    }\r\n}\r\n\r\nexport default new CategoryService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\ImageCarousel.js",["715"],"import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst images = [\r\n  require('assets/banner/Banner-1.jpg'),\r\n  require('assets/banner/Banner-2.jpg'),\r\n  require('assets/banner/Banner-3.jpg'),\r\n  require('assets/banner/Banner-4.jpg'),\r\n]\r\n\r\n\r\nexport default function ImageSlider(props) {\r\n\r\n  return (\r\n    <Carousel\r\n      animation=\"slide\"\r\n      fullHeightHover={true}\r\n      stopAutoPlayOnHover={false}\r\n      timeout={500}\r\n      navButtonsProps={{\r\n        style: {\r\n          width: 20,\r\n          height: 120,\r\n          backgroundColor: 'cornflowerblue',\r\n          borderRadius: 5\r\n        }\r\n      }}\r\n      NextIcon={<ArrowForwardIosIcon />}\r\n      PrevIcon={<ArrowBackIosIcon style={{ marginLeft: 12 }} />}\r\n    >\r\n      {\r\n        images.map((src, i) => <Image key={i} src={src.default} />)\r\n      }\r\n    </Carousel >\r\n  )\r\n}\r\n\r\nfunction Image(props) {\r\n  return (\r\n    // <Grid container style={{ padding: \"0px 40px\" }}>\r\n    <img width=\"100%\" {...props} />\r\n    // </Grid>\r\n  )\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\layout\\DrawerLayout.tsx",["716","717","718","719"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\charts\\UserRegistrationChart.tsx",["720","721","722","723"],"import { Card, CardContent, Grid, MenuItem, Select } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport {\r\n  Border,\r\n  Chart,\r\n  CommonSeriesSettings,\r\n  Export,\r\n  Legend,\r\n  ScrollBar,\r\n  Series,\r\n  Title,\r\n  Tooltip,\r\n  ValueAxis,\r\n  ZoomAndPan,\r\n} from \"devextreme-react/chart\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface ISource {\r\n  date: Date | string;\r\n  teacher: number;\r\n  student: number;\r\n}\r\nconst viewTypeArray = [\"Last 7 days\", \"Last 30 days\", \"Last 1 year\"];\r\n\r\nfunction convertToDay(date: Date) {\r\n  return date.toLocaleString(\"default\", { weekday: \"short\" });\r\n}\r\nfunction convertToDate(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n}\r\nfunction convertToMonth(date: Date) {\r\n  return date.toLocaleString(\"default\", {\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n\r\nfunction generateArrayByDay(\r\n  source: ISource[],\r\n  day: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < day; i++) {\r\n    let date = new Date(\r\n      new Date().setDate(new Date().getDate() - (day - 1 - i))\r\n    );\r\n    date.setHours(0, 0, 0, 0);\r\n    let data = source.filter(\r\n      (item) => (item.date as Date).getTime() == date.getTime()\r\n    );\r\n    console.log(source[0].date, new Date(source[0].date), date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      student: data.length ? data[0].student : 0,\r\n      teacher: data.length ? data[0].teacher : 0,\r\n    });\r\n  }\r\n  console.log(day + \" days\", array);\r\n  return array;\r\n}\r\nfunction generateArrayByMonth(\r\n  source: ISource[],\r\n  month: number,\r\n  format: (item: Date) => string\r\n) {\r\n  let array: ISource[] = [];\r\n  for (let i = 0; i < month; i++) {\r\n    let date = new Date(\r\n      new Date().setMonth(new Date().getMonth() - (month - 1 - i))\r\n    );\r\n    console.log(date);\r\n    date.setHours(0, 0, 0, 0);\r\n    let studentCount: number = 0;\r\n    let teacherCount: number = 0;\r\n    let data = source.map((item) => {\r\n      if ((item.date as Date).getMonth() == date.getMonth()) {\r\n        studentCount += item.student;\r\n        teacherCount += item.teacher;\r\n      }\r\n    });\r\n    console.log(date, data);\r\n    array.push({\r\n      date: format(date), //new Date(date).toLocaleString(\"default\", { weekday: \"short\" }),\r\n      student: studentCount,\r\n      teacher: teacherCount,\r\n    });\r\n  }\r\n  console.log(month + \" days\", array);\r\n  return array;\r\n}\r\n\r\nexport function UserRegistrationChart() {\r\n  const [viewType, setViewType] = useState(viewTypeArray[2]);\r\n  const [dataSource, setDataSource] = useState<ISource[]>([]);\r\n  const [temp, setTemp] = useState<ISource[]>();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-new-user-count\", authHeaders())\r\n      .then((response) => {\r\n        console.log(\"new user count chart\", response.data);\r\n        let array = response.data.map((item) => ({\r\n          student: item.studentCount,\r\n          teacher: item.teacherCount,\r\n          date: new Date(new Date(item.date).setHours(0, 0, 0, 0)),\r\n        }));\r\n        setDataSource(array);\r\n        handleViewTypeChange(array, viewType);\r\n      });\r\n  }, []);\r\n\r\n  function handleViewTypeChange(source, type) {\r\n    setViewType(type);\r\n    switch (type) {\r\n      case viewTypeArray[0]:\r\n        setTemp(generateArrayByDay(source, 7, convertToDay));\r\n        break;\r\n      case viewTypeArray[1]:\r\n        setTemp(generateArrayByDay(source, 30, convertToDate));\r\n        break;\r\n      case viewTypeArray[2]:\r\n        setTemp(generateArrayByMonth(source, 12, convertToMonth));\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ textAlign: \"center\" }}>\r\n        <Chart title=\"Teacher and Student Registration\" dataSource={temp}>\r\n          <CommonSeriesSettings argumentField=\"date\" type=\"stackedBar\" />\r\n          <Series valueField=\"teacher\" name=\"Teacher\" stack=\"Teacher\" />\r\n          <Series valueField=\"student\" name=\"Student\" stack=\"Student\" />\r\n          <ValueAxis>\r\n            <Title text=\"Count\" />\r\n          </ValueAxis>\r\n          <Legend\r\n            position=\"outside\"\r\n            horizontalAlignment=\"center\"\r\n            verticalAlignment=\"bottom\"\r\n          >\r\n            <Border visible={true} />\r\n          </Legend>\r\n          <Export enabled={true} />\r\n          <Tooltip enabled={true} />\r\n          <ScrollBar visible={true} position=\"bottom\" />\r\n          <ZoomAndPan argumentAxis=\"both\" />\r\n        </Chart>\r\n        <Grid container justifyContent=\"center\">\r\n          <Select\r\n            value={viewType}\r\n            onChange={(event) =>\r\n              handleViewTypeChange(dataSource, event.target.value as string)\r\n            }\r\n            variant=\"outlined\"\r\n          >\r\n            {viewTypeArray.map((item) => (\r\n              <MenuItem\r\n                key={item}\r\n                // @ts-ignore\r\n                value={item}\r\n              >\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\CoursePrice.tsx",["724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"import {\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport function CoursePrice({ course, onCourseAttrChange, onSave, onCancel }) {\r\n  const [offerShow, setOfferShow] = useState(false);\r\n  const [offerValue, setOfferValue] = useState(course.off ? course.off : 0);\r\n  const [mainPrice, setMainPrice] = useState(\r\n    course.mainPrice ? course.mainPrice : 0\r\n  );\r\n  useEffect(() => {\r\n    if (course.off) setOfferShow(true);\r\n  }, [course.off]);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item container>\r\n        <Card style={{ width: \"100%\" }}>\r\n          <CardContent>\r\n            <Grid container direction=\"column\">\r\n              <TextField\r\n                label=\"Course price\"\r\n                variant=\"outlined\"\r\n                value={mainPrice}\r\n                margin=\"normal\"\r\n                type=\"number\"\r\n                inputProps={{ min: 0 }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">৳</InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(event) => {\r\n                  if (\r\n                    (parseFloat(event.target.value) >= 0 &&\r\n                      event.target.value != \"-\") ||\r\n                    event.target.value == \"\"\r\n                  ) {\r\n                    setMainPrice(event.target.value);\r\n                  }\r\n                }}\r\n                onBlur={(event) =>\r\n                  onCourseAttrChange({ mainPrice: Number(event.target.value) })\r\n                }\r\n                helperText=\"If you want to give this course as free, set price to 0\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={offerShow}\r\n                    onChange={(event) => {\r\n                      if (!offerShow) onCourseAttrChange({ off: 0 });\r\n                      setOfferShow(!offerShow);\r\n                    }}\r\n                  />\r\n                }\r\n                label=\"Do you want to give offer?\"\r\n              />\r\n              {offerShow && (\r\n                <>\r\n                  <TextField\r\n                    label=\"Set an offer in percentage\"\r\n                    variant=\"outlined\"\r\n                    value={offerValue}\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    inputProps={{\r\n                      min: 0,\r\n                      max: 100,\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: \"%\",\r\n                    }}\r\n                    onChange={(event) => {\r\n                      if (\r\n                        (parseFloat(event.target.value) >= 0 &&\r\n                          parseFloat(event.target.value) <= 100 &&\r\n                          event.target.value != \"-\") ||\r\n                        event.target.value == \"\"\r\n                      ) {\r\n                        setOfferValue(event.target.value);\r\n                      }\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    label=\"Price will show to student\"\r\n                    contentEditable={false}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    type={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"text\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? \"number\"\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? \"number\"\r\n                        : \"text\"\r\n                    }\r\n                    value={\r\n                      mainPrice == \"0\" || mainPrice == \"\" || offerValue == 100\r\n                        ? \"FREE\"\r\n                        : mainPrice != \"\" && offerValue != \"\"\r\n                        ? mainPrice - (mainPrice * offerValue) / 100\r\n                        : mainPrice != 0 && offerValue == \"\"\r\n                        ? mainPrice\r\n                        : \"FREE\"\r\n                    }\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">৳</InputAdornment>\r\n                      ),\r\n                      readOnly: true,\r\n                    }}\r\n                    onBlur={(event) =>\r\n                      onCourseAttrChange({ off: Number(event.target.value) })\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item container direction=\"row\" justifyContent=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onSave}>\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignUp.tsx",["742","743","744","745","746","747"],"import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Link from '@material-ui/core/Link';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Person } from \"../../classes/Person\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   height: \"100vh\",\r\n  // },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1, 0),\r\n    // minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport function SignUp({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  let person: Person;\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n  const [usernameFound, setUsernameFound] = useState(false);\r\n  const [emailFound, setEmailFound] = useState(false);\r\n\r\n  function isValidPassword() {\r\n    return password == againPassword && password != \"\";\r\n  }\r\n\r\n  function checkUsername(username: string) {\r\n    AuthService.existByUsername(username).then((response) => {\r\n      setUsernameFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function checkEmail(email: string) {\r\n    AuthService.existByEmail(email).then((response) => {\r\n      setEmailFound(response.data.boolValue);\r\n    });\r\n  }\r\n  function handleSubmitClicked() {\r\n    checkUsername(username);\r\n    checkEmail(email);\r\n    if (isValidPassword() && !usernameFound && !emailFound) {\r\n      let person: Person = new Person(email, username, password);\r\n      person.accountType = status;\r\n      history.push({\r\n        pathname:\r\n          history.location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n          \"/profile-details\",\r\n        state: { person: person, registered: false },\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        \r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              onSubmit={handleSubmitClicked}\r\n              autoComplete=\"off\"\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item container>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                    required\r\n                  >\r\n                    <InputLabel>Your Status</InputLabel>\r\n                    <Select\r\n                      label=\"Your Status\"\r\n                      variant=\"outlined\"\r\n                      value={status}\r\n                      onChange={(event) =>\r\n                        setStatus(event.target.value as string)\r\n                      }\r\n                    >\r\n                      <MenuItem key=\"Student\" value={\"Student\"}>\r\n                        Student\r\n                      </MenuItem>\r\n                      <MenuItem key=\"Teacher\" value={\"Teacher\"}>\r\n                        Teacher\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    error={usernameFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    onBlur={(event) => {\r\n                      checkUsername(event.target.value);\r\n                    }}\r\n                    onFocus={(event) => setUsernameFound(false)}\r\n                    onChange={(event) => {\r\n                      checkUsername(event.target.value);\r\n                      setUsername(event.target.value);\r\n                    }}\r\n                    helperText={usernameFound ? \"Username already exist\" : \"\"}\r\n                    pattern=\"letters-digits\"\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={emailFound}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    onBlur={(event) => {\r\n                      checkEmail(event.target.value);\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    onFocus={(event) => setEmailFound(false)}\r\n                    onChange={(event) => {\r\n                      checkEmail(event.target.value);\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                    helperText={emailFound ? \"E-mail already exist\" : \"\"}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item container>\r\n                  <TextField\r\n                    error={againPassword != \"\" && password !== againPassword}\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Password (Again)\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setAgainPassword(event.target.value)}\r\n                    helperText={\r\n                      password !== againPassword ? \"Password mismatch\" : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                type=\"submit\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justifyContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      location.pathname.split(\"/\").slice(0, -1).join(\"/\") +\r\n                      \"/signin\"\r\n                    }\r\n                  >\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\TargetStudent.tsx",["748","749","750"],"import { Grid } from \"@material-ui/core\";\r\nimport { Course, Property } from \"classes/Course\";\r\nimport React from \"react\";\r\nimport { AddAbleTextField } from \"./AddAbleTextField\";\r\n\r\nexport function TargetStudent({\r\n  course,\r\n  onCourseAttrChange,\r\n}: {\r\n  course: Course;\r\n  onCourseAttrChange: any;\r\n}) {\r\n  if (course.outcomes == undefined) {\r\n    course = { ...course, outcomes: [\"\"] };\r\n  }\r\n  if (course.prerequisites == undefined) {\r\n    course = { ...course, prerequisites: [\"\"] };\r\n  }\r\n  if (course.properties == undefined) {\r\n    course = { ...course, properties: [new Property()] };\r\n  }\r\n  console.log(course);\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"What will students learn in your course?\"\r\n          objects={course.outcomes}\r\n          onObjectsChange={(outcomes) =>\r\n            onCourseAttrChange({ outcomes: outcomes })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Are there any course requirements or prerequisites?\"\r\n          objects={course.prerequisites}\r\n          onObjectsChange={(prerequisite) =>\r\n            onCourseAttrChange({ prerequisites: prerequisite })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <AddAbleTextField\r\n          header=\"Write down the properties in brief with attractive icons\"\r\n          showIconPicker\r\n          objects={course.properties}\r\n          onObjectsChange={(properties) =>\r\n            onCourseAttrChange({ properties: properties })\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\SignIn.tsx",["751","752","753"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    //https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg\r\n    backgroundImage: \"url()\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function SignIn({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    console.log(username);\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (password == \"\") {\r\n      setMessage(\"password is empty\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    AuthService.signIn(username, password).then((response) => {\r\n      if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpen(true);\r\n        console.log(\"don't match\");\r\n      } else if (response.data.token) {\r\n        console.log(username);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(AuthService.getCurrentUser());\r\n        history.push({ pathname: \"/home\" });\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <Grid component={Paper} elevation={6} square>\r\n      {signOut && (\r\n        <>\r\n          <Snackbar\r\n            open={open}\r\n            onClose={handleSnackbarClose}\r\n            autoHideDuration={2000}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={handleSubmitClick}\r\n            >\r\n              <ControlledTextfield\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n                onBlur={(event) => {\r\n                  setUsername(event.target.value);\r\n                }}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                pattern=\"letters-digits-no-space\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"password\"\r\n                onBlur={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/forgot-password\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\ForgotPassword.tsx",["754","755","756","757","758","759"],"import { Snackbar } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ControlledTextfield } from \"tools/customDesign/ControlledTextfield\";\r\nimport { Alert } from \"tools/Tools\";\r\nimport AuthService from \"./api/AuthService\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage:\r\n      \"url(https://st4.depositphotos.com/21087722/22869/i/1600/depositphotos_228693110-stock-photo-amazing-succulents-welcome-handwriting-monogram.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport function ForgotPassword({ signOut }: { signOut: boolean }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [dob, setDob] = useState<Date | null>(null);\r\n  const [accept, setAccept] = useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [againPassword, setAgainPassword] = useState(\"\");\r\n\r\n  function handleRequestClick(event) {\r\n    event.preventDefault();\r\n    if (username == \"\") {\r\n      setMessage(\"Username is empty !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    if (dob == null) {\r\n      setMessage(\"Please set a date of birth\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    AuthService.requestChangePassword(username, dob as Date).then(\r\n      (response) => {\r\n        console.log(response);\r\n        if (response.data.stringValue) {\r\n          setMessage(response.data.stringValue);\r\n          setOpenSnackbar(true);\r\n        } else if (response.data.boolValue == true) {\r\n          setSuccessMessage(\r\n            \"Your request accepted. \\nPlease set a new password\"\r\n          );\r\n          setOpenSuccess(true);\r\n          setAccept(true);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  function handleSubmitClick(event) {\r\n    event.preventDefault();\r\n    if (password != againPassword) {\r\n      setMessage(\"Password doesn't match !!\");\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    AuthService.changePassword(username, password).then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.token));\r\n        history.push({ pathname: \"/home\" });\r\n      } else if (response.data.stringValue) {\r\n        setMessage(response.data.stringValue);\r\n        setOpenSnackbar(true);\r\n      }\r\n    });\r\n  }\r\n  function handleSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n    setOpenSuccess(false);\r\n  }\r\n  return (\r\n    <>\r\n      {signOut && (\r\n        <>\r\n          <div className={classes.paper}>\r\n            <Snackbar\r\n              open={openSnackbar}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n                {message}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={openSuccess}\r\n              onClose={handleSnackbarClose}\r\n              autoHideDuration={2000}\r\n            >\r\n              <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n                {successMessage}\r\n              </Alert>\r\n            </Snackbar>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Password Recovery\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={accept ? handleSubmitClick : handleRequestClick}\r\n            >\r\n              <Grid container>\r\n                <Grid item container>\r\n                  <ControlledTextfield\r\n                    disabled={accept}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    pattern=\"letters-digits-no-space\"\r\n                  />\r\n                </Grid>\r\n                {!accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <KeyboardDatePicker\r\n                        // disableToolbar\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        variant=\"dialog\"\r\n                        format=\"dd/MMM/yyyy\"\r\n                        label=\"Date of Birth\"\r\n                        inputVariant=\"outlined\"\r\n                        value={dob}\r\n                        onChange={(date) => {\r\n                          setDob(date as Date);\r\n                        }}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\",\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Request to change password\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                {accept && (\r\n                  <>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"New Password (Again)\"\r\n                        autoComplete=\"email\"\r\n                        error={password != againPassword}\r\n                        onChange={(event) =>\r\n                          setAgainPassword(event.target.value)\r\n                        }\r\n                        helperText={\r\n                          password != againPassword\r\n                            ? \"Password mismatch!!!\"\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item container>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                      >\r\n                        Submit and Sign In\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid container direction=\"column\" alignContent=\"center\">\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signin\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Already have an account? Sign In\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to={\r\n                      history.location.pathname\r\n                        .split(\"/\")\r\n                        .slice(0, -1)\r\n                        .join(\"/\") + \"/signup\"\r\n                    }\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\createCourse\\AddAbleTextField.tsx",["760"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AddCircle, DeleteForever } from \"@material-ui/icons\";\r\nimport { Property } from \"classes/Course\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { IconPicker } from \"react-fa-icon-picker\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nfunction onEnterPressFocusNext(e) {\r\n  if (e.key === \"Enter\") {\r\n    const inputs = Array.from(\r\n      // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n      e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n        \"input\"\r\n      ) ?? []\r\n    ).filter(\r\n      (e) =>\r\n        //@ts-ignore\r\n        !e.disabled\r\n    );\r\n    const current = Array.from(e.currentTarget.querySelectorAll(\"input\") ?? []);\r\n    //@ts-ignore\r\n    const index = inputs.indexOf(current[0]);\r\n    //@ts-ignore\r\n    inputs[index + 1]?.focus();\r\n    e.preventDefault();\r\n  }\r\n}\r\n\r\nexport function AddAbleTextField({\r\n  onObjectsChange = (data) => console.log(data),\r\n  header = \"\",\r\n  showIconPicker = false,\r\n  objects,\r\n  // objects = [{ id: 0, value: \"\", icon: showIconPicker ? \"FaIcons\" : \"\" }],\r\n}) {\r\n  const onKeyPress: React.KeyboardEventHandler<HTMLInputElement> = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        const inputs = Array.from(\r\n          // Get table or tbody whatever that contains all inputs. The number of parentElements depends on the structure of your html\r\n          e.currentTarget?.parentElement?.parentElement?.parentElement?.querySelectorAll(\r\n            \"input\"\r\n          ) ?? []\r\n        ).filter((e) => !e.disabled);\r\n        const current = Array.from(\r\n          e.currentTarget.querySelectorAll(\"input\") ?? []\r\n        );\r\n        const index = inputs.indexOf(current[0]);\r\n        inputs[index + 1]?.focus();\r\n        e.preventDefault();\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const [data, setData] = useState(\r\n    showIconPicker\r\n      ? objects\r\n      : objects.map((value, idx) => ({ id: idx, text: value }))\r\n  );\r\n\r\n  function onDataChange(newData) {\r\n    setData(newData);\r\n    onObjectsChange(\r\n      showIconPicker\r\n        ? newData.map((item, idx) => ({\r\n            id: item.id,\r\n            icon: item.icon,\r\n            text: item.text,\r\n            position: idx,\r\n          }))\r\n        : newData.map((item) => item.text)\r\n    );\r\n  }\r\n  function onTextFieldChange(index, text) {\r\n    let newArray = [...data];\r\n    newArray[index] = { ...data[index], text: text };\r\n    onDataChange(newArray);\r\n  }\r\n  function addTextField() {\r\n    let newArray = [...data];\r\n    newArray.push(showIconPicker ? new Property() : { id: 100, text: \"\" });\r\n    onDataChange(newArray);\r\n  }\r\n  function onDelete(index) {\r\n    let newArray = [...data];\r\n    newArray.splice(index, 1);\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  // function upArrowClick(index) {\r\n  //   if (index === 0) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index - 1];\r\n  //   array[index - 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  // function downArrowClick(index) {\r\n  //   if (index === data.length - 1) return;\r\n  //   let array = data.splice(0);\r\n  //   let obj = array[index];\r\n  //   array[index] = array[index + 1];\r\n  //   array[index + 1] = obj;\r\n  //   onDataChange(array);\r\n  // }\r\n  function onIconValueChange(index, iconName) {\r\n    let newArray = [...data];\r\n    newArray[index].icon.content = iconName;\r\n    onDataChange(newArray);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\", overflow: \"visible\" }}>\r\n      <CardContent>\r\n        <Grid container>\r\n          {header !== \"\" && (\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {header}\r\n            </Typography>\r\n          )}\r\n          <ReactSortable\r\n            list={data}\r\n            setList={onDataChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            {data.map((item, index) => (\r\n              <TextField\r\n                key={index}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                onChange={(event) =>\r\n                  onTextFieldChange(index, event.target.value)\r\n                }\r\n                value={item.text}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: showIconPicker && (\r\n                    <IconButton>\r\n                      <IconPicker\r\n                        containerStyles={{\r\n                          right: \"160%\",\r\n                          top: \"-33.33%\",\r\n                          width: \"201px\",\r\n                        }}\r\n                        value={item.icon.content}\r\n                        onChange={(icon) => onIconValueChange(index, icon)}\r\n                      />\r\n                    </IconButton>\r\n                  ),\r\n                  endAdornment: (\r\n                    <>\r\n                      <IconButton onClick={(event) => onDelete(index)}>\r\n                        <DeleteForever />\r\n                      </IconButton>\r\n                    </>\r\n                  ),\r\n                }}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            ))}\r\n          </ReactSortable>\r\n          <Grid item container justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(event) => addTextField()}\r\n              startIcon={<AddCircle />}\r\n            >\r\n              Add More\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\auth\\api\\AuthService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\Alert.tsx",["761","762"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\PersonService.tsx",["763"],"import axios from \"axios\";\r\nimport { Person } from \"classes/Person\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass PersonService {\r\n  getPerson(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/get-person`, authHeaders());\r\n  }\r\n  getPersonSelf() {\r\n    return axios.get(GLOBAL.HOST + \"/get-person-self\", authHeaders());\r\n  }\r\n  getDesignation() {\r\n    return axios.get(GLOBAL.HOST + \"/get-designation-self\", authHeaders());\r\n  }\r\n  getEduStatus() {\r\n    return axios.get(GLOBAL.HOST + \"/get-edustatus-self\", authHeaders());\r\n  }\r\n  updateStudent(person: Person, statusId: number) {\r\n    return axios.put(\r\n      GLOBAL.HOST + `/update-student/${statusId}`,\r\n      person,\r\n      authHeaders()\r\n    );\r\n  }\r\n  updateTeacher(person: Person, statusId: number) {\r\n    return axios.put(\r\n      GLOBAL.HOST + `/update-teacher/${statusId}`,\r\n      person,\r\n      authHeaders()\r\n    );\r\n  }\r\n  changePassword(oldPassword: string, newPassword: string) {\r\n    let formData = new FormData();\r\n    formData.append(\"oldPassword\", oldPassword);\r\n    formData.append(\"newPassword\", newPassword);\r\n    return axios.put(GLOBAL.HOST + \"/change-password\", formData, authHeaders());\r\n  }\r\n  getPersonToShow(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-person-by-username/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getCreditCardDetails() {\r\n    return axios.get(GLOBAL.HOST + `/get-credit-card`, authHeaders());\r\n  }\r\n  // getProfilePhoto() {\r\n  //   return axios.get(GLOBAL.HOST + \"/get-profile-photo\", authHeaders());\r\n  // }\r\n}\r\nexport default new PersonService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ControlledTextfield.tsx",["764","765","766","767","768","769","770"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\CourseApprovalComponent.js",["771","772","773","774","775","776","777","778","779"],"import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport CourseApprovalService from '../AdminPanel/api/CourseApprovalService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction CourseApproval(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    { title: 'Title', field: 'title', editable: false },\r\n    { title: 'Teacher Username', field: 'teacherId', editable: false },\r\n    { title: 'Publish Date', field: 'publishDate', editable: false }\r\n  ])\r\n\r\n  const [data1, setData1] = useState([])\r\n  const [data2, setData2] = useState([])\r\n\r\n  function getUnapprovedCourses() {\r\n    CourseApprovalService.getUnapprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData1(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n  function getApprovedCourses() {\r\n    CourseApprovalService.getApprovedCourses()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData2(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getApprovedCourses()\r\n    getUnapprovedCourses()\r\n    return () => {\r\n      setData1(null);\r\n      setData2(null);\r\n    }\r\n  }, []);\r\n\r\n  function insertIntoApproveList(data) {\r\n    setData2([data, ...data2]);\r\n  }\r\n  function insertIntoUnapproveList(data) {\r\n    setData1([data, ...data1]);\r\n  }\r\n  function deleteFromApprove(idx) {\r\n    let dataset = [...data2];\r\n    dataset.splice(idx, 1);\r\n    setData2(dataset);\r\n  }\r\n  function deleteFromUnapprove(idx) {\r\n    let dataset = [...data2];\r\n    dataset.splice(idx, 1);\r\n    setData2(dataset);\r\n  }\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container xs spacing={3}>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Unapproved Courses\"\r\n          data={data1}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            },\r\n            {\r\n              icon: \"checkcircle\",\r\n              tooltip: 'approve course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                CourseApprovalService.approveCourse(rowData.id)\r\n                  .then(response => {\r\n                    getApprovedCourses()\r\n                    getUnapprovedCourses()\r\n                    // deleteFromUnapprove(rowData.tableData.id);\r\n                    // insertIntoApproveList(rowData);\r\n                  }\r\n                  )\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Approved Courses\"\r\n          data={data2}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'visibility',\r\n              tooltip: 'see course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                history.push(`/course/${rowData.id}`)\r\n              }\r\n            },\r\n            {\r\n              icon: 'cancel',\r\n              tooltip: 'unapprove course',\r\n              onClick: (event, rowData) => {\r\n                console.log(rowData)\r\n                CourseApprovalService.unapproveCourse(rowData.id)\r\n                  .then(response => {\r\n                    getApprovedCourses()\r\n                    getUnapprovedCourses()\r\n                  }\r\n                  )\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Grid>\r\n\r\n    </Grid>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CourseApproval","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\TeacherInfoComponent.js",["780"],"import { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction TeacherInfoComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Username', field: 'username', editable: false },\r\n    { title: 'Course Created', field: 'courseCreated', editable: false },\r\n    { title: 'Course purchased', field: 'coursePurchased', editable: false },\r\n    { title: 'Total Income', field: 'totalIncome', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n\r\n  function getTeacherInfo() {\r\n    InfoService.getTeacherInfo()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  useEffect(() => { getTeacherInfo() }, []);\r\n\r\n  return (\r\n    <Grid container>\r\n      {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n      <Grid item container>\r\n        <MaterialTable\r\n          style={{ width: \"100%\" }}\r\n          columns={columns}\r\n          title=\"Teacher Information\"\r\n          data={data}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default TeacherInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\StudentInfoComponent.js",["781"],"\r\nimport { Grid } from '@material-ui/core';\r\nimport MaterialTable from 'material-table';\r\nimport React, { useEffect } from 'react';\r\nimport InfoService from '../AdminPanel/api/InfoService.js';\r\n\r\n\r\nfunction StudentInfoComponent(props) {\r\n    const { useState } = React;\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'Username', field: 'username', editable: false },\r\n        { title: 'Course Owned', field: 'courseOwned', editable: false },\r\n        { title: 'Money Spent', field: 'moneySpent', editable: false }\r\n    ])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    function getStudentInfo() {\r\n        InfoService.getStudentInfo()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                //callData(response.data)          \r\n                setData(response.data);\r\n                //setData(response.data)\r\n            }\r\n            )\r\n    }\r\n\r\n    useEffect(() => { getStudentInfo() }, []);\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      > */}\r\n            <Grid item container>\r\n                <MaterialTable\r\n                    style={{ width: \"100%\" }}\r\n                    columns={columns}\r\n                    title=\"Student Information\"\r\n                    data={data}\r\n                    options={{\r\n                        actionsColumnIndex: -1, addRowPosition: \"first\", pageSize: 10\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default StudentInfoComponent","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\CourseApprovalService.js",["782"],"import axios from \"axios\"\r\nimport { GLOBAL } from 'Configure.js'\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\n\r\nclass CourseApprovalService {\r\n\r\n    getApprovedCourses() {\r\n        return axios.get(GLOBAL.HOST + '/get-approved-courses', authHeaders())\r\n    }\r\n\r\n    getUnapprovedCourses() {\r\n        return axios.get(GLOBAL.HOST + '/get-unapproved-courses', authHeaders())\r\n    }\r\n\r\n    approveCourse(courseId) {\r\n        return axios.post(GLOBAL.HOST + `/approve-course/${courseId}`, {}, authHeaders())\r\n    }\r\n    unapproveCourse(courseId) {\r\n        return axios.post(GLOBAL.HOST + `/unapprove-course/${courseId}`, {}, authHeaders())\r\n    }\r\n\r\n    // deleteCountry(id){\r\n    //     return axios.delete(global.HOST + `/delete-country/${id}`)\r\n    // }\r\n\r\n\r\n    // updateCountry(country) {\r\n    //     return axios.put(global.HOST + '/update-country',country)\r\n    // }\r\n\r\n    // addCountry(country) {\r\n    //     return axios.post(global.HOST + '/add-country',country)\r\n    // }\r\n\r\n}\r\n\r\nexport default new CourseApprovalService()","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\api\\InfoService.js",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\FileUploader.tsx",["783","784"],"import { Grid } from \"@material-ui/core\";\r\nimport {\r\n  AttachFile,\r\n  InsertPhoto,\r\n  PictureAsPdf,\r\n  VideoCall,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  DropzoneAreaBase,\r\n  DropzoneAreaBaseProps,\r\n  FileObject,\r\n} from \"material-ui-dropzone\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface IFileUploader extends DropzoneAreaBaseProps {\r\n  type?: \"video\" | \"pdf\" | \"picture\";\r\n  onChange?: (files: FileObject[]) => void;\r\n}\r\n\r\nexport function FileUploader(props: IFileUploader) {\r\n  const {\r\n    fileObjects,\r\n    filesLimit,\r\n    onChange,\r\n    acceptedFiles,\r\n    Icon,\r\n    type,\r\n    showPreviewsInDropzone,\r\n    ...rest\r\n  } = props;\r\n  const [state, setState] = useState({\r\n    icon: Icon,\r\n    acceptedFiles: acceptedFiles,\r\n    fileObjects: fileObjects,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    switch (type?.toLowerCase()) {\r\n      case \"video\":\r\n        console.log(\"in use effect\");\r\n        setState({\r\n          ...state,\r\n          icon: <VideoCall />,\r\n          acceptedFiles: [\".mp4\", \".3gp\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      case \"pdf\":\r\n        setState({\r\n          ...state,\r\n          icon: <PictureAsPdf />,\r\n          acceptedFiles: [\".pdf\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      case \"picture\":\r\n        setState({\r\n          ...state,\r\n          icon: <InsertPhoto />,\r\n          acceptedFiles: [\".jpg\", \".png\", \".bmp\", \".gif\"],\r\n          fileObjects: fileObjects,\r\n        });\r\n        break;\r\n      default:\r\n        setState({\r\n          ...state,\r\n          icon: <AttachFile />,\r\n          acceptedFiles: [],\r\n          fileObjects: fileObjects,\r\n        });\r\n    }\r\n    return () => abortController.abort();\r\n  }, [type, fileObjects]);\r\n\r\n  function handleChange(files: FileObject[]) {\r\n    if (filesLimit)\r\n      files = files.slice(files.length - filesLimit, files.length);\r\n    setState({ ...state, fileObjects: files });\r\n    if (onChange) onChange(files);\r\n  }\r\n  return (\r\n    <Grid item container>\r\n      <DropzoneAreaBase\r\n        {...rest}\r\n        //@ts-ignore\r\n        Icon={state.Icon}\r\n        classes={{ icon: state.fileObjects ? \"display-none\" : \"\" }}\r\n        filesLimit={filesLimit}\r\n        acceptedFiles={state.acceptedFiles}\r\n        fileObjects={state.fileObjects}\r\n        dropzoneText=\"Drop a file here or click here\"\r\n        maxFileSize={100000000}\r\n        showPreviewsInDropzone={showPreviewsInDropzone}\r\n        // styles={{ position: \"relative\" }}\r\n        onAdd={(newFileObjects) => {\r\n          console.log(\"onAdd\", newFileObjects);\r\n          handleChange(fileObjects.concat(newFileObjects));\r\n        }}\r\n        previewGridProps={{\r\n          container: {\r\n            justifyContent: \"flex-start\",\r\n            spacing: 0,\r\n          },\r\n          item: {},\r\n        }}\r\n        onDelete={(deleteFileObj) => {\r\n          console.log(\"onDelete\", deleteFileObj);\r\n          handleChange(fileObjects.filter((item) => item != deleteFileObj));\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\api\\FileService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NavBar.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUp.js",["785","786","787"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageUploader.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\TextEditor.tsx",["788"],"import { convertToRaw } from \"draft-js\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextEditor({\r\n  value,\r\n  onChange,\r\n  readOnly = false,\r\n}: {\r\n  value?: string;\r\n  onChange?: (value: string) => void;\r\n  readOnly?: boolean;\r\n}) {\r\n  const [content, setContent] = useState(value ? value : \"\");\r\n  const [key, setKey] = useState(100);\r\n  function handleBodyChange(event) {\r\n    const rteContent = convertToRaw(event.getCurrentContent());\r\n    rteContent.blocks[0].text !== \"\" && setContent(JSON.stringify(rteContent));\r\n  }\r\n  return (\r\n    <MUIRichTextEditor\r\n      toolbar={!readOnly}\r\n      key={key}\r\n      label=\"Start typing here...\"\r\n      defaultValue={value}\r\n      onChange={handleBodyChange}\r\n      readOnly={readOnly}\r\n      onBlur={() => {\r\n        console.log(content);\r\n        if (onChange) onChange(content);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\VideoPlayer.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\course\\api\\CourseService.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\TeacherService.tsx",["789"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass TeacherService {\r\n  getPerson(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/get-person`, authHeaders());\r\n  }\r\n  getCreateCourseByUsername(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-created-courses/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getMiniInfo(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-teacher-mini/${username}`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getDesignation(username: string){\r\n    return axios.get(GLOBAL.HOST + `/public/get-teacher-designation/${username}`, authHeaders());\r\n  }\r\n  getCreateCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-created-courses`, authHeaders());\r\n  }\r\n  getEnrolledStudentList() {\r\n    return axios.get(GLOBAL.HOST + `/get-student-list-teacher`, authHeaders());\r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-teacher`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n    return axios.get(GLOBAL.HOST + `/get-review-teacher`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-teacher`,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new TeacherService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\api\\StudentService.tsx",["790"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass StudentService {\r\n  getPurchaseCourse() {\r\n    return axios.get(GLOBAL.HOST + `/get-purchased-courses-self`, authHeaders());\r\n  }\r\n  getPurchaseCourseByUsername(username: string) {\r\n    return axios.get(GLOBAL.HOST + `/public/get-purchased-courses/${username}`, authHeaders());\r\n  \r\n  }\r\n  getFAQList() {\r\n    return axios.get(GLOBAL.HOST + `/get-faq-for-student`, authHeaders());\r\n  }\r\n  getReviewList() {\r\n  return axios.get(GLOBAL.HOST + `/get-review-student`, authHeaders());\r\n  }\r\n  getPurchaseHistory() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/get-purchase-history-student`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getEduStatus(username:  string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-student-edustatus/${username}`\r\n    );\r\n  }\r\n  getStudentMiniInfo(username: string) {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-student-mini/${username}`\r\n    )\r\n  }\r\n}\r\nexport default new StudentService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\Dashboard.tsx",["791","792"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\EnrolledStudentListView.tsx",["793"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\FAQview.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\ReviewListView.tsx",["794"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\person\\dashboard\\PurchaseHistoryLIstView.tsx",["795","796"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\Cards.tsx",["797","798","799","800"],"import { Grid, CardContent, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure\";\r\nimport input from \"postcss/lib/input\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport PopularCategoryChart from \"./charts/PopularCategoryChart\";\r\nimport { PopularCourseAdminChart } from \"./charts/PopurlarCourseAdminChart\";\r\nimport { UserRegistrationChart } from \"./charts/UserRegistrationChart\";\r\n\r\ninterface ShowCard {\r\n  totalVisitor: number;\r\n  newCourse: number;\r\n  totalCourse: number;\r\n  newUser: number;\r\n  totalUser: number;\r\n  todayIncome: number;\r\n  totalIncome: number;\r\n}\r\n\r\nexport function Cards() {\r\n  const [data, setData] = useState<ShowCard>();\r\n  useEffect(() => {\r\n    axios\r\n      .get(GLOBAL.HOST + \"/get-show-card-admin\", authHeaders())\r\n      .then((response) => {\r\n        setData(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Visitors\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalVisitor}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Course\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalCourse}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              New User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.newUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total User\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              {data?.totalUser}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Today Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} md={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              Total Income\r\n            </Typography>\r\n            <Typography align=\"center\" variant=\"h4\">\r\n              ${data?.todayIncome}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\header\\NotificationPopUp.tsx",["801","802","803","804","805"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\SimpleBackdrop.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\search\\api\\SearchService.tsx",["806"],"import axios from \"axios\";\r\nimport { authHeaders as authHeaders } from \"components/auth/api/AuthService\";\r\nimport { GLOBAL } from \"Configure.js\";\r\n\r\nclass SearchService {\r\n  getDataForFilter() {\r\n    return axios.get(\r\n      GLOBAL.HOST + `/public/get-data-for-filter`,\r\n      authHeaders()\r\n    );\r\n  }\r\n  getFilteredCourses(object) {\r\n    return axios.post(\r\n      GLOBAL.HOST + `/public/get-filtered-courses`,\r\n      object,\r\n      authHeaders()\r\n    );\r\n  }\r\n}\r\nexport default new SearchService();\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\components\\AdminPanel\\SliderComponent.tsx",["807"],"import {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  ImageListItemBar,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { Info } from \"@material-ui/icons\";\r\nimport { FileObject } from \"material-ui-dropzone\";\r\nimport React, { useState } from \"react\";\r\n// import { ReactSortable } from \"react-sortablejs\";\r\nimport { FileUploader } from \"tools/FileUploader\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent: \"space-around\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    imageList: {\r\n      width: 500,\r\n      height: 450,\r\n    },\r\n    icon: {\r\n      color: \"rgba(255, 255, 255, 0.54)\",\r\n    },\r\n  })\r\n);\r\ninterface IFileObject extends FileObject {\r\n  id: number;\r\n}\r\nexport default function BasicImageList() {\r\n  const [files, setFiles] = useState<IFileObject[]>([]);\r\n  const [tempFiles, setTempFiles] = useState<FileObject[]>([]);\r\n  const classes = useStyles();\r\n\r\n  function handleUploadClick() {\r\n    setFiles([\r\n      ...files,\r\n      ...tempFiles.map((file, index) => ({ id: index, ...file })),\r\n    ]);\r\n    setTempFiles([]);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList rowHeight={180} className={classes.imageList}>\r\n        <ImageListItem key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </ImageListItem>\r\n        {/* <ReactSortable\r\n          list={files}\r\n          setList={setFiles}\r\n          style={{ width: \"100%\" }}\r\n        > */}\r\n        {files.map((file, index) => (\r\n          <ImageListItem key={index}>\r\n            <img src={URL.createObjectURL(file.file)} />\r\n            <ImageListItemBar\r\n              title={\"Ok\"}\r\n              subtitle={<span>by: {\"kono author nai\"}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${\"file.title\"}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <Info />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n        {/* </ReactSortable> */}\r\n      </ImageList>\r\n      <FileUploader\r\n        fileObjects={tempFiles}\r\n        onChange={setTempFiles}\r\n        filesLimit={10}\r\n        type=\"picture\"\r\n      />\r\n      {tempFiles.length > 0 && (\r\n        <Grid container direction=\"row\" justifyContent=\"center\">\r\n          <Grid item>\r\n            <Button color=\"primary\" onClick={handleUploadClick}>\r\n              Upload\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\SaveButton.tsx",["808"],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ShadowText.tsx",[],"F:\\Project\\Web app\\Course-Bucket\\frontend\\src\\tools\\customDesign\\ImageVeiw.tsx",["809"],{"ruleId":"810","replacedBy":"811"},{"ruleId":"812","replacedBy":"813"},{"ruleId":"814","severity":1,"message":"815","line":9,"column":10,"nodeType":"816","messageId":"817","endLine":9,"endColumn":14},{"ruleId":"814","severity":1,"message":"818","line":10,"column":10,"nodeType":"816","messageId":"817","endLine":10,"endColumn":23},{"ruleId":"810","replacedBy":"811"},{"ruleId":"812","replacedBy":"813"},{"ruleId":"819","severity":1,"message":"820","line":83,"column":5,"nodeType":"821","messageId":"822","endLine":83,"endColumn":20},{"ruleId":"814","severity":1,"message":"823","line":23,"column":10,"nodeType":"816","messageId":"817","endLine":23,"endColumn":17},{"ruleId":"814","severity":1,"message":"824","line":23,"column":19,"nodeType":"816","messageId":"817","endLine":23,"endColumn":29},{"ruleId":"814","severity":1,"message":"825","line":37,"column":10,"nodeType":"816","messageId":"817","endLine":37,"endColumn":14},{"ruleId":"814","severity":1,"message":"826","line":37,"column":16,"nodeType":"816","messageId":"817","endLine":37,"endColumn":23},{"ruleId":"814","severity":1,"message":"827","line":51,"column":6,"nodeType":"816","messageId":"817","endLine":51,"endColumn":12},{"ruleId":"828","severity":1,"message":"829","line":135,"column":6,"nodeType":"830","endLine":135,"endColumn":16,"suggestions":"831"},{"ruleId":"832","severity":1,"message":"833","line":145,"column":27,"nodeType":"834","messageId":"822","endLine":145,"endColumn":29},{"ruleId":"832","severity":1,"message":"833","line":179,"column":43,"nodeType":"834","messageId":"822","endLine":179,"endColumn":45},{"ruleId":"832","severity":1,"message":"833","line":180,"column":40,"nodeType":"834","messageId":"822","endLine":180,"endColumn":42},{"ruleId":"835","severity":1,"message":"836","line":334,"column":23,"nodeType":"837","endLine":334,"endColumn":59},{"ruleId":"828","severity":1,"message":"838","line":132,"column":6,"nodeType":"830","endLine":132,"endColumn":34,"suggestions":"839"},{"ruleId":"832","severity":1,"message":"840","line":141,"column":42,"nodeType":"834","messageId":"822","endLine":141,"endColumn":44},{"ruleId":"841","severity":1,"message":"842","line":170,"column":21,"nodeType":"843","messageId":"844","endLine":170,"endColumn":23},{"ruleId":"832","severity":1,"message":"840","line":173,"column":32,"nodeType":"834","messageId":"822","endLine":173,"endColumn":34},{"ruleId":"841","severity":1,"message":"842","line":175,"column":21,"nodeType":"843","messageId":"844","endLine":175,"endColumn":23},{"ruleId":"832","severity":1,"message":"840","line":178,"column":32,"nodeType":"834","messageId":"822","endLine":178,"endColumn":34},{"ruleId":"841","severity":1,"message":"842","line":180,"column":21,"nodeType":"843","messageId":"844","endLine":180,"endColumn":23},{"ruleId":"832","severity":1,"message":"840","line":183,"column":32,"nodeType":"834","messageId":"822","endLine":183,"endColumn":34},{"ruleId":"832","severity":1,"message":"833","line":13,"column":45,"nodeType":"834","messageId":"822","endLine":13,"endColumn":47},{"ruleId":"832","severity":1,"message":"833","line":19,"column":52,"nodeType":"834","messageId":"822","endLine":19,"endColumn":54},{"ruleId":"814","severity":1,"message":"845","line":11,"column":7,"nodeType":"816","messageId":"817","endLine":11,"endColumn":14},{"ruleId":"814","severity":1,"message":"846","line":397,"column":7,"nodeType":"816","messageId":"817","endLine":397,"endColumn":12},{"ruleId":"814","severity":1,"message":"847","line":398,"column":9,"nodeType":"816","messageId":"817","endLine":398,"endColumn":16},{"ruleId":"814","severity":1,"message":"825","line":42,"column":7,"nodeType":"816","messageId":"817","endLine":42,"endColumn":11},{"ruleId":"828","severity":1,"message":"848","line":93,"column":6,"nodeType":"830","endLine":93,"endColumn":16,"suggestions":"849"},{"ruleId":"832","severity":1,"message":"840","line":252,"column":20,"nodeType":"834","messageId":"822","endLine":252,"endColumn":22},{"ruleId":"832","severity":1,"message":"840","line":252,"column":42,"nodeType":"834","messageId":"822","endLine":252,"endColumn":44},{"ruleId":"832","severity":1,"message":"840","line":252,"column":61,"nodeType":"834","messageId":"822","endLine":252,"endColumn":63},{"ruleId":"814","severity":1,"message":"850","line":95,"column":10,"nodeType":"816","messageId":"817","endLine":95,"endColumn":15},{"ruleId":"814","severity":1,"message":"851","line":95,"column":17,"nodeType":"816","messageId":"817","endLine":95,"endColumn":25},{"ruleId":"814","severity":1,"message":"852","line":102,"column":9,"nodeType":"816","messageId":"817","endLine":102,"endColumn":14},{"ruleId":"814","severity":1,"message":"853","line":110,"column":10,"nodeType":"816","messageId":"817","endLine":110,"endColumn":26},{"ruleId":"814","severity":1,"message":"854","line":110,"column":28,"nodeType":"816","messageId":"817","endLine":110,"endColumn":47},{"ruleId":"814","severity":1,"message":"855","line":111,"column":10,"nodeType":"816","messageId":"817","endLine":111,"endColumn":22},{"ruleId":"832","severity":1,"message":"840","line":118,"column":52,"nodeType":"834","messageId":"822","endLine":118,"endColumn":54},{"ruleId":"832","severity":1,"message":"833","line":119,"column":47,"nodeType":"834","messageId":"822","endLine":119,"endColumn":49},{"ruleId":"832","severity":1,"message":"833","line":136,"column":54,"nodeType":"834","messageId":"822","endLine":136,"endColumn":56},{"ruleId":"832","severity":1,"message":"833","line":162,"column":28,"nodeType":"834","messageId":"822","endLine":162,"endColumn":30},{"ruleId":"832","severity":1,"message":"833","line":166,"column":35,"nodeType":"834","messageId":"822","endLine":166,"endColumn":37},{"ruleId":"832","severity":1,"message":"833","line":176,"column":30,"nodeType":"834","messageId":"822","endLine":176,"endColumn":32},{"ruleId":"832","severity":1,"message":"833","line":180,"column":37,"nodeType":"834","messageId":"822","endLine":180,"endColumn":39},{"ruleId":"828","severity":1,"message":"856","line":204,"column":6,"nodeType":"830","endLine":204,"endColumn":8,"suggestions":"857"},{"ruleId":"832","severity":1,"message":"840","line":209,"column":23,"nodeType":"834","messageId":"822","endLine":209,"endColumn":25},{"ruleId":"832","severity":1,"message":"833","line":232,"column":28,"nodeType":"834","messageId":"822","endLine":232,"endColumn":30},{"ruleId":"832","severity":1,"message":"833","line":241,"column":35,"nodeType":"834","messageId":"822","endLine":241,"endColumn":37},{"ruleId":"832","severity":1,"message":"833","line":254,"column":28,"nodeType":"834","messageId":"822","endLine":254,"endColumn":30},{"ruleId":"832","severity":1,"message":"833","line":269,"column":35,"nodeType":"834","messageId":"822","endLine":269,"endColumn":37},{"ruleId":"832","severity":1,"message":"833","line":330,"column":25,"nodeType":"834","messageId":"822","endLine":330,"endColumn":27},{"ruleId":"814","severity":1,"message":"858","line":347,"column":10,"nodeType":"816","messageId":"817","endLine":347,"endColumn":18},{"ruleId":"814","severity":1,"message":"859","line":349,"column":9,"nodeType":"816","messageId":"817","endLine":349,"endColumn":21},{"ruleId":"832","severity":1,"message":"833","line":403,"column":33,"nodeType":"834","messageId":"822","endLine":403,"endColumn":35},{"ruleId":"832","severity":1,"message":"833","line":411,"column":34,"nodeType":"834","messageId":"822","endLine":411,"endColumn":36},{"ruleId":"832","severity":1,"message":"833","line":519,"column":29,"nodeType":"834","messageId":"822","endLine":519,"endColumn":31},{"ruleId":"832","severity":1,"message":"833","line":530,"column":29,"nodeType":"834","messageId":"822","endLine":530,"endColumn":31},{"ruleId":"832","severity":1,"message":"833","line":543,"column":29,"nodeType":"834","messageId":"822","endLine":543,"endColumn":31},{"ruleId":"832","severity":1,"message":"840","line":25,"column":18,"nodeType":"834","messageId":"822","endLine":25,"endColumn":20},{"ruleId":"828","severity":1,"message":"860","line":55,"column":6,"nodeType":"830","endLine":55,"endColumn":8,"suggestions":"861"},{"ruleId":"832","severity":1,"message":"833","line":88,"column":52,"nodeType":"834","messageId":"822","endLine":88,"endColumn":54},{"ruleId":"832","severity":1,"message":"833","line":119,"column":60,"nodeType":"834","messageId":"822","endLine":119,"endColumn":62},{"ruleId":"832","severity":1,"message":"833","line":137,"column":72,"nodeType":"834","messageId":"822","endLine":137,"endColumn":74},{"ruleId":"832","severity":1,"message":"833","line":174,"column":29,"nodeType":"834","messageId":"822","endLine":174,"endColumn":31},{"ruleId":"832","severity":1,"message":"833","line":181,"column":35,"nodeType":"834","messageId":"822","endLine":181,"endColumn":37},{"ruleId":"862","severity":1,"message":"863","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":16},{"ruleId":"862","severity":1,"message":"824","line":10,"column":19,"nodeType":"816","messageId":"817","endLine":10,"endColumn":29},{"ruleId":"862","severity":1,"message":"863","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":16},{"ruleId":"862","severity":1,"message":"824","line":10,"column":19,"nodeType":"816","messageId":"817","endLine":10,"endColumn":29},{"ruleId":"810","replacedBy":"864"},{"ruleId":"812","replacedBy":"865"},{"ruleId":"832","severity":1,"message":"840","line":62,"column":26,"nodeType":"834","messageId":"822","endLine":62,"endColumn":28},{"ruleId":"832","severity":1,"message":"840","line":62,"column":58,"nodeType":"834","messageId":"822","endLine":62,"endColumn":60},{"ruleId":"832","severity":1,"message":"833","line":105,"column":31,"nodeType":"834","messageId":"822","endLine":105,"endColumn":33},{"ruleId":"832","severity":1,"message":"840","line":111,"column":34,"nodeType":"834","messageId":"822","endLine":111,"endColumn":36},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"870"},{"ruleId":"814","severity":1,"message":"846","line":14,"column":7,"nodeType":"816","messageId":"817","endLine":14,"endColumn":12},{"ruleId":"814","severity":1,"message":"871","line":23,"column":10,"nodeType":"816","messageId":"817","endLine":23,"endColumn":17},{"ruleId":"814","severity":1,"message":"872","line":23,"column":19,"nodeType":"816","messageId":"817","endLine":23,"endColumn":29},{"ruleId":"832","severity":1,"message":"840","line":38,"column":20,"nodeType":"834","messageId":"822","endLine":38,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":52,"column":19,"nodeType":"834","messageId":"822","endLine":52,"endColumn":21},{"ruleId":"832","severity":1,"message":"833","line":62,"column":19,"nodeType":"834","messageId":"822","endLine":62,"endColumn":21},{"ruleId":"832","severity":1,"message":"840","line":75,"column":14,"nodeType":"834","messageId":"822","endLine":75,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":84,"column":20,"nodeType":"834","messageId":"822","endLine":84,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":84,"column":52,"nodeType":"834","messageId":"822","endLine":84,"endColumn":54},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"873"},{"ruleId":"814","severity":1,"message":"874","line":29,"column":9,"nodeType":"816","messageId":"817","endLine":29,"endColumn":16},{"ruleId":"814","severity":1,"message":"875","line":30,"column":10,"nodeType":"816","messageId":"817","endLine":30,"endColumn":15},{"ruleId":"814","severity":1,"message":"876","line":30,"column":17,"nodeType":"816","messageId":"817","endLine":30,"endColumn":25},{"ruleId":"814","severity":1,"message":"877","line":15,"column":8,"nodeType":"816","messageId":"817","endLine":15,"endColumn":13},{"ruleId":"814","severity":1,"message":"878","line":144,"column":12,"nodeType":"816","messageId":"817","endLine":144,"endColumn":30},{"ruleId":"814","severity":1,"message":"879","line":5,"column":10,"nodeType":"816","messageId":"817","endLine":5,"endColumn":23},{"ruleId":"814","severity":1,"message":"880","line":8,"column":8,"nodeType":"816","messageId":"817","endLine":8,"endColumn":19},{"ruleId":"832","severity":1,"message":"833","line":31,"column":22,"nodeType":"834","messageId":"822","endLine":31,"endColumn":24},{"ruleId":"832","severity":1,"message":"833","line":54,"column":27,"nodeType":"834","messageId":"822","endLine":54,"endColumn":29},{"ruleId":"828","severity":1,"message":"881","line":50,"column":6,"nodeType":"830","endLine":50,"endColumn":15,"suggestions":"882"},{"ruleId":"862","severity":1,"message":"883","line":49,"column":7,"nodeType":"816","messageId":"817","endLine":49,"endColumn":19},{"ruleId":"832","severity":1,"message":"833","line":63,"column":35,"nodeType":"834","messageId":"822","endLine":63,"endColumn":37},{"ruleId":"832","severity":1,"message":"833","line":88,"column":94,"nodeType":"834","messageId":"822","endLine":88,"endColumn":96},{"ruleId":"828","severity":1,"message":"884","line":96,"column":6,"nodeType":"830","endLine":96,"endColumn":8,"suggestions":"885"},{"ruleId":"832","severity":1,"message":"840","line":102,"column":17,"nodeType":"834","messageId":"822","endLine":102,"endColumn":19},{"ruleId":"832","severity":1,"message":"833","line":123,"column":62,"nodeType":"834","messageId":"822","endLine":123,"endColumn":64},{"ruleId":"835","severity":1,"message":"836","line":36,"column":13,"nodeType":"837","endLine":36,"endColumn":75},{"ruleId":"835","severity":1,"message":"836","line":62,"column":23,"nodeType":"837","endLine":62,"endColumn":59},{"ruleId":"832","severity":1,"message":"833","line":128,"column":14,"nodeType":"834","messageId":"822","endLine":128,"endColumn":16},{"ruleId":"835","severity":1,"message":"836","line":300,"column":23,"nodeType":"837","endLine":300,"endColumn":59},{"ruleId":"832","severity":1,"message":"833","line":218,"column":27,"nodeType":"834","messageId":"822","endLine":218,"endColumn":29},{"ruleId":"832","severity":1,"message":"833","line":270,"column":27,"nodeType":"834","messageId":"822","endLine":270,"endColumn":29},{"ruleId":"814","severity":1,"message":"886","line":319,"column":10,"nodeType":"816","messageId":"817","endLine":319,"endColumn":33},{"ruleId":"832","severity":1,"message":"833","line":11,"column":19,"nodeType":"834","messageId":"822","endLine":11,"endColumn":21},{"ruleId":"832","severity":1,"message":"833","line":11,"column":50,"nodeType":"834","messageId":"822","endLine":11,"endColumn":52},{"ruleId":"814","severity":1,"message":"871","line":24,"column":10,"nodeType":"816","messageId":"817","endLine":24,"endColumn":17},{"ruleId":"814","severity":1,"message":"872","line":24,"column":19,"nodeType":"816","messageId":"817","endLine":24,"endColumn":29},{"ruleId":"832","severity":1,"message":"833","line":28,"column":15,"nodeType":"834","messageId":"822","endLine":28,"endColumn":17},{"ruleId":"866","severity":1,"message":"887","line":14,"column":3,"nodeType":"868","messageId":"869","endLine":14,"endColumn":29,"fix":"888"},{"ruleId":"814","severity":1,"message":"889","line":24,"column":7,"nodeType":"816","messageId":"817","endLine":24,"endColumn":21},{"ruleId":"828","severity":1,"message":"890","line":55,"column":6,"nodeType":"830","endLine":55,"endColumn":8,"suggestions":"891"},{"ruleId":"832","severity":1,"message":"833","line":71,"column":25,"nodeType":"834","messageId":"822","endLine":71,"endColumn":27},{"ruleId":"832","severity":1,"message":"833","line":39,"column":19,"nodeType":"834","messageId":"822","endLine":39,"endColumn":21},{"ruleId":"832","severity":1,"message":"833","line":39,"column":43,"nodeType":"834","messageId":"822","endLine":39,"endColumn":45},{"ruleId":"832","severity":1,"message":"833","line":39,"column":69,"nodeType":"834","messageId":"822","endLine":39,"endColumn":71},{"ruleId":"832","severity":1,"message":"840","line":44,"column":45,"nodeType":"834","messageId":"822","endLine":44,"endColumn":47},{"ruleId":"832","severity":1,"message":"833","line":85,"column":45,"nodeType":"834","messageId":"822","endLine":85,"endColumn":47},{"ruleId":"832","severity":1,"message":"833","line":104,"column":52,"nodeType":"834","messageId":"822","endLine":104,"endColumn":54},{"ruleId":"828","severity":1,"message":"892","line":250,"column":6,"nodeType":"830","endLine":250,"endColumn":8,"suggestions":"893"},{"ruleId":"835","severity":1,"message":"836","line":257,"column":11,"nodeType":"837","endLine":260,"endColumn":13},{"ruleId":"832","severity":1,"message":"833","line":293,"column":37,"nodeType":"834","messageId":"822","endLine":293,"endColumn":39},{"ruleId":"810","replacedBy":"894"},{"ruleId":"812","replacedBy":"895"},{"ruleId":"832","severity":1,"message":"833","line":29,"column":30,"nodeType":"834","messageId":"822","endLine":29,"endColumn":32},{"ruleId":"832","severity":1,"message":"833","line":29,"column":60,"nodeType":"834","messageId":"822","endLine":29,"endColumn":62},{"ruleId":"814","severity":1,"message":"896","line":55,"column":28,"nodeType":"816","messageId":"817","endLine":55,"endColumn":41},{"ruleId":"828","severity":1,"message":"897","line":66,"column":6,"nodeType":"830","endLine":66,"endColumn":38,"suggestions":"898"},{"ruleId":"832","severity":1,"message":"833","line":80,"column":20,"nodeType":"834","messageId":"822","endLine":80,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":80,"column":40,"nodeType":"834","messageId":"822","endLine":80,"endColumn":42},{"ruleId":"832","severity":1,"message":"833","line":97,"column":22,"nodeType":"834","messageId":"822","endLine":97,"endColumn":24},{"ruleId":"832","severity":1,"message":"833","line":122,"column":20,"nodeType":"834","messageId":"822","endLine":122,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":224,"column":52,"nodeType":"834","messageId":"822","endLine":224,"endColumn":54},{"ruleId":"832","severity":1,"message":"833","line":237,"column":51,"nodeType":"834","messageId":"822","endLine":237,"endColumn":53},{"ruleId":"832","severity":1,"message":"840","line":302,"column":34,"nodeType":"834","messageId":"822","endLine":302,"endColumn":36},{"ruleId":"899","severity":1,"message":"900","line":14,"column":3,"nodeType":"901","messageId":"902","endLine":16,"endColumn":4},{"ruleId":"903","severity":1,"message":"904","line":50,"column":21,"nodeType":"837","messageId":"905","endLine":55,"endColumn":22,"fix":"906"},{"ruleId":"903","severity":1,"message":"904","line":79,"column":17,"nodeType":"837","messageId":"905","endLine":83,"endColumn":18,"fix":"907"},{"ruleId":"903","severity":1,"message":"904","line":93,"column":17,"nodeType":"837","messageId":"905","endLine":97,"endColumn":18,"fix":"908"},{"ruleId":"903","severity":1,"message":"904","line":107,"column":17,"nodeType":"837","messageId":"905","endLine":111,"endColumn":18,"fix":"909"},{"ruleId":"903","severity":1,"message":"904","line":121,"column":17,"nodeType":"837","messageId":"905","endLine":125,"endColumn":18,"fix":"910"},{"ruleId":"903","severity":1,"message":"904","line":135,"column":17,"nodeType":"837","messageId":"905","endLine":139,"endColumn":18,"fix":"911"},{"ruleId":"903","severity":1,"message":"904","line":149,"column":17,"nodeType":"837","messageId":"905","endLine":153,"endColumn":18,"fix":"912"},{"ruleId":"810","replacedBy":"894"},{"ruleId":"812","replacedBy":"895"},{"ruleId":"814","severity":1,"message":"913","line":131,"column":5,"nodeType":"816","messageId":"817","endLine":131,"endColumn":6},{"ruleId":"832","severity":1,"message":"833","line":158,"column":55,"nodeType":"834","messageId":"822","endLine":158,"endColumn":57},{"ruleId":"832","severity":1,"message":"833","line":170,"column":55,"nodeType":"834","messageId":"822","endLine":170,"endColumn":57},{"ruleId":"832","severity":1,"message":"833","line":17,"column":46,"nodeType":"834","messageId":"822","endLine":17,"endColumn":48},{"ruleId":"828","severity":1,"message":"914","line":21,"column":6,"nodeType":"830","endLine":21,"endColumn":20,"suggestions":"915"},{"ruleId":"814","severity":1,"message":"916","line":8,"column":9,"nodeType":"816","messageId":"817","endLine":8,"endColumn":19},{"ruleId":"814","severity":1,"message":"917","line":9,"column":10,"nodeType":"816","messageId":"817","endLine":9,"endColumn":18},{"ruleId":"814","severity":1,"message":"918","line":10,"column":9,"nodeType":"816","messageId":"817","endLine":10,"endColumn":17},{"ruleId":"814","severity":1,"message":"919","line":12,"column":10,"nodeType":"816","messageId":"817","endLine":12,"endColumn":18},{"ruleId":"814","severity":1,"message":"920","line":13,"column":10,"nodeType":"816","messageId":"817","endLine":13,"endColumn":20},{"ruleId":"814","severity":1,"message":"921","line":13,"column":22,"nodeType":"816","messageId":"817","endLine":13,"endColumn":35},{"ruleId":"814","severity":1,"message":"922","line":15,"column":12,"nodeType":"816","messageId":"817","endLine":15,"endColumn":33},{"ruleId":"814","severity":1,"message":"923","line":1,"column":8,"nodeType":"816","messageId":"817","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"924","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":22},{"ruleId":"814","severity":1,"message":"925","line":186,"column":9,"nodeType":"816","messageId":"817","endLine":186,"endColumn":30},{"ruleId":"814","severity":1,"message":"924","line":3,"column":10,"nodeType":"816","messageId":"817","endLine":3,"endColumn":22},{"ruleId":"814","severity":1,"message":"923","line":4,"column":8,"nodeType":"816","messageId":"817","endLine":4,"endColumn":25},{"ruleId":"862","severity":1,"message":"824","line":10,"column":19,"nodeType":"816","messageId":"817","endLine":10,"endColumn":29},{"ruleId":"862","severity":1,"message":"863","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":16},{"ruleId":"862","severity":1,"message":"824","line":10,"column":19,"nodeType":"816","messageId":"817","endLine":10,"endColumn":29},{"ruleId":"832","severity":1,"message":"833","line":52,"column":31,"nodeType":"834","messageId":"822","endLine":52,"endColumn":33},{"ruleId":"832","severity":1,"message":"840","line":148,"column":46,"nodeType":"834","messageId":"822","endLine":148,"endColumn":48},{"ruleId":"832","severity":1,"message":"833","line":152,"column":47,"nodeType":"834","messageId":"822","endLine":152,"endColumn":49},{"ruleId":"926","severity":1,"message":"927","line":229,"column":1,"nodeType":"928","messageId":"929","endLine":270,"endColumn":2},{"ruleId":"832","severity":1,"message":"833","line":67,"column":47,"nodeType":"834","messageId":"822","endLine":67,"endColumn":49},{"ruleId":"814","severity":1,"message":"825","line":102,"column":9,"nodeType":"816","messageId":"817","endLine":102,"endColumn":13},{"ruleId":"841","severity":1,"message":"930","line":102,"column":34,"nodeType":"843","messageId":"931","endLine":102,"endColumn":36},{"ruleId":"832","severity":1,"message":"833","line":103,"column":42,"nodeType":"834","messageId":"822","endLine":103,"endColumn":44},{"ruleId":"828","severity":1,"message":"932","line":140,"column":6,"nodeType":"830","endLine":140,"endColumn":8,"suggestions":"933"},{"ruleId":"835","severity":1,"message":"836","line":256,"column":23,"nodeType":"837","endLine":256,"endColumn":81},{"ruleId":"814","severity":1,"message":"934","line":14,"column":8,"nodeType":"816","messageId":"817","endLine":14,"endColumn":15},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"935"},{"ruleId":"814","severity":1,"message":"936","line":19,"column":11,"nodeType":"816","messageId":"817","endLine":19,"endColumn":18},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"937"},{"ruleId":"862","severity":1,"message":"938","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":21},{"ruleId":"835","severity":1,"message":"836","line":43,"column":5,"nodeType":"837","endLine":43,"endColumn":36},{"ruleId":"814","severity":1,"message":"939","line":20,"column":7,"nodeType":"816","messageId":"817","endLine":20,"endColumn":11},{"ruleId":"832","severity":1,"message":"840","line":62,"column":40,"nodeType":"834","messageId":"822","endLine":62,"endColumn":42},{"ruleId":"814","severity":1,"message":"940","line":81,"column":12,"nodeType":"816","messageId":"817","endLine":81,"endColumn":19},{"ruleId":"814","severity":1,"message":"941","line":89,"column":12,"nodeType":"816","messageId":"817","endLine":89,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":55,"column":47,"nodeType":"834","messageId":"822","endLine":55,"endColumn":49},{"ruleId":"841","severity":1,"message":"930","line":81,"column":34,"nodeType":"843","messageId":"931","endLine":81,"endColumn":36},{"ruleId":"832","severity":1,"message":"833","line":82,"column":42,"nodeType":"834","messageId":"822","endLine":82,"endColumn":44},{"ruleId":"828","severity":1,"message":"942","line":116,"column":6,"nodeType":"830","endLine":116,"endColumn":8,"suggestions":"943"},{"ruleId":"832","severity":1,"message":"840","line":44,"column":42,"nodeType":"834","messageId":"822","endLine":44,"endColumn":44},{"ruleId":"832","severity":1,"message":"833","line":45,"column":40,"nodeType":"834","messageId":"822","endLine":45,"endColumn":42},{"ruleId":"832","severity":1,"message":"840","line":86,"column":46,"nodeType":"834","messageId":"822","endLine":86,"endColumn":48},{"ruleId":"832","severity":1,"message":"833","line":87,"column":44,"nodeType":"834","messageId":"822","endLine":87,"endColumn":46},{"ruleId":"832","severity":1,"message":"833","line":102,"column":33,"nodeType":"834","messageId":"822","endLine":102,"endColumn":35},{"ruleId":"832","severity":1,"message":"833","line":102,"column":53,"nodeType":"834","messageId":"822","endLine":102,"endColumn":55},{"ruleId":"832","severity":1,"message":"833","line":102,"column":73,"nodeType":"834","messageId":"822","endLine":102,"endColumn":75},{"ruleId":"832","severity":1,"message":"840","line":104,"column":37,"nodeType":"834","messageId":"822","endLine":104,"endColumn":39},{"ruleId":"832","severity":1,"message":"840","line":104,"column":57,"nodeType":"834","messageId":"822","endLine":104,"endColumn":59},{"ruleId":"832","severity":1,"message":"840","line":106,"column":37,"nodeType":"834","messageId":"822","endLine":106,"endColumn":39},{"ruleId":"832","severity":1,"message":"833","line":106,"column":56,"nodeType":"834","messageId":"822","endLine":106,"endColumn":58},{"ruleId":"832","severity":1,"message":"833","line":111,"column":33,"nodeType":"834","messageId":"822","endLine":111,"endColumn":35},{"ruleId":"832","severity":1,"message":"833","line":111,"column":53,"nodeType":"834","messageId":"822","endLine":111,"endColumn":55},{"ruleId":"832","severity":1,"message":"833","line":111,"column":73,"nodeType":"834","messageId":"822","endLine":111,"endColumn":75},{"ruleId":"832","severity":1,"message":"840","line":113,"column":37,"nodeType":"834","messageId":"822","endLine":113,"endColumn":39},{"ruleId":"832","severity":1,"message":"840","line":113,"column":57,"nodeType":"834","messageId":"822","endLine":113,"endColumn":59},{"ruleId":"832","severity":1,"message":"840","line":115,"column":37,"nodeType":"834","messageId":"822","endLine":115,"endColumn":39},{"ruleId":"832","severity":1,"message":"833","line":115,"column":56,"nodeType":"834","messageId":"822","endLine":115,"endColumn":58},{"ruleId":"814","severity":1,"message":"944","line":12,"column":8,"nodeType":"816","messageId":"817","endLine":12,"endColumn":13},{"ruleId":"814","severity":1,"message":"945","line":22,"column":10,"nodeType":"816","messageId":"817","endLine":22,"endColumn":19},{"ruleId":"814","severity":1,"message":"946","line":79,"column":7,"nodeType":"816","messageId":"817","endLine":79,"endColumn":21},{"ruleId":"832","severity":1,"message":"833","line":90,"column":21,"nodeType":"834","messageId":"822","endLine":90,"endColumn":23},{"ruleId":"832","severity":1,"message":"840","line":90,"column":50,"nodeType":"834","messageId":"822","endLine":90,"endColumn":52},{"ruleId":"832","severity":1,"message":"840","line":211,"column":42,"nodeType":"834","messageId":"822","endLine":211,"endColumn":44},{"ruleId":"832","severity":1,"message":"833","line":13,"column":23,"nodeType":"834","messageId":"822","endLine":13,"endColumn":25},{"ruleId":"832","severity":1,"message":"833","line":16,"column":28,"nodeType":"834","messageId":"822","endLine":16,"endColumn":30},{"ruleId":"832","severity":1,"message":"833","line":19,"column":25,"nodeType":"834","messageId":"822","endLine":19,"endColumn":27},{"ruleId":"814","severity":1,"message":"945","line":17,"column":10,"nodeType":"816","messageId":"817","endLine":17,"endColumn":19},{"ruleId":"832","severity":1,"message":"833","line":75,"column":18,"nodeType":"834","messageId":"822","endLine":75,"endColumn":20},{"ruleId":"832","severity":1,"message":"833","line":80,"column":18,"nodeType":"834","messageId":"822","endLine":80,"endColumn":20},{"ruleId":"814","severity":1,"message":"945","line":17,"column":10,"nodeType":"816","messageId":"817","endLine":17,"endColumn":19},{"ruleId":"832","severity":1,"message":"833","line":79,"column":18,"nodeType":"834","messageId":"822","endLine":79,"endColumn":20},{"ruleId":"832","severity":1,"message":"833","line":95,"column":44,"nodeType":"834","messageId":"822","endLine":95,"endColumn":46},{"ruleId":"832","severity":1,"message":"840","line":107,"column":18,"nodeType":"834","messageId":"822","endLine":107,"endColumn":20},{"ruleId":"832","severity":1,"message":"840","line":236,"column":41,"nodeType":"834","messageId":"822","endLine":236,"endColumn":43},{"ruleId":"832","severity":1,"message":"840","line":241,"column":36,"nodeType":"834","messageId":"822","endLine":241,"endColumn":38},{"ruleId":"814","severity":1,"message":"947","line":16,"column":10,"nodeType":"816","messageId":"817","endLine":16,"endColumn":31},{"ruleId":"814","severity":1,"message":"948","line":1,"column":8,"nodeType":"816","messageId":"817","endLine":1,"endColumn":16},{"ruleId":"814","severity":1,"message":"949","line":1,"column":20,"nodeType":"816","messageId":"817","endLine":1,"endColumn":30},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"950"},{"ruleId":"951","severity":1,"message":"952","line":11,"column":43,"nodeType":"953","messageId":"954","endLine":11,"endColumn":44,"suggestions":"955"},{"ruleId":"951","severity":1,"message":"952","line":15,"column":43,"nodeType":"953","messageId":"954","endLine":15,"endColumn":44,"suggestions":"956"},{"ruleId":"951","severity":1,"message":"952","line":19,"column":43,"nodeType":"953","messageId":"954","endLine":19,"endColumn":44,"suggestions":"957"},{"ruleId":"951","severity":1,"message":"952","line":23,"column":29,"nodeType":"953","messageId":"954","endLine":23,"endColumn":30,"suggestions":"958"},{"ruleId":"951","severity":1,"message":"952","line":27,"column":39,"nodeType":"953","messageId":"954","endLine":27,"endColumn":40,"suggestions":"959"},{"ruleId":"832","severity":1,"message":"833","line":74,"column":18,"nodeType":"834","messageId":"822","endLine":74,"endColumn":20},{"ruleId":"828","severity":1,"message":"960","line":104,"column":6,"nodeType":"830","endLine":104,"endColumn":8,"suggestions":"961"},{"ruleId":"862","severity":1,"message":"863","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":16},{"ruleId":"862","severity":1,"message":"962","line":5,"column":8,"nodeType":"816","messageId":"817","endLine":5,"endColumn":22},{"ruleId":"862","severity":1,"message":"963","line":6,"column":8,"nodeType":"816","messageId":"817","endLine":6,"endColumn":23},{"ruleId":"862","severity":1,"message":"964","line":7,"column":8,"nodeType":"816","messageId":"817","endLine":7,"endColumn":18},{"ruleId":"862","severity":1,"message":"824","line":14,"column":19,"nodeType":"816","messageId":"817","endLine":14,"endColumn":29},{"ruleId":"862","severity":1,"message":"965","line":54,"column":12,"nodeType":"816","messageId":"817","endLine":54,"endColumn":33},{"ruleId":"862","severity":1,"message":"966","line":57,"column":12,"nodeType":"816","messageId":"817","endLine":57,"endColumn":35},{"ruleId":"862","severity":1,"message":"967","line":60,"column":12,"nodeType":"816","messageId":"817","endLine":60,"endColumn":29},{"ruleId":"862","severity":1,"message":"968","line":65,"column":12,"nodeType":"816","messageId":"817","endLine":65,"endColumn":31},{"ruleId":"862","severity":1,"message":"824","line":10,"column":19,"nodeType":"816","messageId":"817","endLine":10,"endColumn":29},{"ruleId":"862","severity":1,"message":"824","line":11,"column":21,"nodeType":"816","messageId":"817","endLine":11,"endColumn":31},{"ruleId":"866","severity":1,"message":"867","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":36,"fix":"969"},{"ruleId":"828","severity":1,"message":"970","line":74,"column":6,"nodeType":"830","endLine":74,"endColumn":25,"suggestions":"971"},{"ruleId":"832","severity":1,"message":"840","line":109,"column":58,"nodeType":"834","messageId":"822","endLine":109,"endColumn":60},{"ruleId":"835","severity":1,"message":"836","line":18,"column":9,"nodeType":"837","endLine":18,"endColumn":173},{"ruleId":"832","severity":1,"message":"833","line":23,"column":36,"nodeType":"834","messageId":"822","endLine":23,"endColumn":38},{"ruleId":"832","severity":1,"message":"840","line":32,"column":24,"nodeType":"834","messageId":"822","endLine":32,"endColumn":26},{"ruleId":"814","severity":1,"message":"972","line":13,"column":15,"nodeType":"816","messageId":"817","endLine":13,"endColumn":21},{"ruleId":"866","severity":1,"message":"867","line":2,"column":10,"nodeType":"868","messageId":"869","endLine":2,"endColumn":36,"fix":"973"},{"ruleId":"866","severity":1,"message":"867","line":2,"column":10,"nodeType":"868","messageId":"869","endLine":2,"endColumn":36,"fix":"974"},{"ruleId":"835","severity":1,"message":"836","line":39,"column":13,"nodeType":"837","endLine":39,"endColumn":38},{"ruleId":"975","severity":1,"message":"976","line":95,"column":7,"nodeType":"816","messageId":"977","endLine":95,"endColumn":22},{"ruleId":"835","severity":1,"message":"836","line":46,"column":21,"nodeType":"837","endLine":46,"endColumn":55},{"ruleId":"814","severity":1,"message":"847","line":12,"column":9,"nodeType":"816","messageId":"817","endLine":12,"endColumn":16},{"ruleId":"814","severity":1,"message":"824","line":30,"column":19,"nodeType":"816","messageId":"817","endLine":30,"endColumn":29},{"ruleId":"814","severity":1,"message":"847","line":85,"column":9,"nodeType":"816","messageId":"817","endLine":85,"endColumn":16},{"ruleId":"814","severity":1,"message":"877","line":5,"column":8,"nodeType":"816","messageId":"817","endLine":5,"endColumn":13},{"ruleId":"814","severity":1,"message":"978","line":8,"column":8,"nodeType":"816","messageId":"817","endLine":8,"endColumn":28},{"ruleId":"814","severity":1,"message":"979","line":9,"column":10,"nodeType":"816","messageId":"817","endLine":9,"endColumn":33},{"ruleId":"814","severity":1,"message":"980","line":10,"column":10,"nodeType":"816","messageId":"817","endLine":10,"endColumn":31},{"ruleId":"814","severity":1,"message":"981","line":61,"column":5,"nodeType":"816","messageId":"817","endLine":61,"endColumn":9},{"ruleId":"814","severity":1,"message":"982","line":63,"column":5,"nodeType":"816","messageId":"817","endLine":63,"endColumn":9},{"ruleId":"814","severity":1,"message":"983","line":68,"column":5,"nodeType":"816","messageId":"817","endLine":68,"endColumn":16},{"ruleId":"835","severity":1,"message":"836","line":138,"column":15,"nodeType":"837","endLine":138,"endColumn":34},{"ruleId":"835","severity":1,"message":"836","line":208,"column":15,"nodeType":"837","endLine":208,"endColumn":34},{"ruleId":"866","severity":1,"message":"867","line":2,"column":10,"nodeType":"868","messageId":"869","endLine":2,"endColumn":36,"fix":"984"},{"ruleId":"835","severity":1,"message":"836","line":63,"column":13,"nodeType":"837","endLine":63,"endColumn":57},{"ruleId":"828","severity":1,"message":"985","line":60,"column":26,"nodeType":"816","endLine":60,"endColumn":33},{"ruleId":"835","severity":1,"message":"836","line":26,"column":9,"nodeType":"837","endLine":26,"endColumn":32},"no-native-reassign",["986"],"no-negated-in-lhs",["987"],"@typescript-eslint/no-unused-vars","'Fade' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-dupe-keys","Duplicate key 'MuiDropzoneArea'.","ObjectExpression","unexpected","'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'course' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCourseContent'. Either include it or remove the dependency array.","ArrayExpression",["988"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'fetchCourses', 'filteredData', and 'sortType'. Either include them or remove the dependency array.",["989"],"Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'courses' is assigned a value but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["990"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'theme' is assigned a value but never used.","'showErrorMessage' is assigned a value but never used.","'setShowErrorMessage' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'person.accountType', 'person.card', 'person.country', 'person.dob', and 'props.location.state'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDob' needs the current value of 'person.dob'.",["991"],"'expanded' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'course', 'courseId', and 'history.location?.state?.duplicate'. Either include them or remove the dependency array. You can also do a functional update 'setCourse(c => ...)' if you only need 'course' in the 'setCourse' call.",["992"],"no-unused-vars","'Drawer' is defined but never used.",["986"],["987"],"no-useless-rename","Import authHeaders unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"993","text":"994"},"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",{"range":"995","text":"994"},"'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'input' is defined but never used.","'handleFilterChange' is defined but never used.","'ReactSortable' is defined but never used.","'AuthService' is defined but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["996"],"'languageItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadLanguages'. Either include it or remove the dependency array.",["997"],"'FAQOutputQuestionDialog' is defined but never used.","Import IFilterType unnecessarily renamed.",{"range":"998","text":"999"},"'defaultLecture' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'week.title'. Either include it or remove the dependency array. If 'setFieldValue' needs the current value of 'week.title', you can also switch to useReducer instead of useState and read 'week.title' in the reducer.",["1000"],"React Hook useEffect has missing dependencies: 'popUpNavProperty.admin', 'popUpNavProperty.student', and 'popUpNavProperty.teacher'. Either include them or remove the dependency array.",["1001"],["986"],["987"],"'closeSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editable' and 'lecture?.file?.type'. Either include them or remove the dependency array. If 'setBody' needs the current value of 'lecture.file.type', you can also switch to useReducer instead of useState and read 'lecture.file.type' in the reducer.",["1002"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1003","text":"1004"},{"range":"1005","text":"1004"},{"range":"1006","text":"1004"},{"range":"1007","text":"1004"},{"range":"1008","text":"1004"},{"range":"1009","text":"1004"},{"range":"1010","text":"1004"},"'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'videoFetch'. Either include it or remove the dependency array.",["1011"],"'onFileLoad' is assigned a value but never used.","'pictures' is assigned a value but never used.","'onChange' is assigned a value but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'convertToRaw' is defined but never used.","'handleMouseEnterLeave' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'loadCourseName'. Either include it or remove the dependency array.",["1012"],"'Popover' is defined but never used.",{"range":"1013","text":"994"},"'ISource' is defined but never used.",{"range":"1014","text":"994"},"'authHeaders' is defined but never used.","'icon' is assigned a value but never used.","'timeout' is defined but never used.","'DrawerList' is defined but never used.","React Hook useEffect has a missing dependency: 'viewType'. Either include it or remove the dependency array.",["1015"],"'Paper' is defined but never used.","'Copyright' is defined but never used.","'person' is defined but never used.","'onEnterPressFocusNext' is defined but never used.","'MuiAlert' is defined but never used.","'AlertProps' is defined but never used.",{"range":"1016","text":"994"},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["1017","1018"],["1019","1020"],["1021","1022"],["1023","1024"],["1025","1026"],"React Hook useEffect has a missing dependency: 'pattern'. Either include it or remove the dependency array.",["1027"],"'VisibilityIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CancelIcon' is defined but never used.","'insertIntoApproveList' is defined but never used.","'insertIntoUnapproveList' is defined but never used.","'deleteFromApprove' is defined but never used.","'deleteFromUnapprove' is defined but never used.",{"range":"1028","text":"994"},"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1029"],"'setKey' is assigned a value but never used.",{"range":"1030","text":"994"},{"range":"1031","text":"994"},"@typescript-eslint/no-redeclare","'PurchaseHistory' is already defined.","redeclared","'PopularCategoryChart' is defined but never used.","'PopularCourseAdminChart' is defined but never used.","'UserRegistrationChart' is defined but never used.","'type' is assigned a value but never used.","'time' is assigned a value but never used.","'accountType' is assigned a value but never used.",{"range":"1032","text":"994"},"The ref value 'timer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'timer.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"desc":"1033","fix":"1034"},{"desc":"1035","fix":"1036"},{"desc":"1037","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},[75,101],"authHeaders",[75,101],{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},[312,338],"IFilterType",{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},[1762,1762]," rel=\"noreferrer\"",[2770,2770],[3261,3261],[3751,3751],[4236,4236],[4731,4731],[5230,5230],{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},[75,101],[75,101],{"desc":"1057","fix":"1058"},[79,105],{"messageId":"1059","fix":"1060","desc":"1061"},{"messageId":"1062","fix":"1063","desc":"1064"},{"messageId":"1059","fix":"1065","desc":"1061"},{"messageId":"1062","fix":"1066","desc":"1064"},{"messageId":"1059","fix":"1067","desc":"1061"},{"messageId":"1062","fix":"1068","desc":"1064"},{"messageId":"1059","fix":"1069","desc":"1061"},{"messageId":"1062","fix":"1070","desc":"1064"},{"messageId":"1059","fix":"1071","desc":"1061"},{"messageId":"1062","fix":"1072","desc":"1064"},{"desc":"1073","fix":"1074"},[75,101],{"desc":"1075","fix":"1076"},[37,63],[37,63],[37,63],"Update the dependencies array to be: [courseId, loadCourseContent]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [fetchCourses, filteredData, history.location.state.key, sortType]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [loadData, username]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [history, person.accountType, person.card, person.country, person.dob, props.location.state]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [course, courseId, history.location?.state?.duplicate]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [courseId, reviews]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [loadLanguages]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [week.title]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [lecture.title, lecture.preview, lecture?.file?.type, editable]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [file?.content, videoFetch]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [loadCourseName]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [viewType]",{"range":"1101","text":"1102"},"removeEscape",{"range":"1103","text":"1104"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1105","text":"1106"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1107","text":"1104"},{"range":"1108","text":"1106"},{"range":"1109","text":"1104"},{"range":"1110","text":"1106"},{"range":"1111","text":"1104"},{"range":"1112","text":"1106"},{"range":"1113","text":"1104"},{"range":"1114","text":"1106"},"Update the dependencies array to be: [pattern]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [type, fileObjects, state]",{"range":"1117","text":"1118"},[4478,4488],"[courseId, loadCourseContent]",[3025,3053],"[fetchCourses, filteredData, history.location.state.key, sortType]",[3124,3134],"[loadData, username]",[6932,6934],"[history, person.accountType, person.card, person.country, person.dob, props.location.state]",[2186,2188],"[course, courseId, history.location?.state?.duplicate]",[1440,1449],"[courseId, reviews]",[2256,2258],"[loadLanguages]",[1191,1193],"[week.title]",[6524,6526],"[popUpNavProperty.admin, popUpNavProperty.student, popUpNavProperty.teacher]",[1741,1773],"[lecture.title, lecture.preview, lecture?.file?.type, editable]",[886,900],"[file?.content, videoFetch]",[4075,4077],"[loadCourseName]",[3347,3349],"[viewType]",[257,258],"",[257,257],"\\",[414,415],[414,414],[578,579],[578,578],[716,717],[716,716],[852,853],[852,852],[3260,3262],"[pattern]",[1793,1812],"[type, fileObjects, state]"]