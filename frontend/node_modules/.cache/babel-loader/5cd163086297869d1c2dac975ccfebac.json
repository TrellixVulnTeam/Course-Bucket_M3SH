{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\frontend\\\\src\\\\components\\\\AdminPanel\\\\EduStatusComponent.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js';\nimport { Drawer, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EduStatusComponent(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Id',\n    field: 'id',\n    editable: false\n  }, {\n    title: 'Educational Status',\n    field: 'type'\n  }, {\n    title: 'Admin',\n    field: 'adminId',\n    editable: false\n  }]);\n  const [data, setData] = useState([]);\n  CallgetAllEduStatus();\n\n  function getAllEduStatus() {\n    EduStatusService.getAllEduStatus().then(response => {\n      //console.log(response.data)\n      //callData(response.data)\n      setData(response.data); //setData(response.data)\n    });\n  }\n\n  function CallgetAllEduStatus() {\n    _s();\n\n    useEffect(() => {\n      getAllEduStatus();\n    }, []);\n  }\n\n  _s(CallgetAllEduStatus, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  function CallupdateEduStatus(edustatus) {\n    EduStatusService.updateEduStatus(edustatus).then(response => {\n      //console.log(response.data)\n      //callData(response.data)\n      //setData(response.data)\n      getAllEduStatus();\n    });\n  }\n\n  function CalldeleteEdustatus(id) {\n    EduStatusService.deleteEduStatus(id).then(response => {\n      ///console.log(response)\n      //callData(response.data)\n      //setData(response.data)\n      getAllEduStatus();\n    });\n  }\n\n  function CalladdEduStatus(edustatus) {\n    EduStatusService.addEduStatus(edustatus).then(response => {\n      //console.log('call add : ')\n      //console.log(response.data)\n      //setData([...edustatuses, response.data])\n      //callData(response.data)\n      //setData(response.data)\n      getAllEduStatus();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      height: \"700px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        open: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      sm: 9,\n      alignItems: \"center\",\n      justify: \"center\",\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        style: {\n          width: \"80%\"\n        },\n        title: \"Educational Status\",\n        columns: columns,\n        data: data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              //console.log(newData.id)\n              newData;\n              CalladdEduStatus(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataUpdate = [...data];\n              // const index = oldData.tableData.id;\n              // dataUpdate[index] = newData;\n              // console.log(index)\n              // setData([...dataUpdate]);\n              CallupdateEduStatus(newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // const dataDelete = [...data];\n              // const index = oldData.tableData.id;\n              // dataDelete.splice(index, 1);\n              // setData([...dataDelete]);\n              CalldeleteEdustatus(oldData.id);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          actionsColumnIndex: -1,\n          addRowPosition: \"first\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EduStatusComponent, \"bzOEv6GhYiD5NudBmxNka9XfwC8=\");\n\n_c = EduStatusComponent;\nexport default EduStatusComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EduStatusComponent\");","map":{"version":3,"sources":["D:/program/java/coursebucket/frontend/src/components/AdminPanel/EduStatusComponent.js"],"names":["React","useEffect","MaterialTable","EduStatusService","Drawer","Grid","EduStatusComponent","props","useState","columns","setColumns","title","field","editable","data","setData","CallgetAllEduStatus","getAllEduStatus","then","response","CallupdateEduStatus","edustatus","updateEduStatus","CalldeleteEdustatus","id","deleteEduStatus","CalladdEduStatus","addEduStatus","height","width","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","actionsColumnIndex","addRowPosition"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport EduStatusService from '../AdminPanel/api/EduStatusService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction EduStatusComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id', editable: false },\r\n    {\r\n      title: 'Educational Status', field: 'type'\r\n    },\r\n    { title: 'Admin', field: 'adminId', editable: false }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllEduStatus()\r\n\r\n  function getAllEduStatus() {\r\n    EduStatusService.getAllEduStatus()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        setData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  function CallgetAllEduStatus() {\r\n    useEffect(() => { getAllEduStatus()}, [])\r\n  }\r\n\r\n  function CallupdateEduStatus( edustatus) {\r\n\r\n    EduStatusService.updateEduStatus( edustatus)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteEdustatus( id) {\r\n\r\n    EduStatusService.deleteEduStatus(id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdEduStatus(edustatus) {\r\n\r\n    EduStatusService.addEduStatus(edustatus)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        //setData([...edustatuses, response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllEduStatus();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container style={{ height: \"700px\" }}>\r\n      <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <MaterialTable\r\n          style={{ width: \"80%\" }}\r\n          title=\"Educational Status\"\r\n          columns={columns}\r\n          data={data}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n\r\n                setTimeout(() => {\r\n                  //console.log(newData.id)\r\n                  newData\r\n                  CalladdEduStatus( newData)\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...data];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // console.log(index)\r\n                  // setData([...dataUpdate]);\r\n                  CallupdateEduStatus( newData);\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...data];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  CalldeleteEdustatus(oldData.id);\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n          }}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default EduStatusComponent"]},"metadata":{},"sourceType":"module"}