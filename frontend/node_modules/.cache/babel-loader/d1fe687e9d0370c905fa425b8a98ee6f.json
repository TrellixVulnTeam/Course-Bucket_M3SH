{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\frontend\\\\src\\\\components\\\\AdminPanel\\\\CategoryComponent.js\",\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport { Grid, IconButton, Typography, TextField } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CategoryService from '../AdminPanel/api/CategoryService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    height: 216,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  iconContainer: {\n    opacity: \"0.3\",\n    '&:hover': {\n      opacity: 1\n    }\n  },\n  textField: {\n    width: \"100%\"\n  }\n});\nexport default function MultiSelectTreeView() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const classes = useStyles();\n  const [showTextField, setShowTextField] = useState(0);\n  const [treeData, setTreeData] = useState(); // console.log(\n  // CategoryService.getAllCategories()\n  //   .then(response => {\n  //     //console.log(response.data)\n  //     //callData(response.data)          \n  //    // setTreeData(response.data);\n  //    return response.data;\n  //     //setData(response.data)\n  //   }\n  //   ));\n\n  CallgetAllCategories();\n\n  function getAllCategories() {\n    CategoryService.getAllCategories().then(response => {\n      console.log(response.data); //callData(response.data)          \n\n      setTreeData(response.data); //setData(response.data)\n    });\n  }\n\n  function CallgetAllCategories() {\n    _s();\n\n    useEffect(() => {\n      getAllCategories();\n    }, []);\n  }\n\n  _s(CallgetAllCategories, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  function PrintClickedLabel(event) {\n    //console.log(event.target.textContent)\n    console.log('print label : ' + event); //{onLabelClick = {()=>PrintClickedLabel(this.props.label)}}\n  }\n\n  function DFS(array, label) {\n    if (array.length === 0) return;\n    array.map((item, idx) => {\n      if (item.name === label) {\n        array.splice(idx, 1);\n        console.log(array);\n        return;\n      }\n\n      DFS(item.children, label);\n    });\n  }\n\n  function deleteItem(label) {\n    let array = treeData;\n    DFS(array, label);\n    array = array.filter(() => true);\n    setTreeData(array);\n  }\n\n  function AddData({\n    data\n  }) {\n    _s2();\n\n    const [textFieldData, setTextFieldData] = useState(\"\");\n\n    function handleTextFieldDataChange(event) {\n      setTextFieldData(event.target.value);\n    }\n\n    function callAddCategory(category) {\n      CategoryService.addCategory(category).then(response => {\n        getAllCategories();\n      });\n    }\n\n    function callUpdateCategory(category) {\n      CategoryService.updateCategory(newName, oldName).then(response => {\n        getAllCategories();\n      });\n    }\n\n    function onCancelClicked() {\n      setShowTextField(0);\n    }\n\n    function onUpdateClicked(id) {\n      setShowTextField(id);\n    } //console.log(data)\n\n\n    if (data.length === 0) return null;else return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(TreeItem, {\n        className: \"category-tree-item\",\n        nodeId: item.name,\n        label: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!(showTextField === item.id) && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              sm: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\" \", item.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.iconContainer,\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(UpdateIcon, {\n                  onClick: () => onUpdateClicked(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                  onClick: () => {\n                    deleteItem(item.name);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n                  onClick: () => {\n                    let obj = {\n                      name: \"New category\",\n                      parentId: item.id,\n                      adminId: 'shammya',\n                      children: []\n                    }; //item.children = [...item.children, obj];\n\n                    callAddCategory(obj);\n                    console.log(showTextField);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 51\n          }, this), showTextField === item.id && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              sm: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                className: classes.textField,\n                id: \"outlined-basic\",\n                label: \"Category Name\",\n                variant: \"outlined\",\n                defaultValue: item.name,\n                onChange: handleTextFieldDataChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.iconContainer,\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n                  onClick: () => {\n                    let category = {\n                      name: textFieldData,\n                      parentId: item.id,\n                      adminId: 'shammya',\n                      children: []\n                    };\n                    callUpdateCategory(category);\n                    setShowTextField(0);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n                  onClick: onCancelClicked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true),\n        children: /*#__PURE__*/_jsxDEV(AddData, {\n          data: item.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  }\n\n  _s2(AddData, \"LdiSnfH3iICVhRQpXSFr/iQKTuQ=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Category List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n      className: classes.root,\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 28\n      }, this),\n      multiSelect: true,\n      onNodeSelect: PrintClickedLabel,\n      children: /*#__PURE__*/_jsxDEV(AddData, {\n        data: treeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(MultiSelectTreeView, \"gOV6HNmvKfgjyDJc9iIecW0Gl74=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultiSelectTreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectTreeView\");","map":{"version":3,"sources":["D:/program/java/coursebucket/frontend/src/components/AdminPanel/CategoryComponent.js"],"names":["React","useEffect","useState","makeStyles","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","Grid","IconButton","Typography","TextField","AddCircleIcon","DeleteForeverIcon","UpdateIcon","CheckCircleOutlineIcon","CancelIcon","CategoryService","useStyles","root","height","flexGrow","maxWidth","iconContainer","opacity","textField","width","MultiSelectTreeView","classes","showTextField","setShowTextField","treeData","setTreeData","CallgetAllCategories","getAllCategories","then","response","console","log","data","PrintClickedLabel","event","DFS","array","label","length","map","item","idx","name","splice","children","deleteItem","filter","AddData","textFieldData","setTextFieldData","handleTextFieldDataChange","target","value","callAddCategory","category","addCategory","callUpdateCategory","updateCategory","newName","oldName","onCancelClicked","onUpdateClicked","id","obj","parentId","adminId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { Grid, IconButton, Typography, TextField } from '@material-ui/core'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CategoryService from '../AdminPanel/api/CategoryService.js'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 216,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  iconContainer: {\r\n    opacity: \"0.3\",\r\n    '&:hover': {\r\n      opacity: 1,\r\n    }\r\n  },\r\n  textField: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function MultiSelectTreeView() {\r\n  const classes = useStyles();\r\n  const [showTextField, setShowTextField] = useState(0);\r\n  const [treeData, setTreeData] = useState();\r\n\r\n  // console.log(\r\n  // CategoryService.getAllCategories()\r\n  //   .then(response => {\r\n  //     //console.log(response.data)\r\n  //     //callData(response.data)          \r\n  //    // setTreeData(response.data);\r\n  //    return response.data;\r\n  //     //setData(response.data)\r\n  //   }\r\n  //   ));\r\n\r\n  CallgetAllCategories()\r\n\r\n  function getAllCategories() {\r\n    CategoryService.getAllCategories()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        //callData(response.data)          \r\n        setTreeData(response.data);\r\n        //setData(response.data)\r\n      }\r\n      )\r\n  }\r\n\r\n  function CallgetAllCategories() {\r\n    useEffect(() => { getAllCategories() }, []);\r\n  }\r\n\r\n\r\n\r\n  function PrintClickedLabel(event) {\r\n    //console.log(event.target.textContent)\r\n    console.log('print label : ' + event)\r\n\r\n    //{onLabelClick = {()=>PrintClickedLabel(this.props.label)}}\r\n  }\r\n  function DFS(array, label) {\r\n    if (array.length === 0) return;\r\n    array.map((item, idx) => {\r\n      if (item.name === label) {\r\n        array.splice(idx, 1);\r\n        console.log(array);\r\n        return;\r\n      }\r\n      DFS(item.children, label);\r\n    })\r\n  }\r\n  function deleteItem(label) {\r\n    let array = treeData;\r\n    DFS(array, label);\r\n    array = array.filter(() => true);\r\n    setTreeData(array);\r\n  }\r\n\r\n  function AddData({ data }) {\r\n    const [textFieldData, setTextFieldData] = useState(\"\");\r\n    function handleTextFieldDataChange(event) {\r\n      setTextFieldData(event.target.value);\r\n    }\r\n    function callAddCategory(category) {\r\n      CategoryService.addCategory(category)\r\n        .then(response => {\r\n\r\n          getAllCategories();\r\n        }\r\n        )\r\n    }\r\n\r\n    function callUpdateCategory(category) {\r\n      CategoryService.updateCategory(newName, oldName)\r\n        .then(response => {\r\n\r\n          getAllCategories();\r\n        }\r\n        )\r\n    }\r\n\r\n    function onCancelClicked() {\r\n      setShowTextField(0)\r\n    }\r\n\r\n    function onUpdateClicked(id) {\r\n       setShowTextField(id);\r\n    }\r\n    //console.log(data)\r\n    if (data.length === 0) return null;\r\n    else return (\r\n      <>\r\n        {\r\n          data.map(item => (\r\n            <TreeItem className=\"category-tree-item\" key={item.id} nodeId={item.name} label={\r\n              <>\r\n                {!(showTextField === item.id) && (<Grid container direction=\"row\" alignItems=\"center\">\r\n                  <Grid item container sm>\r\n                    <Typography> {item.name} </Typography>\r\n                  </Grid>\r\n                  <Grid item className={classes.iconContainer}>\r\n                    <IconButton>\r\n                      <UpdateIcon onClick={() => onUpdateClicked(item.id) } />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                      <DeleteForeverIcon onClick={() => { deleteItem(item.name) }} />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                      <AddCircleIcon onClick={() => {\r\n                        let obj = { name: \"New category\", parentId: item.id, adminId: 'shammya', children: [] };\r\n                        //item.children = [...item.children, obj];\r\n\r\n                        callAddCategory(obj);\r\n                        console.log(showTextField);\r\n                      }} />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>)}\r\n                {(showTextField === item.id) && (<Grid container direction=\"row\" alignItems=\"center\">\r\n                  <Grid item container sm>\r\n                    {/* {React.useEffect(()=>{setTextFieldData(item.name)},[])} */}\r\n                    <TextField\r\n                      className={classes.textField}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Category Name\"\r\n                      variant=\"outlined\"\r\n                      defaultValue={item.name}\r\n                      onChange={handleTextFieldDataChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={classes.iconContainer}>\r\n                    <IconButton>\r\n                      <CheckCircleOutlineIcon onClick={() => { \r\n                        let category = { name: textFieldData, parentId: item.id, adminId: 'shammya', children: [] };\r\n                        callUpdateCategory(category) ; setShowTextField(0); }} />\r\n                      {/* <CheckCircleOutlineIcon onClick={() => onTickClicked(item.id, textFieldData)} /> */}\r\n                    </IconButton>\r\n                    <IconButton>\r\n                      <CancelIcon onClick={onCancelClicked} />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>)}\r\n              </>\r\n            }\r\n            >\r\n              <AddData data={item.children} />\r\n            </TreeItem>\r\n          ))\r\n        }\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <h3>Category List</h3>\r\n      <TreeView\r\n        className={classes.root}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        multiSelect\r\n        onNodeSelect={PrintClickedLabel}\r\n      >\r\n        <AddData data={treeData} />\r\n      </TreeView>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}