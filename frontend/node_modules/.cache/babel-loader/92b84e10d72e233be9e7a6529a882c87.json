{"ast":null,"code":"var _jsxFileName = \"D:\\\\program\\\\java\\\\coursebucket\\\\frontend\\\\src\\\\components\\\\AdminPanel\\\\LanguageComponent.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport LanguageService from '../AdminPanel/api/LanguageService.js';\nimport { Drawer, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LanguageComponent(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Id',\n    field: 'id',\n    editable: false\n  }, {\n    title: 'Language Name',\n    field: 'name'\n  }, {\n    title: 'Admin',\n    field: 'adminId'\n  }]);\n  const [data, setData] = useState([]);\n  CallgetAllLanguages();\n\n  function getAllLanguages() {\n    LanguageService.getAllLanguages().then(response => {\n      console.log(response.data); //callData(response.data)          \n\n      setData(response.data); //setData(response.data)\n    });\n  }\n\n  function CallgetAllLanguages() {\n    _s();\n\n    useEffect(() => {\n      getAllLanguages();\n    }, []);\n  }\n\n  _s(CallgetAllLanguages, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  function CallupdateLanguage(language) {\n    LanguageService.updateLanguage(language).then(response => {\n      //console.log(response.data)\n      //callData(response.data)\n      //setData(response.data)\n      getAllLanguages();\n    });\n  }\n\n  function CalldeleteCountry(id) {\n    LanguageService.deleteCountry(id).then(response => {\n      ///console.log(response)\n      //callData(response.data)\n      //setData(response.data)\n      getAllLanguages();\n    });\n  }\n\n  function CalladdLanguage(language) {\n    LanguageService.addLanguage(language).then(response => {\n      //console.log('call add : ')\n      //console.log(response.data)\n      setData([...countries, response.data]); //callData(response.data)\n      //setData(response.data)\n\n      getAllLanguages();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      height: \"700px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: 3,\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        open: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      sm: 9,\n      alignItems: \"center\",\n      justify: \"center\",\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        style: {\n          width: \"80%\"\n        },\n        title: \"Language\",\n        columns: columns,\n        data: data,\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              //setData([...data, newData]);\n              newData.id = -1; //console.log(newData.id)\n\n              CalladdLanguage('shammya', newData, data);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              console.log(index);\n              setData([...dataUpdate]);\n              CallupdateLanguage('shammya', index + 1, newData);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              CalldeleteCountry('shammya', index + 1);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          actionsColumnIndex: -1,\n          addRowPosition: \"first\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LanguageComponent, \"b//7wJnBiDOaaP1aO2lcV1t1bJ8=\");\n\n_c = LanguageComponent;\nexport default LanguageComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageComponent\");","map":{"version":3,"sources":["D:/program/java/coursebucket/frontend/src/components/AdminPanel/LanguageComponent.js"],"names":["React","useEffect","MaterialTable","LanguageService","Drawer","Grid","LanguageComponent","props","useState","columns","setColumns","title","field","editable","data","setData","CallgetAllLanguages","getAllLanguages","then","response","console","log","CallupdateLanguage","language","updateLanguage","CalldeleteCountry","id","deleteCountry","CalladdLanguage","addLanguage","countries","height","width","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","actionsColumnIndex","addRowPosition"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport LanguageService from '../AdminPanel/api/LanguageService.js'\r\nimport { Drawer, Grid } from '@material-ui/core';\r\n\r\n\r\nfunction LanguageComponent(props) {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Id', field: 'id',editable : false },\r\n    { title: 'Language Name', field: 'name'\r\n    },\r\n    { title: 'Admin', field: 'adminId' }\r\n  ])\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  CallgetAllLanguages()\r\n\r\n  function getAllLanguages(){\r\n    LanguageService.getAllLanguages()\r\n        .then(response => {\r\n          console.log(response.data)\r\n          //callData(response.data)          \r\n          setData(response.data);\r\n          //setData(response.data)\r\n        }\r\n        )\r\n  }\r\n\r\n  function CallgetAllLanguages() {\r\n    useEffect(() => { getAllLanguages() }, [])\r\n  }\r\n\r\n  function CallupdateLanguage(language) {\r\n\r\n    LanguageService.updateLanguage(language)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalldeleteCountry( id) {\r\n\r\n    LanguageService.deleteCountry( id)\r\n      .then(response => {\r\n        ///console.log(response)\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  function CalladdLanguage(language) {\r\n\r\n    LanguageService.addLanguage(language)\r\n      .then(response => {\r\n        //console.log('call add : ')\r\n        //console.log(response.data)\r\n        setData([...countries,response.data])\r\n        //callData(response.data)\r\n        //setData(response.data)\r\n        getAllLanguages();\r\n      }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Grid container style={{ height: \"700px\" }}>\r\n      <Grid item sm={3}>\r\n        <Drawer\r\n          open={false}\r\n        />\r\n      </Grid>\r\n      <Grid item container sm={9}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}\r\n      >\r\n        <MaterialTable\r\n          style={{ width: \"80%\" }}\r\n          title=\"Language\"\r\n          columns={columns}\r\n          data={data}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n\r\n                setTimeout(() => {\r\n                  //setData([...data, newData]);\r\n                  newData.id = -1\r\n                  //console.log(newData.id)\r\n                  CalladdLanguage('shammya',newData,data)\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  console.log(index)\r\n                  setData([...dataUpdate]);\r\n                  CallupdateLanguage('shammya', index + 1, newData)\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n                  CalldeleteCountry('shammya', index + 1)\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n          }}\r\n          options={{\r\n            actionsColumnIndex: -1, addRowPosition: \"first\"\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LanguageComponent"]},"metadata":{},"sourceType":"module"}